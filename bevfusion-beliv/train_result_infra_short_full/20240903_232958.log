2024-09-03 23:30:00,267 - mmdet3d - INFO - Config:
seed = 0
deterministic = False
checkpoint_config = dict(interval=1, max_keep_ckpts=1)
log_config = dict(
    interval=50,
    hooks=[dict(type='TextLoggerHook'),
           dict(type='TensorboardLoggerHook')])
load_from = 'pretrained/lidar-only-det.pth'
resume_from = None
cudnn_benchmark = False
fp16 = dict(loss_scale=dict(growth_interval=2000))
max_epochs = 10
runner = dict(type='CustomEpochBasedRunner', max_epochs=10)
dataset_type = 'NuScenesDataset'
dataset_root = '/scratch/jmeng18/V2X-SIM/'
gt_paste_stop_epoch = -1
reduce_beams = 32
load_dim = 5
use_dim = 5
load_augmented = None
point_cloud_range = [-54.0, -54.0, -5.0, 54.0, 54.0, 3.0]
voxel_size = [0.075, 0.075, 0.2]
image_size = [256, 704]
augment2d = dict(
    resize=[[0.38, 0.55], [0.48, 0.48]],
    rotate=[-5.4, 5.4],
    gridmask=dict(prob=0.0, fixed_prob=True))
augment3d = dict(
    scale=[0.9, 1.1], rotate=[-0.78539816, 0.78539816], translate=0.5)
object_classes = ['car']
map_classes = [
    'drivable_area', 'ped_crossing', 'walkway', 'stop_line', 'carpark_area'
]
input_modality = dict(
    use_lidar=True,
    use_camera=True,
    use_radar=False,
    use_map=False,
    use_external=False)
train_pipeline = [
    dict(type='LoadMultiViewImageFromFiles', to_float32=True),
    dict(
        type='LoadPointsFromFile',
        coord_type='LIDAR',
        load_dim=5,
        use_dim=5,
        reduce_beams=32,
        load_augmented=None),
    dict(
        type='LoadPointsFromMultiSweeps',
        sweeps_num=0,
        load_dim=5,
        use_dim=5,
        reduce_beams=32,
        pad_empty_sweeps=True,
        remove_close=True,
        load_augmented=None),
    dict(
        type='LoadAnnotations3D',
        with_bbox_3d=True,
        with_label_3d=True,
        with_attr_label=False),
    dict(
        type='ObjectPaste',
        stop_epoch=-1,
        db_sampler=dict(
            dataset_root='/scratch/jmeng18/V2X-SIM/',
            info_path='/scratch/jmeng18/V2X-SIM/nuscenes_dbinfos_train.pkl',
            rate=1.0,
            prepare=dict(
                filter_by_difficulty=[-1], filter_by_min_points=dict(car=5)),
            classes=['car'],
            sample_groups=dict(car=2),
            points_loader=dict(
                type='LoadPointsFromFile',
                coord_type='LIDAR',
                load_dim=5,
                use_dim=5,
                reduce_beams=32))),
    dict(
        type='ImageAug3D',
        final_dim=[256, 704],
        resize_lim=[0.38, 0.55],
        bot_pct_lim=[0.0, 0.0],
        rot_lim=[-5.4, 5.4],
        rand_flip=True,
        is_train=True),
    dict(
        type='GlobalRotScaleTrans',
        resize_lim=[0.9, 1.1],
        rot_lim=[-0.78539816, 0.78539816],
        trans_lim=0.5,
        is_train=True),
    dict(type='RandomFlip3D'),
    dict(
        type='PointsRangeFilter',
        point_cloud_range=[-54.0, -54.0, -5.0, 54.0, 54.0, 3.0]),
    dict(
        type='ObjectRangeFilter',
        point_cloud_range=[-54.0, -54.0, -5.0, 54.0, 54.0, 3.0]),
    dict(type='ObjectNameFilter', classes=['car']),
    dict(
        type='ImageNormalize',
        mean=[0.485, 0.456, 0.406],
        std=[0.229, 0.224, 0.225]),
    dict(
        type='GridMask',
        use_h=True,
        use_w=True,
        max_epoch=10,
        rotate=1,
        offset=False,
        ratio=0.5,
        mode=1,
        prob=0.0,
        fixed_prob=True),
    dict(type='PointShuffle'),
    dict(type='DefaultFormatBundle3D', classes=['car']),
    dict(
        type='Collect3D',
        keys=['img', 'points', 'gt_bboxes_3d', 'gt_labels_3d'],
        meta_keys=[
            'camera_intrinsics', 'camera2ego', 'lidar2ego', 'lidar2camera',
            'lidar2image', 'camera2lidar', 'img_aug_matrix', 'lidar_aug_matrix'
        ]),
    dict(type='GTDepth', keyframe_only=True)
]
test_pipeline = [
    dict(type='LoadMultiViewImageFromFiles', to_float32=True),
    dict(
        type='LoadPointsFromFile',
        coord_type='LIDAR',
        load_dim=5,
        use_dim=5,
        reduce_beams=32,
        load_augmented=None),
    dict(
        type='LoadPointsFromMultiSweeps',
        sweeps_num=9,
        load_dim=5,
        use_dim=5,
        reduce_beams=32,
        pad_empty_sweeps=True,
        remove_close=True,
        load_augmented=None),
    dict(
        type='LoadAnnotations3D',
        with_bbox_3d=True,
        with_label_3d=True,
        with_attr_label=False),
    dict(
        type='ImageAug3D',
        final_dim=[256, 704],
        resize_lim=[0.48, 0.48],
        bot_pct_lim=[0.0, 0.0],
        rot_lim=[0.0, 0.0],
        rand_flip=False,
        is_train=False),
    dict(
        type='GlobalRotScaleTrans',
        resize_lim=[1.0, 1.0],
        rot_lim=[0.0, 0.0],
        trans_lim=0.0,
        is_train=False),
    dict(
        type='PointsRangeFilter',
        point_cloud_range=[-54.0, -54.0, -5.0, 54.0, 54.0, 3.0]),
    dict(
        type='ImageNormalize',
        mean=[0.485, 0.456, 0.406],
        std=[0.229, 0.224, 0.225]),
    dict(type='DefaultFormatBundle3D', classes=['car']),
    dict(
        type='Collect3D',
        keys=['img', 'points', 'gt_bboxes_3d', 'gt_labels_3d'],
        meta_keys=[
            'camera_intrinsics', 'camera2ego', 'lidar2ego', 'lidar2camera',
            'lidar2image', 'camera2lidar', 'img_aug_matrix', 'lidar_aug_matrix'
        ]),
    dict(type='GTDepth', keyframe_only=True)
]
data = dict(
    samples_per_gpu=1,
    workers_per_gpu=1,
    train=dict(
        type='CBGSDataset',
        dataset=dict(
            type='NuScenesDataset',
            dataset_root='/scratch/jmeng18/V2X-SIM/',
            ann_file='/scratch/jmeng18/V2X-SIM/nuscenes_infos_train.pkl',
            pipeline=[
                dict(type='LoadMultiViewImageFromFiles', to_float32=True),
                dict(
                    type='LoadPointsFromFile',
                    coord_type='LIDAR',
                    load_dim=5,
                    use_dim=5,
                    reduce_beams=32,
                    load_augmented=None),
                dict(
                    type='LoadPointsFromMultiSweeps',
                    sweeps_num=0,
                    load_dim=5,
                    use_dim=5,
                    reduce_beams=32,
                    pad_empty_sweeps=True,
                    remove_close=True,
                    load_augmented=None),
                dict(
                    type='LoadAnnotations3D',
                    with_bbox_3d=True,
                    with_label_3d=True,
                    with_attr_label=False),
                dict(
                    type='ObjectPaste',
                    stop_epoch=-1,
                    db_sampler=dict(
                        dataset_root='/scratch/jmeng18/V2X-SIM/',
                        info_path=
                        '/scratch/jmeng18/V2X-SIM/nuscenes_dbinfos_train.pkl',
                        rate=1.0,
                        prepare=dict(
                            filter_by_difficulty=[-1],
                            filter_by_min_points=dict(car=5)),
                        classes=['car'],
                        sample_groups=dict(car=2),
                        points_loader=dict(
                            type='LoadPointsFromFile',
                            coord_type='LIDAR',
                            load_dim=5,
                            use_dim=5,
                            reduce_beams=32))),
                dict(
                    type='ImageAug3D',
                    final_dim=[256, 704],
                    resize_lim=[0.38, 0.55],
                    bot_pct_lim=[0.0, 0.0],
                    rot_lim=[-5.4, 5.4],
                    rand_flip=True,
                    is_train=True),
                dict(
                    type='GlobalRotScaleTrans',
                    resize_lim=[0.9, 1.1],
                    rot_lim=[-0.78539816, 0.78539816],
                    trans_lim=0.5,
                    is_train=True),
                dict(type='RandomFlip3D'),
                dict(
                    type='PointsRangeFilter',
                    point_cloud_range=[-54.0, -54.0, -5.0, 54.0, 54.0, 3.0]),
                dict(
                    type='ObjectRangeFilter',
                    point_cloud_range=[-54.0, -54.0, -5.0, 54.0, 54.0, 3.0]),
                dict(type='ObjectNameFilter', classes=['car']),
                dict(
                    type='ImageNormalize',
                    mean=[0.485, 0.456, 0.406],
                    std=[0.229, 0.224, 0.225]),
                dict(
                    type='GridMask',
                    use_h=True,
                    use_w=True,
                    max_epoch=10,
                    rotate=1,
                    offset=False,
                    ratio=0.5,
                    mode=1,
                    prob=0.0,
                    fixed_prob=True),
                dict(type='PointShuffle'),
                dict(type='DefaultFormatBundle3D', classes=['car']),
                dict(
                    type='Collect3D',
                    keys=['img', 'points', 'gt_bboxes_3d', 'gt_labels_3d'],
                    meta_keys=[
                        'camera_intrinsics', 'camera2ego', 'lidar2ego',
                        'lidar2camera', 'lidar2image', 'camera2lidar',
                        'img_aug_matrix', 'lidar_aug_matrix'
                    ]),
                dict(type='GTDepth', keyframe_only=True)
            ],
            object_classes=['car'],
            map_classes=[
                'drivable_area', 'ped_crossing', 'walkway', 'stop_line',
                'carpark_area'
            ],
            modality=dict(
                use_lidar=True,
                use_camera=True,
                use_radar=False,
                use_map=False,
                use_external=False),
            test_mode=False,
            use_valid_flag=True,
            box_type_3d='LiDAR')),
    val=dict(
        type='NuScenesDataset',
        dataset_root='/scratch/jmeng18/V2X-SIM/',
        ann_file='/scratch/jmeng18/V2X-SIM/nuscenes_infos_val.pkl',
        pipeline=[
            dict(type='LoadMultiViewImageFromFiles', to_float32=True),
            dict(
                type='LoadPointsFromFile',
                coord_type='LIDAR',
                load_dim=5,
                use_dim=5,
                reduce_beams=32,
                load_augmented=None),
            dict(
                type='LoadPointsFromMultiSweeps',
                sweeps_num=9,
                load_dim=5,
                use_dim=5,
                reduce_beams=32,
                pad_empty_sweeps=True,
                remove_close=True,
                load_augmented=None),
            dict(
                type='LoadAnnotations3D',
                with_bbox_3d=True,
                with_label_3d=True,
                with_attr_label=False),
            dict(
                type='ImageAug3D',
                final_dim=[256, 704],
                resize_lim=[0.48, 0.48],
                bot_pct_lim=[0.0, 0.0],
                rot_lim=[0.0, 0.0],
                rand_flip=False,
                is_train=False),
            dict(
                type='GlobalRotScaleTrans',
                resize_lim=[1.0, 1.0],
                rot_lim=[0.0, 0.0],
                trans_lim=0.0,
                is_train=False),
            dict(
                type='PointsRangeFilter',
                point_cloud_range=[-54.0, -54.0, -5.0, 54.0, 54.0, 3.0]),
            dict(
                type='ImageNormalize',
                mean=[0.485, 0.456, 0.406],
                std=[0.229, 0.224, 0.225]),
            dict(type='DefaultFormatBundle3D', classes=['car']),
            dict(
                type='Collect3D',
                keys=['img', 'points', 'gt_bboxes_3d', 'gt_labels_3d'],
                meta_keys=[
                    'camera_intrinsics', 'camera2ego', 'lidar2ego',
                    'lidar2camera', 'lidar2image', 'camera2lidar',
                    'img_aug_matrix', 'lidar_aug_matrix'
                ]),
            dict(type='GTDepth', keyframe_only=True)
        ],
        object_classes=['car'],
        map_classes=[
            'drivable_area', 'ped_crossing', 'walkway', 'stop_line',
            'carpark_area'
        ],
        modality=dict(
            use_lidar=True,
            use_camera=True,
            use_radar=False,
            use_map=False,
            use_external=False),
        test_mode=False,
        box_type_3d='LiDAR'),
    test=dict(
        type='NuScenesDataset',
        dataset_root='/scratch/jmeng18/V2X-SIM/',
        ann_file='/scratch/jmeng18/V2X-SIM/nuscenes_infos_val.pkl',
        pipeline=[
            dict(type='LoadMultiViewImageFromFiles', to_float32=True),
            dict(
                type='LoadPointsFromFile',
                coord_type='LIDAR',
                load_dim=5,
                use_dim=5,
                reduce_beams=32,
                load_augmented=None),
            dict(
                type='LoadPointsFromMultiSweeps',
                sweeps_num=9,
                load_dim=5,
                use_dim=5,
                reduce_beams=32,
                pad_empty_sweeps=True,
                remove_close=True,
                load_augmented=None),
            dict(
                type='LoadAnnotations3D',
                with_bbox_3d=True,
                with_label_3d=True,
                with_attr_label=False),
            dict(
                type='ImageAug3D',
                final_dim=[256, 704],
                resize_lim=[0.48, 0.48],
                bot_pct_lim=[0.0, 0.0],
                rot_lim=[0.0, 0.0],
                rand_flip=False,
                is_train=False),
            dict(
                type='GlobalRotScaleTrans',
                resize_lim=[1.0, 1.0],
                rot_lim=[0.0, 0.0],
                trans_lim=0.0,
                is_train=False),
            dict(
                type='PointsRangeFilter',
                point_cloud_range=[-54.0, -54.0, -5.0, 54.0, 54.0, 3.0]),
            dict(
                type='ImageNormalize',
                mean=[0.485, 0.456, 0.406],
                std=[0.229, 0.224, 0.225]),
            dict(type='DefaultFormatBundle3D', classes=['car']),
            dict(
                type='Collect3D',
                keys=['img', 'points', 'gt_bboxes_3d', 'gt_labels_3d'],
                meta_keys=[
                    'camera_intrinsics', 'camera2ego', 'lidar2ego',
                    'lidar2camera', 'lidar2image', 'camera2lidar',
                    'img_aug_matrix', 'lidar_aug_matrix'
                ]),
            dict(type='GTDepth', keyframe_only=True)
        ],
        object_classes=['car'],
        map_classes=[
            'drivable_area', 'ped_crossing', 'walkway', 'stop_line',
            'carpark_area'
        ],
        modality=dict(
            use_lidar=True,
            use_camera=True,
            use_radar=False,
            use_map=False,
            use_external=False),
        test_mode=True,
        box_type_3d='LiDAR'))
evaluation = dict(
    interval=1,
    pipeline=[
        dict(type='LoadMultiViewImageFromFiles', to_float32=True),
        dict(
            type='LoadPointsFromFile',
            coord_type='LIDAR',
            load_dim=5,
            use_dim=5,
            reduce_beams=32,
            load_augmented=None),
        dict(
            type='LoadPointsFromMultiSweeps',
            sweeps_num=9,
            load_dim=5,
            use_dim=5,
            reduce_beams=32,
            pad_empty_sweeps=True,
            remove_close=True,
            load_augmented=None),
        dict(
            type='LoadAnnotations3D',
            with_bbox_3d=True,
            with_label_3d=True,
            with_attr_label=False),
        dict(
            type='ImageAug3D',
            final_dim=[256, 704],
            resize_lim=[0.48, 0.48],
            bot_pct_lim=[0.0, 0.0],
            rot_lim=[0.0, 0.0],
            rand_flip=False,
            is_train=False),
        dict(
            type='GlobalRotScaleTrans',
            resize_lim=[1.0, 1.0],
            rot_lim=[0.0, 0.0],
            trans_lim=0.0,
            is_train=False),
        dict(
            type='PointsRangeFilter',
            point_cloud_range=[-54.0, -54.0, -5.0, 54.0, 54.0, 3.0]),
        dict(
            type='ImageNormalize',
            mean=[0.485, 0.456, 0.406],
            std=[0.229, 0.224, 0.225]),
        dict(type='DefaultFormatBundle3D', classes=['car']),
        dict(
            type='Collect3D',
            keys=['img', 'points', 'gt_bboxes_3d', 'gt_labels_3d'],
            meta_keys=[
                'camera_intrinsics', 'camera2ego', 'lidar2ego', 'lidar2camera',
                'lidar2image', 'camera2lidar', 'img_aug_matrix',
                'lidar_aug_matrix'
            ]),
        dict(type='GTDepth', keyframe_only=True)
    ])
radar_sweeps = 6
radar_max_points = 2500
radar_use_dims = [
    0, 1, 2, 5, 8, 9, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
    32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50,
    51, 52, 53, 54, 55, 56
]
radar_compensate_velocity = True
radar_filtering = 'none'
radar_voxel_size = [0.8, 0.8, 8]
radar_jitter = 0
radar_normalize = False
model = dict(
    type='BEVFusion',
    encoders=dict(
        camera=dict(
            neck=dict(
                type='GeneralizedLSSFPN',
                in_channels=[192, 384, 768],
                out_channels=256,
                start_level=0,
                num_outs=3,
                norm_cfg=dict(type='BN2d', requires_grad=True),
                act_cfg=dict(type='ReLU', inplace=True),
                upsample_cfg=dict(mode='bilinear', align_corners=False)),
            vtransform=dict(
                type='DepthLSSTransform',
                in_channels=256,
                out_channels=80,
                image_size=[256, 704],
                feature_size=[32, 88],
                xbound=[-54.0, 54.0, 0.3],
                ybound=[-54.0, 54.0, 0.3],
                zbound=[-10.0, 10.0, 20.0],
                dbound=[1.0, 60.0, 0.5],
                downsample=2),
            backbone=dict(
                type='SwinTransformer',
                embed_dims=96,
                depths=[2, 2, 6, 2],
                num_heads=[3, 6, 12, 24],
                window_size=7,
                mlp_ratio=4,
                qkv_bias=True,
                qk_scale=None,
                drop_rate=0.0,
                attn_drop_rate=0.0,
                drop_path_rate=0.2,
                patch_norm=True,
                out_indices=[1, 2, 3],
                with_cp=False,
                convert_weights=True,
                init_cfg=dict(
                    type='Pretrained',
                    checkpoint='pretrained/swint-nuimages-pretrained.pth'))),
        lidar=dict(
            voxelize=dict(
                max_num_points=10,
                point_cloud_range=[-54.0, -54.0, -5.0, 54.0, 54.0, 3.0],
                voxel_size=[0.075, 0.075, 0.2],
                max_voxels=[120000, 160000]),
            backbone=dict(
                type='SparseEncoder',
                in_channels=5,
                sparse_shape=[1440, 1440, 41],
                output_channels=128,
                order=['conv', 'norm', 'act'],
                encoder_channels=[[16, 16, 32], [32, 32, 64], [64, 64, 128],
                                  [128, 128]],
                encoder_paddings=[[0, 0, 1], [0, 0, 1], [0, 0, [1, 1, 0]],
                                  [0, 0]],
                block_type='basicblock')),
        infra=dict(
            neck=dict(
                type='GeneralizedLSSFPN',
                in_channels=[192, 384, 768],
                out_channels=256,
                start_level=0,
                num_outs=3,
                norm_cfg=dict(type='BN2d', requires_grad=True),
                act_cfg=dict(type='ReLU', inplace=True),
                upsample_cfg=dict(mode='bilinear', align_corners=False)),
            vtransform=dict(
                type='DepthLSSTransform',
                in_channels=256,
                out_channels=80,
                image_size=[256, 704],
                feature_size=[32, 88],
                xbound=[-54.0, 54.0, 0.3],
                ybound=[-54.0, 54.0, 0.3],
                zbound=[-10.0, 10.0, 20.0],
                dbound=[1.0, 60.0, 0.5],
                downsample=2),
            backbone=dict(
                type='SwinTransformer',
                embed_dims=96,
                depths=[2, 2, 6, 2],
                num_heads=[3, 6, 12, 24],
                window_size=7,
                mlp_ratio=4,
                qkv_bias=True,
                qk_scale=None,
                drop_rate=0.0,
                attn_drop_rate=0.0,
                drop_path_rate=0.2,
                patch_norm=True,
                out_indices=[1, 2, 3],
                with_cp=False,
                convert_weights=True,
                init_cfg=dict(
                    type='Pretrained',
                    checkpoint=
                    'https://github.com/SwinTransformer/storage/releases/download/v1.0.0/swin_tiny_patch4_window7_224.pth'
                )))),
    fuser=dict(type='ConvFuser', in_channels=[80, 256, 80], out_channels=256),
    heads=dict(
        map=None,
        object=dict(
            type='TransFusionHead',
            num_proposals=200,
            auxiliary=True,
            in_channels=512,
            hidden_channel=128,
            num_classes=1,
            num_decoder_layers=1,
            num_heads=8,
            nms_kernel_size=3,
            ffn_channel=256,
            dropout=0.1,
            bn_momentum=0.1,
            activation='relu',
            train_cfg=dict(
                dataset='nuScenes',
                point_cloud_range=[-54.0, -54.0, -5.0, 54.0, 54.0, 3.0],
                grid_size=[1440, 1440, 41],
                voxel_size=[0.075, 0.075, 0.2],
                out_size_factor=8,
                gaussian_overlap=0.1,
                min_radius=2,
                pos_weight=-1,
                code_weights=[1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0],
                assigner=dict(
                    type='HungarianAssigner3D',
                    iou_calculator=dict(
                        type='BboxOverlaps3D', coordinate='lidar'),
                    cls_cost=dict(
                        type='FocalLossCost',
                        gamma=2.0,
                        alpha=0.25,
                        weight=0.15),
                    reg_cost=dict(type='BBoxBEVL1Cost', weight=0.25),
                    iou_cost=dict(type='IoU3DCost', weight=0.25))),
            test_cfg=dict(
                dataset='nuScenes',
                grid_size=[1440, 1440, 41],
                out_size_factor=8,
                voxel_size=[0.075, 0.075],
                pc_range=[-54.0, -54.0],
                nms_type=None),
            common_heads=dict(
                center=[2, 2],
                height=[1, 2],
                dim=[3, 2],
                rot=[2, 2],
                vel=[2, 2]),
            bbox_coder=dict(
                type='TransFusionBBoxCoder',
                pc_range=[-54.0, -54.0],
                post_center_range=[-61.2, -61.2, -10.0, 61.2, 61.2, 10.0],
                score_threshold=0.0,
                out_size_factor=8,
                voxel_size=[0.075, 0.075]),
            loss_cls=dict(
                type='FocalLoss',
                use_sigmoid=True,
                gamma=2.0,
                alpha=0.25,
                reduction='mean',
                loss_weight=1.0),
            loss_heatmap=dict(
                type='GaussianFocalLoss', reduction='mean', loss_weight=1.0),
            loss_bbox=dict(type='L1Loss', reduction='mean',
                           loss_weight=0.25))),
    decoder=dict(
        backbone=dict(
            type='SECOND',
            in_channels=256,
            out_channels=[128, 256],
            layer_nums=[5, 5],
            layer_strides=[1, 2],
            norm_cfg=dict(type='BN', eps=0.001, momentum=0.01),
            conv_cfg=dict(type='Conv2d', bias=False)),
        neck=dict(
            type='SECONDFPN',
            in_channels=[128, 256],
            out_channels=[256, 256],
            upsample_strides=[1, 2],
            norm_cfg=dict(type='BN', eps=0.001, momentum=0.01),
            upsample_cfg=dict(type='deconv', bias=False),
            use_conv_for_no_stride=True)))
optimizer = dict(type='AdamW', lr=0.0002, weight_decay=0.01)
optimizer_config = dict(grad_clip=dict(max_norm=35, norm_type=2))
lr_config = dict(
    policy='CosineAnnealing',
    warmup='linear',
    warmup_iters=500,
    warmup_ratio=0.33333333,
    min_lr_ratio=1e-07)
momentum_config = dict(policy='cyclic')
run_dir = 'train_result_infra_short_full'

2024-09-03 23:30:00,267 - mmdet3d - INFO - Set random seed to 0, deterministic mode: False
2024-09-03 23:30:06,889 - mmdet3d - INFO - load 349483 car database infos
2024-09-03 23:30:06,889 - mmdet3d - INFO - load 157002 bicycle database infos
2024-09-03 23:30:06,889 - mmdet3d - INFO - load 40210 motorcycle database infos
2024-09-03 23:30:06,889 - mmdet3d - INFO - load 16943 vehicle.emergency.police database infos
2024-09-03 23:30:07,714 - mmdet3d - INFO - After filter database:
2024-09-03 23:30:07,726 - mmdet3d - INFO - load 170227 car database infos
2024-09-03 23:30:07,726 - mmdet3d - INFO - load 157002 bicycle database infos
2024-09-03 23:30:07,727 - mmdet3d - INFO - load 40210 motorcycle database infos
2024-09-03 23:30:07,728 - mmdet3d - INFO - load 16943 vehicle.emergency.police database infos
2024-09-03 23:30:08,507 - mmdet3d - INFO - Model:
BEVFusion(
  (encoders): ModuleDict(
    (camera): ModuleDict(
      (backbone): SwinTransformer(
        (patch_embed): PatchEmbed(
          (adap_padding): AdaptivePadding()
          (projection): Conv2d(3, 96, kernel_size=(4, 4), stride=(4, 4))
          (norm): LayerNorm((96,), eps=1e-05, elementwise_affine=True)
        )
        (drop_after_pos): Dropout(p=0.0, inplace=False)
        (stages): ModuleList(
          (0): SwinBlockSequence(
            (blocks): ModuleList(
              (0): SwinBlock(
                (norm1): LayerNorm((96,), eps=1e-05, elementwise_affine=True)
                (attn): ShiftWindowMSA(
                  (w_msa): WindowMSA(
                    (qkv): Linear(in_features=96, out_features=288, bias=True)
                    (attn_drop): Dropout(p=0.0, inplace=False)
                    (proj): Linear(in_features=96, out_features=96, bias=True)
                    (proj_drop): Dropout(p=0.0, inplace=False)
                    (softmax): Softmax(dim=-1)
                  )
                  (drop): DropPath()
                )
                (norm2): LayerNorm((96,), eps=1e-05, elementwise_affine=True)
                (ffn): FFN(
                  (activate): GELU()
                  (layers): Sequential(
                    (0): Sequential(
                      (0): Linear(in_features=96, out_features=384, bias=True)
                      (1): GELU()
                      (2): Dropout(p=0.0, inplace=False)
                    )
                    (1): Linear(in_features=384, out_features=96, bias=True)
                    (2): Dropout(p=0.0, inplace=False)
                  )
                  (dropout_layer): DropPath()
                )
              )
              (1): SwinBlock(
                (norm1): LayerNorm((96,), eps=1e-05, elementwise_affine=True)
                (attn): ShiftWindowMSA(
                  (w_msa): WindowMSA(
                    (qkv): Linear(in_features=96, out_features=288, bias=True)
                    (attn_drop): Dropout(p=0.0, inplace=False)
                    (proj): Linear(in_features=96, out_features=96, bias=True)
                    (proj_drop): Dropout(p=0.0, inplace=False)
                    (softmax): Softmax(dim=-1)
                  )
                  (drop): DropPath()
                )
                (norm2): LayerNorm((96,), eps=1e-05, elementwise_affine=True)
                (ffn): FFN(
                  (activate): GELU()
                  (layers): Sequential(
                    (0): Sequential(
                      (0): Linear(in_features=96, out_features=384, bias=True)
                      (1): GELU()
                      (2): Dropout(p=0.0, inplace=False)
                    )
                    (1): Linear(in_features=384, out_features=96, bias=True)
                    (2): Dropout(p=0.0, inplace=False)
                  )
                  (dropout_layer): DropPath()
                )
              )
            )
            (downsample): PatchMerging(
              (adap_padding): AdaptivePadding()
              (sampler): Unfold(kernel_size=(2, 2), dilation=(1, 1), padding=(0, 0), stride=(2, 2))
              (norm): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
              (reduction): Linear(in_features=384, out_features=192, bias=False)
            )
          )
          (1): SwinBlockSequence(
            (blocks): ModuleList(
              (0): SwinBlock(
                (norm1): LayerNorm((192,), eps=1e-05, elementwise_affine=True)
                (attn): ShiftWindowMSA(
                  (w_msa): WindowMSA(
                    (qkv): Linear(in_features=192, out_features=576, bias=True)
                    (attn_drop): Dropout(p=0.0, inplace=False)
                    (proj): Linear(in_features=192, out_features=192, bias=True)
                    (proj_drop): Dropout(p=0.0, inplace=False)
                    (softmax): Softmax(dim=-1)
                  )
                  (drop): DropPath()
                )
                (norm2): LayerNorm((192,), eps=1e-05, elementwise_affine=True)
                (ffn): FFN(
                  (activate): GELU()
                  (layers): Sequential(
                    (0): Sequential(
                      (0): Linear(in_features=192, out_features=768, bias=True)
                      (1): GELU()
                      (2): Dropout(p=0.0, inplace=False)
                    )
                    (1): Linear(in_features=768, out_features=192, bias=True)
                    (2): Dropout(p=0.0, inplace=False)
                  )
                  (dropout_layer): DropPath()
                )
              )
              (1): SwinBlock(
                (norm1): LayerNorm((192,), eps=1e-05, elementwise_affine=True)
                (attn): ShiftWindowMSA(
                  (w_msa): WindowMSA(
                    (qkv): Linear(in_features=192, out_features=576, bias=True)
                    (attn_drop): Dropout(p=0.0, inplace=False)
                    (proj): Linear(in_features=192, out_features=192, bias=True)
                    (proj_drop): Dropout(p=0.0, inplace=False)
                    (softmax): Softmax(dim=-1)
                  )
                  (drop): DropPath()
                )
                (norm2): LayerNorm((192,), eps=1e-05, elementwise_affine=True)
                (ffn): FFN(
                  (activate): GELU()
                  (layers): Sequential(
                    (0): Sequential(
                      (0): Linear(in_features=192, out_features=768, bias=True)
                      (1): GELU()
                      (2): Dropout(p=0.0, inplace=False)
                    )
                    (1): Linear(in_features=768, out_features=192, bias=True)
                    (2): Dropout(p=0.0, inplace=False)
                  )
                  (dropout_layer): DropPath()
                )
              )
            )
            (downsample): PatchMerging(
              (adap_padding): AdaptivePadding()
              (sampler): Unfold(kernel_size=(2, 2), dilation=(1, 1), padding=(0, 0), stride=(2, 2))
              (norm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
              (reduction): Linear(in_features=768, out_features=384, bias=False)
            )
          )
          (2): SwinBlockSequence(
            (blocks): ModuleList(
              (0): SwinBlock(
                (norm1): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
                (attn): ShiftWindowMSA(
                  (w_msa): WindowMSA(
                    (qkv): Linear(in_features=384, out_features=1152, bias=True)
                    (attn_drop): Dropout(p=0.0, inplace=False)
                    (proj): Linear(in_features=384, out_features=384, bias=True)
                    (proj_drop): Dropout(p=0.0, inplace=False)
                    (softmax): Softmax(dim=-1)
                  )
                  (drop): DropPath()
                )
                (norm2): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
                (ffn): FFN(
                  (activate): GELU()
                  (layers): Sequential(
                    (0): Sequential(
                      (0): Linear(in_features=384, out_features=1536, bias=True)
                      (1): GELU()
                      (2): Dropout(p=0.0, inplace=False)
                    )
                    (1): Linear(in_features=1536, out_features=384, bias=True)
                    (2): Dropout(p=0.0, inplace=False)
                  )
                  (dropout_layer): DropPath()
                )
              )
              (1): SwinBlock(
                (norm1): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
                (attn): ShiftWindowMSA(
                  (w_msa): WindowMSA(
                    (qkv): Linear(in_features=384, out_features=1152, bias=True)
                    (attn_drop): Dropout(p=0.0, inplace=False)
                    (proj): Linear(in_features=384, out_features=384, bias=True)
                    (proj_drop): Dropout(p=0.0, inplace=False)
                    (softmax): Softmax(dim=-1)
                  )
                  (drop): DropPath()
                )
                (norm2): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
                (ffn): FFN(
                  (activate): GELU()
                  (layers): Sequential(
                    (0): Sequential(
                      (0): Linear(in_features=384, out_features=1536, bias=True)
                      (1): GELU()
                      (2): Dropout(p=0.0, inplace=False)
                    )
                    (1): Linear(in_features=1536, out_features=384, bias=True)
                    (2): Dropout(p=0.0, inplace=False)
                  )
                  (dropout_layer): DropPath()
                )
              )
              (2): SwinBlock(
                (norm1): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
                (attn): ShiftWindowMSA(
                  (w_msa): WindowMSA(
                    (qkv): Linear(in_features=384, out_features=1152, bias=True)
                    (attn_drop): Dropout(p=0.0, inplace=False)
                    (proj): Linear(in_features=384, out_features=384, bias=True)
                    (proj_drop): Dropout(p=0.0, inplace=False)
                    (softmax): Softmax(dim=-1)
                  )
                  (drop): DropPath()
                )
                (norm2): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
                (ffn): FFN(
                  (activate): GELU()
                  (layers): Sequential(
                    (0): Sequential(
                      (0): Linear(in_features=384, out_features=1536, bias=True)
                      (1): GELU()
                      (2): Dropout(p=0.0, inplace=False)
                    )
                    (1): Linear(in_features=1536, out_features=384, bias=True)
                    (2): Dropout(p=0.0, inplace=False)
                  )
                  (dropout_layer): DropPath()
                )
              )
              (3): SwinBlock(
                (norm1): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
                (attn): ShiftWindowMSA(
                  (w_msa): WindowMSA(
                    (qkv): Linear(in_features=384, out_features=1152, bias=True)
                    (attn_drop): Dropout(p=0.0, inplace=False)
                    (proj): Linear(in_features=384, out_features=384, bias=True)
                    (proj_drop): Dropout(p=0.0, inplace=False)
                    (softmax): Softmax(dim=-1)
                  )
                  (drop): DropPath()
                )
                (norm2): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
                (ffn): FFN(
                  (activate): GELU()
                  (layers): Sequential(
                    (0): Sequential(
                      (0): Linear(in_features=384, out_features=1536, bias=True)
                      (1): GELU()
                      (2): Dropout(p=0.0, inplace=False)
                    )
                    (1): Linear(in_features=1536, out_features=384, bias=True)
                    (2): Dropout(p=0.0, inplace=False)
                  )
                  (dropout_layer): DropPath()
                )
              )
              (4): SwinBlock(
                (norm1): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
                (attn): ShiftWindowMSA(
                  (w_msa): WindowMSA(
                    (qkv): Linear(in_features=384, out_features=1152, bias=True)
                    (attn_drop): Dropout(p=0.0, inplace=False)
                    (proj): Linear(in_features=384, out_features=384, bias=True)
                    (proj_drop): Dropout(p=0.0, inplace=False)
                    (softmax): Softmax(dim=-1)
                  )
                  (drop): DropPath()
                )
                (norm2): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
                (ffn): FFN(
                  (activate): GELU()
                  (layers): Sequential(
                    (0): Sequential(
                      (0): Linear(in_features=384, out_features=1536, bias=True)
                      (1): GELU()
                      (2): Dropout(p=0.0, inplace=False)
                    )
                    (1): Linear(in_features=1536, out_features=384, bias=True)
                    (2): Dropout(p=0.0, inplace=False)
                  )
                  (dropout_layer): DropPath()
                )
              )
              (5): SwinBlock(
                (norm1): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
                (attn): ShiftWindowMSA(
                  (w_msa): WindowMSA(
                    (qkv): Linear(in_features=384, out_features=1152, bias=True)
                    (attn_drop): Dropout(p=0.0, inplace=False)
                    (proj): Linear(in_features=384, out_features=384, bias=True)
                    (proj_drop): Dropout(p=0.0, inplace=False)
                    (softmax): Softmax(dim=-1)
                  )
                  (drop): DropPath()
                )
                (norm2): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
                (ffn): FFN(
                  (activate): GELU()
                  (layers): Sequential(
                    (0): Sequential(
                      (0): Linear(in_features=384, out_features=1536, bias=True)
                      (1): GELU()
                      (2): Dropout(p=0.0, inplace=False)
                    )
                    (1): Linear(in_features=1536, out_features=384, bias=True)
                    (2): Dropout(p=0.0, inplace=False)
                  )
                  (dropout_layer): DropPath()
                )
              )
            )
            (downsample): PatchMerging(
              (adap_padding): AdaptivePadding()
              (sampler): Unfold(kernel_size=(2, 2), dilation=(1, 1), padding=(0, 0), stride=(2, 2))
              (norm): LayerNorm((1536,), eps=1e-05, elementwise_affine=True)
              (reduction): Linear(in_features=1536, out_features=768, bias=False)
            )
          )
          (3): SwinBlockSequence(
            (blocks): ModuleList(
              (0): SwinBlock(
                (norm1): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
                (attn): ShiftWindowMSA(
                  (w_msa): WindowMSA(
                    (qkv): Linear(in_features=768, out_features=2304, bias=True)
                    (attn_drop): Dropout(p=0.0, inplace=False)
                    (proj): Linear(in_features=768, out_features=768, bias=True)
                    (proj_drop): Dropout(p=0.0, inplace=False)
                    (softmax): Softmax(dim=-1)
                  )
                  (drop): DropPath()
                )
                (norm2): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
                (ffn): FFN(
                  (activate): GELU()
                  (layers): Sequential(
                    (0): Sequential(
                      (0): Linear(in_features=768, out_features=3072, bias=True)
                      (1): GELU()
                      (2): Dropout(p=0.0, inplace=False)
                    )
                    (1): Linear(in_features=3072, out_features=768, bias=True)
                    (2): Dropout(p=0.0, inplace=False)
                  )
                  (dropout_layer): DropPath()
                )
              )
              (1): SwinBlock(
                (norm1): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
                (attn): ShiftWindowMSA(
                  (w_msa): WindowMSA(
                    (qkv): Linear(in_features=768, out_features=2304, bias=True)
                    (attn_drop): Dropout(p=0.0, inplace=False)
                    (proj): Linear(in_features=768, out_features=768, bias=True)
                    (proj_drop): Dropout(p=0.0, inplace=False)
                    (softmax): Softmax(dim=-1)
                  )
                  (drop): DropPath()
                )
                (norm2): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
                (ffn): FFN(
                  (activate): GELU()
                  (layers): Sequential(
                    (0): Sequential(
                      (0): Linear(in_features=768, out_features=3072, bias=True)
                      (1): GELU()
                      (2): Dropout(p=0.0, inplace=False)
                    )
                    (1): Linear(in_features=3072, out_features=768, bias=True)
                    (2): Dropout(p=0.0, inplace=False)
                  )
                  (dropout_layer): DropPath()
                )
              )
            )
          )
        )
        (norm1): LayerNorm((192,), eps=1e-05, elementwise_affine=True)
        (norm2): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
        (norm3): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
      )
      init_cfg={'type': 'Pretrained', 'checkpoint': 'pretrained/swint-nuimages-pretrained.pth'}
      (neck): GeneralizedLSSFPN(
        (lateral_convs): ModuleList(
          (0): ConvModule(
            (conv): Conv2d(448, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (activate): ReLU(inplace=True)
          )
          (1): ConvModule(
            (conv): Conv2d(1152, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (activate): ReLU(inplace=True)
          )
        )
        (fpn_convs): ModuleList(
          (0): ConvModule(
            (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (activate): ReLU(inplace=True)
          )
          (1): ConvModule(
            (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (activate): ReLU(inplace=True)
          )
        )
      )
      (vtransform): DepthLSSTransform(
        (dtransform): Sequential(
          (0): Conv2d(1, 8, kernel_size=(1, 1), stride=(1, 1))
          (1): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
          (3): Conv2d(8, 32, kernel_size=(5, 5), stride=(4, 4), padding=(2, 2))
          (4): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (5): ReLU(inplace=True)
          (6): Conv2d(32, 64, kernel_size=(5, 5), stride=(2, 2), padding=(2, 2))
          (7): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (8): ReLU(inplace=True)
        )
        (depthnet): Sequential(
          (0): Conv2d(320, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
          (3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (4): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (5): ReLU(inplace=True)
          (6): Conv2d(256, 198, kernel_size=(1, 1), stride=(1, 1))
        )
        (downsample): Sequential(
          (0): Conv2d(80, 80, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (1): BatchNorm2d(80, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
          (3): Conv2d(80, 80, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
          (4): BatchNorm2d(80, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (5): ReLU(inplace=True)
          (6): Conv2d(80, 80, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (7): BatchNorm2d(80, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (8): ReLU(inplace=True)
        )
      )
    )
    (lidar): ModuleDict(
      (voxelize): Voxelization(voxel_size=[0.075, 0.075, 0.2], point_cloud_range=[-54.0, -54.0, -5.0, 54.0, 54.0, 3.0], max_num_points=10, max_voxels=(120000, 160000), deterministic=True)
      (backbone): SparseEncoder(
        (conv_input): SparseSequential(
          (0): SubMConv3d()
          (1): BatchNorm1d(16, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
        (encoder_layers): SparseSequential(
          (encoder_layer1): SparseSequential(
            (0): SparseBasicBlock(
              (conv1): SubMConv3d()
              (bn1): BatchNorm1d(16, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
              (conv2): SubMConv3d()
              (bn2): BatchNorm1d(16, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (1): SparseBasicBlock(
              (conv1): SubMConv3d()
              (bn1): BatchNorm1d(16, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
              (conv2): SubMConv3d()
              (bn2): BatchNorm1d(16, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (2): SparseSequential(
              (0): SparseConv3d()
              (1): BatchNorm1d(32, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
          )
          (encoder_layer2): SparseSequential(
            (0): SparseBasicBlock(
              (conv1): SubMConv3d()
              (bn1): BatchNorm1d(32, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
              (conv2): SubMConv3d()
              (bn2): BatchNorm1d(32, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (1): SparseBasicBlock(
              (conv1): SubMConv3d()
              (bn1): BatchNorm1d(32, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
              (conv2): SubMConv3d()
              (bn2): BatchNorm1d(32, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (2): SparseSequential(
              (0): SparseConv3d()
              (1): BatchNorm1d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
          )
          (encoder_layer3): SparseSequential(
            (0): SparseBasicBlock(
              (conv1): SubMConv3d()
              (bn1): BatchNorm1d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
              (conv2): SubMConv3d()
              (bn2): BatchNorm1d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (1): SparseBasicBlock(
              (conv1): SubMConv3d()
              (bn1): BatchNorm1d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
              (conv2): SubMConv3d()
              (bn2): BatchNorm1d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (2): SparseSequential(
              (0): SparseConv3d()
              (1): BatchNorm1d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
          )
          (encoder_layer4): SparseSequential(
            (0): SparseBasicBlock(
              (conv1): SubMConv3d()
              (bn1): BatchNorm1d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
              (conv2): SubMConv3d()
              (bn2): BatchNorm1d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (1): SparseBasicBlock(
              (conv1): SubMConv3d()
              (bn1): BatchNorm1d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
              (conv2): SubMConv3d()
              (bn2): BatchNorm1d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
          )
        )
        (conv_out): SparseSequential(
          (0): SparseConv3d()
          (1): BatchNorm1d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
    )
    (infra): ModuleDict(
      (backbone): SwinTransformer(
        (patch_embed): PatchEmbed(
          (adap_padding): AdaptivePadding()
          (projection): Conv2d(3, 96, kernel_size=(4, 4), stride=(4, 4))
          (norm): LayerNorm((96,), eps=1e-05, elementwise_affine=True)
        )
        (drop_after_pos): Dropout(p=0.0, inplace=False)
        (stages): ModuleList(
          (0): SwinBlockSequence(
            (blocks): ModuleList(
              (0): SwinBlock(
                (norm1): LayerNorm((96,), eps=1e-05, elementwise_affine=True)
                (attn): ShiftWindowMSA(
                  (w_msa): WindowMSA(
                    (qkv): Linear(in_features=96, out_features=288, bias=True)
                    (attn_drop): Dropout(p=0.0, inplace=False)
                    (proj): Linear(in_features=96, out_features=96, bias=True)
                    (proj_drop): Dropout(p=0.0, inplace=False)
                    (softmax): Softmax(dim=-1)
                  )
                  (drop): DropPath()
                )
                (norm2): LayerNorm((96,), eps=1e-05, elementwise_affine=True)
                (ffn): FFN(
                  (activate): GELU()
                  (layers): Sequential(
                    (0): Sequential(
                      (0): Linear(in_features=96, out_features=384, bias=True)
                      (1): GELU()
                      (2): Dropout(p=0.0, inplace=False)
                    )
                    (1): Linear(in_features=384, out_features=96, bias=True)
                    (2): Dropout(p=0.0, inplace=False)
                  )
                  (dropout_layer): DropPath()
                )
              )
              (1): SwinBlock(
                (norm1): LayerNorm((96,), eps=1e-05, elementwise_affine=True)
                (attn): ShiftWindowMSA(
                  (w_msa): WindowMSA(
                    (qkv): Linear(in_features=96, out_features=288, bias=True)
                    (attn_drop): Dropout(p=0.0, inplace=False)
                    (proj): Linear(in_features=96, out_features=96, bias=True)
                    (proj_drop): Dropout(p=0.0, inplace=False)
                    (softmax): Softmax(dim=-1)
                  )
                  (drop): DropPath()
                )
                (norm2): LayerNorm((96,), eps=1e-05, elementwise_affine=True)
                (ffn): FFN(
                  (activate): GELU()
                  (layers): Sequential(
                    (0): Sequential(
                      (0): Linear(in_features=96, out_features=384, bias=True)
                      (1): GELU()
                      (2): Dropout(p=0.0, inplace=False)
                    )
                    (1): Linear(in_features=384, out_features=96, bias=True)
                    (2): Dropout(p=0.0, inplace=False)
                  )
                  (dropout_layer): DropPath()
                )
              )
            )
            (downsample): PatchMerging(
              (adap_padding): AdaptivePadding()
              (sampler): Unfold(kernel_size=(2, 2), dilation=(1, 1), padding=(0, 0), stride=(2, 2))
              (norm): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
              (reduction): Linear(in_features=384, out_features=192, bias=False)
            )
          )
          (1): SwinBlockSequence(
            (blocks): ModuleList(
              (0): SwinBlock(
                (norm1): LayerNorm((192,), eps=1e-05, elementwise_affine=True)
                (attn): ShiftWindowMSA(
                  (w_msa): WindowMSA(
                    (qkv): Linear(in_features=192, out_features=576, bias=True)
                    (attn_drop): Dropout(p=0.0, inplace=False)
                    (proj): Linear(in_features=192, out_features=192, bias=True)
                    (proj_drop): Dropout(p=0.0, inplace=False)
                    (softmax): Softmax(dim=-1)
                  )
                  (drop): DropPath()
                )
                (norm2): LayerNorm((192,), eps=1e-05, elementwise_affine=True)
                (ffn): FFN(
                  (activate): GELU()
                  (layers): Sequential(
                    (0): Sequential(
                      (0): Linear(in_features=192, out_features=768, bias=True)
                      (1): GELU()
                      (2): Dropout(p=0.0, inplace=False)
                    )
                    (1): Linear(in_features=768, out_features=192, bias=True)
                    (2): Dropout(p=0.0, inplace=False)
                  )
                  (dropout_layer): DropPath()
                )
              )
              (1): SwinBlock(
                (norm1): LayerNorm((192,), eps=1e-05, elementwise_affine=True)
                (attn): ShiftWindowMSA(
                  (w_msa): WindowMSA(
                    (qkv): Linear(in_features=192, out_features=576, bias=True)
                    (attn_drop): Dropout(p=0.0, inplace=False)
                    (proj): Linear(in_features=192, out_features=192, bias=True)
                    (proj_drop): Dropout(p=0.0, inplace=False)
                    (softmax): Softmax(dim=-1)
                  )
                  (drop): DropPath()
                )
                (norm2): LayerNorm((192,), eps=1e-05, elementwise_affine=True)
                (ffn): FFN(
                  (activate): GELU()
                  (layers): Sequential(
                    (0): Sequential(
                      (0): Linear(in_features=192, out_features=768, bias=True)
                      (1): GELU()
                      (2): Dropout(p=0.0, inplace=False)
                    )
                    (1): Linear(in_features=768, out_features=192, bias=True)
                    (2): Dropout(p=0.0, inplace=False)
                  )
                  (dropout_layer): DropPath()
                )
              )
            )
            (downsample): PatchMerging(
              (adap_padding): AdaptivePadding()
              (sampler): Unfold(kernel_size=(2, 2), dilation=(1, 1), padding=(0, 0), stride=(2, 2))
              (norm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
              (reduction): Linear(in_features=768, out_features=384, bias=False)
            )
          )
          (2): SwinBlockSequence(
            (blocks): ModuleList(
              (0): SwinBlock(
                (norm1): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
                (attn): ShiftWindowMSA(
                  (w_msa): WindowMSA(
                    (qkv): Linear(in_features=384, out_features=1152, bias=True)
                    (attn_drop): Dropout(p=0.0, inplace=False)
                    (proj): Linear(in_features=384, out_features=384, bias=True)
                    (proj_drop): Dropout(p=0.0, inplace=False)
                    (softmax): Softmax(dim=-1)
                  )
                  (drop): DropPath()
                )
                (norm2): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
                (ffn): FFN(
                  (activate): GELU()
                  (layers): Sequential(
                    (0): Sequential(
                      (0): Linear(in_features=384, out_features=1536, bias=True)
                      (1): GELU()
                      (2): Dropout(p=0.0, inplace=False)
                    )
                    (1): Linear(in_features=1536, out_features=384, bias=True)
                    (2): Dropout(p=0.0, inplace=False)
                  )
                  (dropout_layer): DropPath()
                )
              )
              (1): SwinBlock(
                (norm1): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
                (attn): ShiftWindowMSA(
                  (w_msa): WindowMSA(
                    (qkv): Linear(in_features=384, out_features=1152, bias=True)
                    (attn_drop): Dropout(p=0.0, inplace=False)
                    (proj): Linear(in_features=384, out_features=384, bias=True)
                    (proj_drop): Dropout(p=0.0, inplace=False)
                    (softmax): Softmax(dim=-1)
                  )
                  (drop): DropPath()
                )
                (norm2): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
                (ffn): FFN(
                  (activate): GELU()
                  (layers): Sequential(
                    (0): Sequential(
                      (0): Linear(in_features=384, out_features=1536, bias=True)
                      (1): GELU()
                      (2): Dropout(p=0.0, inplace=False)
                    )
                    (1): Linear(in_features=1536, out_features=384, bias=True)
                    (2): Dropout(p=0.0, inplace=False)
                  )
                  (dropout_layer): DropPath()
                )
              )
              (2): SwinBlock(
                (norm1): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
                (attn): ShiftWindowMSA(
                  (w_msa): WindowMSA(
                    (qkv): Linear(in_features=384, out_features=1152, bias=True)
                    (attn_drop): Dropout(p=0.0, inplace=False)
                    (proj): Linear(in_features=384, out_features=384, bias=True)
                    (proj_drop): Dropout(p=0.0, inplace=False)
                    (softmax): Softmax(dim=-1)
                  )
                  (drop): DropPath()
                )
                (norm2): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
                (ffn): FFN(
                  (activate): GELU()
                  (layers): Sequential(
                    (0): Sequential(
                      (0): Linear(in_features=384, out_features=1536, bias=True)
                      (1): GELU()
                      (2): Dropout(p=0.0, inplace=False)
                    )
                    (1): Linear(in_features=1536, out_features=384, bias=True)
                    (2): Dropout(p=0.0, inplace=False)
                  )
                  (dropout_layer): DropPath()
                )
              )
              (3): SwinBlock(
                (norm1): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
                (attn): ShiftWindowMSA(
                  (w_msa): WindowMSA(
                    (qkv): Linear(in_features=384, out_features=1152, bias=True)
                    (attn_drop): Dropout(p=0.0, inplace=False)
                    (proj): Linear(in_features=384, out_features=384, bias=True)
                    (proj_drop): Dropout(p=0.0, inplace=False)
                    (softmax): Softmax(dim=-1)
                  )
                  (drop): DropPath()
                )
                (norm2): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
                (ffn): FFN(
                  (activate): GELU()
                  (layers): Sequential(
                    (0): Sequential(
                      (0): Linear(in_features=384, out_features=1536, bias=True)
                      (1): GELU()
                      (2): Dropout(p=0.0, inplace=False)
                    )
                    (1): Linear(in_features=1536, out_features=384, bias=True)
                    (2): Dropout(p=0.0, inplace=False)
                  )
                  (dropout_layer): DropPath()
                )
              )
              (4): SwinBlock(
                (norm1): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
                (attn): ShiftWindowMSA(
                  (w_msa): WindowMSA(
                    (qkv): Linear(in_features=384, out_features=1152, bias=True)
                    (attn_drop): Dropout(p=0.0, inplace=False)
                    (proj): Linear(in_features=384, out_features=384, bias=True)
                    (proj_drop): Dropout(p=0.0, inplace=False)
                    (softmax): Softmax(dim=-1)
                  )
                  (drop): DropPath()
                )
                (norm2): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
                (ffn): FFN(
                  (activate): GELU()
                  (layers): Sequential(
                    (0): Sequential(
                      (0): Linear(in_features=384, out_features=1536, bias=True)
                      (1): GELU()
                      (2): Dropout(p=0.0, inplace=False)
                    )
                    (1): Linear(in_features=1536, out_features=384, bias=True)
                    (2): Dropout(p=0.0, inplace=False)
                  )
                  (dropout_layer): DropPath()
                )
              )
              (5): SwinBlock(
                (norm1): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
                (attn): ShiftWindowMSA(
                  (w_msa): WindowMSA(
                    (qkv): Linear(in_features=384, out_features=1152, bias=True)
                    (attn_drop): Dropout(p=0.0, inplace=False)
                    (proj): Linear(in_features=384, out_features=384, bias=True)
                    (proj_drop): Dropout(p=0.0, inplace=False)
                    (softmax): Softmax(dim=-1)
                  )
                  (drop): DropPath()
                )
                (norm2): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
                (ffn): FFN(
                  (activate): GELU()
                  (layers): Sequential(
                    (0): Sequential(
                      (0): Linear(in_features=384, out_features=1536, bias=True)
                      (1): GELU()
                      (2): Dropout(p=0.0, inplace=False)
                    )
                    (1): Linear(in_features=1536, out_features=384, bias=True)
                    (2): Dropout(p=0.0, inplace=False)
                  )
                  (dropout_layer): DropPath()
                )
              )
            )
            (downsample): PatchMerging(
              (adap_padding): AdaptivePadding()
              (sampler): Unfold(kernel_size=(2, 2), dilation=(1, 1), padding=(0, 0), stride=(2, 2))
              (norm): LayerNorm((1536,), eps=1e-05, elementwise_affine=True)
              (reduction): Linear(in_features=1536, out_features=768, bias=False)
            )
          )
          (3): SwinBlockSequence(
            (blocks): ModuleList(
              (0): SwinBlock(
                (norm1): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
                (attn): ShiftWindowMSA(
                  (w_msa): WindowMSA(
                    (qkv): Linear(in_features=768, out_features=2304, bias=True)
                    (attn_drop): Dropout(p=0.0, inplace=False)
                    (proj): Linear(in_features=768, out_features=768, bias=True)
                    (proj_drop): Dropout(p=0.0, inplace=False)
                    (softmax): Softmax(dim=-1)
                  )
                  (drop): DropPath()
                )
                (norm2): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
                (ffn): FFN(
                  (activate): GELU()
                  (layers): Sequential(
                    (0): Sequential(
                      (0): Linear(in_features=768, out_features=3072, bias=True)
                      (1): GELU()
                      (2): Dropout(p=0.0, inplace=False)
                    )
                    (1): Linear(in_features=3072, out_features=768, bias=True)
                    (2): Dropout(p=0.0, inplace=False)
                  )
                  (dropout_layer): DropPath()
                )
              )
              (1): SwinBlock(
                (norm1): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
                (attn): ShiftWindowMSA(
                  (w_msa): WindowMSA(
                    (qkv): Linear(in_features=768, out_features=2304, bias=True)
                    (attn_drop): Dropout(p=0.0, inplace=False)
                    (proj): Linear(in_features=768, out_features=768, bias=True)
                    (proj_drop): Dropout(p=0.0, inplace=False)
                    (softmax): Softmax(dim=-1)
                  )
                  (drop): DropPath()
                )
                (norm2): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
                (ffn): FFN(
                  (activate): GELU()
                  (layers): Sequential(
                    (0): Sequential(
                      (0): Linear(in_features=768, out_features=3072, bias=True)
                      (1): GELU()
                      (2): Dropout(p=0.0, inplace=False)
                    )
                    (1): Linear(in_features=3072, out_features=768, bias=True)
                    (2): Dropout(p=0.0, inplace=False)
                  )
                  (dropout_layer): DropPath()
                )
              )
            )
          )
        )
        (norm1): LayerNorm((192,), eps=1e-05, elementwise_affine=True)
        (norm2): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
        (norm3): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
      )
      init_cfg={'type': 'Pretrained', 'checkpoint': 'https://github.com/SwinTransformer/storage/releases/download/v1.0.0/swin_tiny_patch4_window7_224.pth'}
      (neck): GeneralizedLSSFPN(
        (lateral_convs): ModuleList(
          (0): ConvModule(
            (conv): Conv2d(448, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (activate): ReLU(inplace=True)
          )
          (1): ConvModule(
            (conv): Conv2d(1152, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (activate): ReLU(inplace=True)
          )
        )
        (fpn_convs): ModuleList(
          (0): ConvModule(
            (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (activate): ReLU(inplace=True)
          )
          (1): ConvModule(
            (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (activate): ReLU(inplace=True)
          )
        )
      )
      (vtransform): DepthLSSTransform(
        (dtransform): Sequential(
          (0): Conv2d(1, 8, kernel_size=(1, 1), stride=(1, 1))
          (1): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
          (3): Conv2d(8, 32, kernel_size=(5, 5), stride=(4, 4), padding=(2, 2))
          (4): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (5): ReLU(inplace=True)
          (6): Conv2d(32, 64, kernel_size=(5, 5), stride=(2, 2), padding=(2, 2))
          (7): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (8): ReLU(inplace=True)
        )
        (depthnet): Sequential(
          (0): Conv2d(320, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
          (3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (4): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (5): ReLU(inplace=True)
          (6): Conv2d(256, 198, kernel_size=(1, 1), stride=(1, 1))
        )
        (downsample): Sequential(
          (0): Conv2d(80, 80, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (1): BatchNorm2d(80, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
          (3): Conv2d(80, 80, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
          (4): BatchNorm2d(80, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (5): ReLU(inplace=True)
          (6): Conv2d(80, 80, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (7): BatchNorm2d(80, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (8): ReLU(inplace=True)
        )
      )
    )
  )
  (fuser): ConvFuser(
    (0): Conv2d(416, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): ReLU(inplace=True)
  )
  (decoder): ModuleDict(
    (backbone): SECOND(
      (blocks): ModuleList(
        (0): Sequential(
          (0): Conv2d(256, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
          (3): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (4): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (5): ReLU(inplace=True)
          (6): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (7): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (8): ReLU(inplace=True)
          (9): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (10): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (11): ReLU(inplace=True)
          (12): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (13): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (14): ReLU(inplace=True)
          (15): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (16): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (17): ReLU(inplace=True)
        )
        (1): Sequential(
          (0): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
          (1): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
          (3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (4): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (5): ReLU(inplace=True)
          (6): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (7): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (8): ReLU(inplace=True)
          (9): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (10): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (11): ReLU(inplace=True)
          (12): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (13): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (14): ReLU(inplace=True)
          (15): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (16): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (17): ReLU(inplace=True)
        )
      )
    )
    init_cfg={'type': 'Kaiming', 'layer': 'Conv2d'}
    (neck): SECONDFPN(
      (deblocks): ModuleList(
        (0): Sequential(
          (0): Conv2d(128, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
        (1): Sequential(
          (0): ConvTranspose2d(256, 256, kernel_size=(2, 2), stride=(2, 2), bias=False)
          (1): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
    )
    init_cfg=[{'type': 'Kaiming', 'layer': 'ConvTranspose2d'}, {'type': 'Constant', 'layer': 'NaiveSyncBatchNorm2d', 'val': 1.0}]
  )
  (heads): ModuleDict(
    (object): TransFusionHead(
      (loss_cls): FocalLoss()
      (loss_bbox): L1Loss()
      (loss_iou): VarifocalLoss()
      (loss_heatmap): GaussianFocalLoss()
      (shared_conv): Conv2d(512, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (heatmap_head): Sequential(
        (0): ConvModule(
          (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (activate): ReLU(inplace=True)
        )
        (1): Conv2d(128, 1, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
      (class_encoding): Conv1d(1, 128, kernel_size=(1,), stride=(1,))
      (decoder): ModuleList(
        (0): TransformerDecoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): Linear(in_features=128, out_features=128, bias=True)
          )
          (multihead_attn): MultiheadAttention(
            (out_proj): Linear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=256, bias=True)
          (dropout): Dropout(p=0.1, inplace=False)
          (linear2): Linear(in_features=256, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm3): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.1, inplace=False)
          (dropout2): Dropout(p=0.1, inplace=False)
          (dropout3): Dropout(p=0.1, inplace=False)
          (self_posembed): PositionEmbeddingLearned(
            (position_embedding_head): Sequential(
              (0): Conv1d(2, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
              (3): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
            )
          )
          (cross_posembed): PositionEmbeddingLearned(
            (position_embedding_head): Sequential(
              (0): Conv1d(2, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
              (3): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
            )
          )
        )
      )
      (prediction_heads): ModuleList(
        (0): FFN(
          (center): Sequential(
            (0): ConvModule(
              (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,), bias=False)
              (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (activate): ReLU(inplace=True)
            )
            (1): Conv1d(64, 2, kernel_size=(1,), stride=(1,))
          )
          (height): Sequential(
            (0): ConvModule(
              (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,), bias=False)
              (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (activate): ReLU(inplace=True)
            )
            (1): Conv1d(64, 1, kernel_size=(1,), stride=(1,))
          )
          (dim): Sequential(
            (0): ConvModule(
              (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,), bias=False)
              (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (activate): ReLU(inplace=True)
            )
            (1): Conv1d(64, 3, kernel_size=(1,), stride=(1,))
          )
          (rot): Sequential(
            (0): ConvModule(
              (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,), bias=False)
              (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (activate): ReLU(inplace=True)
            )
            (1): Conv1d(64, 2, kernel_size=(1,), stride=(1,))
          )
          (vel): Sequential(
            (0): ConvModule(
              (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,), bias=False)
              (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (activate): ReLU(inplace=True)
            )
            (1): Conv1d(64, 2, kernel_size=(1,), stride=(1,))
          )
          (heatmap): Sequential(
            (0): ConvModule(
              (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,), bias=False)
              (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (activate): ReLU(inplace=True)
            )
            (1): Conv1d(64, 1, kernel_size=(1,), stride=(1,))
          )
        )
      )
    )
  )
)
2024-09-03 23:30:11,225 - mmdet3d - INFO - load checkpoint from local path: pretrained/lidar-only-det.pth
2024-09-03 23:30:11,279 - mmdet3d - WARNING - The model and loaded state dict do not match exactly

size mismatch for heads.object.heatmap_head.1.weight: copying a param with shape torch.Size([10, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([1, 128, 3, 3]).
size mismatch for heads.object.heatmap_head.1.bias: copying a param with shape torch.Size([10]) from checkpoint, the shape in current model is torch.Size([1]).
size mismatch for heads.object.class_encoding.weight: copying a param with shape torch.Size([128, 10, 1]) from checkpoint, the shape in current model is torch.Size([128, 1, 1]).
size mismatch for heads.object.prediction_heads.0.heatmap.1.weight: copying a param with shape torch.Size([10, 64, 1]) from checkpoint, the shape in current model is torch.Size([1, 64, 1]).
size mismatch for heads.object.prediction_heads.0.heatmap.1.bias: copying a param with shape torch.Size([10]) from checkpoint, the shape in current model is torch.Size([1]).
missing keys in source state_dict: encoders.camera.backbone.patch_embed.projection.weight, encoders.camera.backbone.patch_embed.projection.bias, encoders.camera.backbone.patch_embed.norm.weight, encoders.camera.backbone.patch_embed.norm.bias, encoders.camera.backbone.stages.0.blocks.0.norm1.weight, encoders.camera.backbone.stages.0.blocks.0.norm1.bias, encoders.camera.backbone.stages.0.blocks.0.attn.w_msa.relative_position_bias_table, encoders.camera.backbone.stages.0.blocks.0.attn.w_msa.relative_position_index, encoders.camera.backbone.stages.0.blocks.0.attn.w_msa.qkv.weight, encoders.camera.backbone.stages.0.blocks.0.attn.w_msa.qkv.bias, encoders.camera.backbone.stages.0.blocks.0.attn.w_msa.proj.weight, encoders.camera.backbone.stages.0.blocks.0.attn.w_msa.proj.bias, encoders.camera.backbone.stages.0.blocks.0.norm2.weight, encoders.camera.backbone.stages.0.blocks.0.norm2.bias, encoders.camera.backbone.stages.0.blocks.0.ffn.layers.0.0.weight, encoders.camera.backbone.stages.0.blocks.0.ffn.layers.0.0.bias, encoders.camera.backbone.stages.0.blocks.0.ffn.layers.1.weight, encoders.camera.backbone.stages.0.blocks.0.ffn.layers.1.bias, encoders.camera.backbone.stages.0.blocks.1.norm1.weight, encoders.camera.backbone.stages.0.blocks.1.norm1.bias, encoders.camera.backbone.stages.0.blocks.1.attn.w_msa.relative_position_bias_table, encoders.camera.backbone.stages.0.blocks.1.attn.w_msa.relative_position_index, encoders.camera.backbone.stages.0.blocks.1.attn.w_msa.qkv.weight, encoders.camera.backbone.stages.0.blocks.1.attn.w_msa.qkv.bias, encoders.camera.backbone.stages.0.blocks.1.attn.w_msa.proj.weight, encoders.camera.backbone.stages.0.blocks.1.attn.w_msa.proj.bias, encoders.camera.backbone.stages.0.blocks.1.norm2.weight, encoders.camera.backbone.stages.0.blocks.1.norm2.bias, encoders.camera.backbone.stages.0.blocks.1.ffn.layers.0.0.weight, encoders.camera.backbone.stages.0.blocks.1.ffn.layers.0.0.bias, encoders.camera.backbone.stages.0.blocks.1.ffn.layers.1.weight, encoders.camera.backbone.stages.0.blocks.1.ffn.layers.1.bias, encoders.camera.backbone.stages.0.downsample.norm.weight, encoders.camera.backbone.stages.0.downsample.norm.bias, encoders.camera.backbone.stages.0.downsample.reduction.weight, encoders.camera.backbone.stages.1.blocks.0.norm1.weight, encoders.camera.backbone.stages.1.blocks.0.norm1.bias, encoders.camera.backbone.stages.1.blocks.0.attn.w_msa.relative_position_bias_table, encoders.camera.backbone.stages.1.blocks.0.attn.w_msa.relative_position_index, encoders.camera.backbone.stages.1.blocks.0.attn.w_msa.qkv.weight, encoders.camera.backbone.stages.1.blocks.0.attn.w_msa.qkv.bias, encoders.camera.backbone.stages.1.blocks.0.attn.w_msa.proj.weight, encoders.camera.backbone.stages.1.blocks.0.attn.w_msa.proj.bias, encoders.camera.backbone.stages.1.blocks.0.norm2.weight, encoders.camera.backbone.stages.1.blocks.0.norm2.bias, encoders.camera.backbone.stages.1.blocks.0.ffn.layers.0.0.weight, encoders.camera.backbone.stages.1.blocks.0.ffn.layers.0.0.bias, encoders.camera.backbone.stages.1.blocks.0.ffn.layers.1.weight, encoders.camera.backbone.stages.1.blocks.0.ffn.layers.1.bias, encoders.camera.backbone.stages.1.blocks.1.norm1.weight, encoders.camera.backbone.stages.1.blocks.1.norm1.bias, encoders.camera.backbone.stages.1.blocks.1.attn.w_msa.relative_position_bias_table, encoders.camera.backbone.stages.1.blocks.1.attn.w_msa.relative_position_index, encoders.camera.backbone.stages.1.blocks.1.attn.w_msa.qkv.weight, encoders.camera.backbone.stages.1.blocks.1.attn.w_msa.qkv.bias, encoders.camera.backbone.stages.1.blocks.1.attn.w_msa.proj.weight, encoders.camera.backbone.stages.1.blocks.1.attn.w_msa.proj.bias, encoders.camera.backbone.stages.1.blocks.1.norm2.weight, encoders.camera.backbone.stages.1.blocks.1.norm2.bias, encoders.camera.backbone.stages.1.blocks.1.ffn.layers.0.0.weight, encoders.camera.backbone.stages.1.blocks.1.ffn.layers.0.0.bias, encoders.camera.backbone.stages.1.blocks.1.ffn.layers.1.weight, encoders.camera.backbone.stages.1.blocks.1.ffn.layers.1.bias, encoders.camera.backbone.stages.1.downsample.norm.weight, encoders.camera.backbone.stages.1.downsample.norm.bias, encoders.camera.backbone.stages.1.downsample.reduction.weight, encoders.camera.backbone.stages.2.blocks.0.norm1.weight, encoders.camera.backbone.stages.2.blocks.0.norm1.bias, encoders.camera.backbone.stages.2.blocks.0.attn.w_msa.relative_position_bias_table, encoders.camera.backbone.stages.2.blocks.0.attn.w_msa.relative_position_index, encoders.camera.backbone.stages.2.blocks.0.attn.w_msa.qkv.weight, encoders.camera.backbone.stages.2.blocks.0.attn.w_msa.qkv.bias, encoders.camera.backbone.stages.2.blocks.0.attn.w_msa.proj.weight, encoders.camera.backbone.stages.2.blocks.0.attn.w_msa.proj.bias, encoders.camera.backbone.stages.2.blocks.0.norm2.weight, encoders.camera.backbone.stages.2.blocks.0.norm2.bias, encoders.camera.backbone.stages.2.blocks.0.ffn.layers.0.0.weight, encoders.camera.backbone.stages.2.blocks.0.ffn.layers.0.0.bias, encoders.camera.backbone.stages.2.blocks.0.ffn.layers.1.weight, encoders.camera.backbone.stages.2.blocks.0.ffn.layers.1.bias, encoders.camera.backbone.stages.2.blocks.1.norm1.weight, encoders.camera.backbone.stages.2.blocks.1.norm1.bias, encoders.camera.backbone.stages.2.blocks.1.attn.w_msa.relative_position_bias_table, encoders.camera.backbone.stages.2.blocks.1.attn.w_msa.relative_position_index, encoders.camera.backbone.stages.2.blocks.1.attn.w_msa.qkv.weight, encoders.camera.backbone.stages.2.blocks.1.attn.w_msa.qkv.bias, encoders.camera.backbone.stages.2.blocks.1.attn.w_msa.proj.weight, encoders.camera.backbone.stages.2.blocks.1.attn.w_msa.proj.bias, encoders.camera.backbone.stages.2.blocks.1.norm2.weight, encoders.camera.backbone.stages.2.blocks.1.norm2.bias, encoders.camera.backbone.stages.2.blocks.1.ffn.layers.0.0.weight, encoders.camera.backbone.stages.2.blocks.1.ffn.layers.0.0.bias, encoders.camera.backbone.stages.2.blocks.1.ffn.layers.1.weight, encoders.camera.backbone.stages.2.blocks.1.ffn.layers.1.bias, encoders.camera.backbone.stages.2.blocks.2.norm1.weight, encoders.camera.backbone.stages.2.blocks.2.norm1.bias, encoders.camera.backbone.stages.2.blocks.2.attn.w_msa.relative_position_bias_table, encoders.camera.backbone.stages.2.blocks.2.attn.w_msa.relative_position_index, encoders.camera.backbone.stages.2.blocks.2.attn.w_msa.qkv.weight, encoders.camera.backbone.stages.2.blocks.2.attn.w_msa.qkv.bias, encoders.camera.backbone.stages.2.blocks.2.attn.w_msa.proj.weight, encoders.camera.backbone.stages.2.blocks.2.attn.w_msa.proj.bias, encoders.camera.backbone.stages.2.blocks.2.norm2.weight, encoders.camera.backbone.stages.2.blocks.2.norm2.bias, encoders.camera.backbone.stages.2.blocks.2.ffn.layers.0.0.weight, encoders.camera.backbone.stages.2.blocks.2.ffn.layers.0.0.bias, encoders.camera.backbone.stages.2.blocks.2.ffn.layers.1.weight, encoders.camera.backbone.stages.2.blocks.2.ffn.layers.1.bias, encoders.camera.backbone.stages.2.blocks.3.norm1.weight, encoders.camera.backbone.stages.2.blocks.3.norm1.bias, encoders.camera.backbone.stages.2.blocks.3.attn.w_msa.relative_position_bias_table, encoders.camera.backbone.stages.2.blocks.3.attn.w_msa.relative_position_index, encoders.camera.backbone.stages.2.blocks.3.attn.w_msa.qkv.weight, encoders.camera.backbone.stages.2.blocks.3.attn.w_msa.qkv.bias, encoders.camera.backbone.stages.2.blocks.3.attn.w_msa.proj.weight, encoders.camera.backbone.stages.2.blocks.3.attn.w_msa.proj.bias, encoders.camera.backbone.stages.2.blocks.3.norm2.weight, encoders.camera.backbone.stages.2.blocks.3.norm2.bias, encoders.camera.backbone.stages.2.blocks.3.ffn.layers.0.0.weight, encoders.camera.backbone.stages.2.blocks.3.ffn.layers.0.0.bias, encoders.camera.backbone.stages.2.blocks.3.ffn.layers.1.weight, encoders.camera.backbone.stages.2.blocks.3.ffn.layers.1.bias, encoders.camera.backbone.stages.2.blocks.4.norm1.weight, encoders.camera.backbone.stages.2.blocks.4.norm1.bias, encoders.camera.backbone.stages.2.blocks.4.attn.w_msa.relative_position_bias_table, encoders.camera.backbone.stages.2.blocks.4.attn.w_msa.relative_position_index, encoders.camera.backbone.stages.2.blocks.4.attn.w_msa.qkv.weight, encoders.camera.backbone.stages.2.blocks.4.attn.w_msa.qkv.bias, encoders.camera.backbone.stages.2.blocks.4.attn.w_msa.proj.weight, encoders.camera.backbone.stages.2.blocks.4.attn.w_msa.proj.bias, encoders.camera.backbone.stages.2.blocks.4.norm2.weight, encoders.camera.backbone.stages.2.blocks.4.norm2.bias, encoders.camera.backbone.stages.2.blocks.4.ffn.layers.0.0.weight, encoders.camera.backbone.stages.2.blocks.4.ffn.layers.0.0.bias, encoders.camera.backbone.stages.2.blocks.4.ffn.layers.1.weight, encoders.camera.backbone.stages.2.blocks.4.ffn.layers.1.bias, encoders.camera.backbone.stages.2.blocks.5.norm1.weight, encoders.camera.backbone.stages.2.blocks.5.norm1.bias, encoders.camera.backbone.stages.2.blocks.5.attn.w_msa.relative_position_bias_table, encoders.camera.backbone.stages.2.blocks.5.attn.w_msa.relative_position_index, encoders.camera.backbone.stages.2.blocks.5.attn.w_msa.qkv.weight, encoders.camera.backbone.stages.2.blocks.5.attn.w_msa.qkv.bias, encoders.camera.backbone.stages.2.blocks.5.attn.w_msa.proj.weight, encoders.camera.backbone.stages.2.blocks.5.attn.w_msa.proj.bias, encoders.camera.backbone.stages.2.blocks.5.norm2.weight, encoders.camera.backbone.stages.2.blocks.5.norm2.bias, encoders.camera.backbone.stages.2.blocks.5.ffn.layers.0.0.weight, encoders.camera.backbone.stages.2.blocks.5.ffn.layers.0.0.bias, encoders.camera.backbone.stages.2.blocks.5.ffn.layers.1.weight, encoders.camera.backbone.stages.2.blocks.5.ffn.layers.1.bias, encoders.camera.backbone.stages.2.downsample.norm.weight, encoders.camera.backbone.stages.2.downsample.norm.bias, encoders.camera.backbone.stages.2.downsample.reduction.weight, encoders.camera.backbone.stages.3.blocks.0.norm1.weight, encoders.camera.backbone.stages.3.blocks.0.norm1.bias, encoders.camera.backbone.stages.3.blocks.0.attn.w_msa.relative_position_bias_table, encoders.camera.backbone.stages.3.blocks.0.attn.w_msa.relative_position_index, encoders.camera.backbone.stages.3.blocks.0.attn.w_msa.qkv.weight, encoders.camera.backbone.stages.3.blocks.0.attn.w_msa.qkv.bias, encoders.camera.backbone.stages.3.blocks.0.attn.w_msa.proj.weight, encoders.camera.backbone.stages.3.blocks.0.attn.w_msa.proj.bias, encoders.camera.backbone.stages.3.blocks.0.norm2.weight, encoders.camera.backbone.stages.3.blocks.0.norm2.bias, encoders.camera.backbone.stages.3.blocks.0.ffn.layers.0.0.weight, encoders.camera.backbone.stages.3.blocks.0.ffn.layers.0.0.bias, encoders.camera.backbone.stages.3.blocks.0.ffn.layers.1.weight, encoders.camera.backbone.stages.3.blocks.0.ffn.layers.1.bias, encoders.camera.backbone.stages.3.blocks.1.norm1.weight, encoders.camera.backbone.stages.3.blocks.1.norm1.bias, encoders.camera.backbone.stages.3.blocks.1.attn.w_msa.relative_position_bias_table, encoders.camera.backbone.stages.3.blocks.1.attn.w_msa.relative_position_index, encoders.camera.backbone.stages.3.blocks.1.attn.w_msa.qkv.weight, encoders.camera.backbone.stages.3.blocks.1.attn.w_msa.qkv.bias, encoders.camera.backbone.stages.3.blocks.1.attn.w_msa.proj.weight, encoders.camera.backbone.stages.3.blocks.1.attn.w_msa.proj.bias, encoders.camera.backbone.stages.3.blocks.1.norm2.weight, encoders.camera.backbone.stages.3.blocks.1.norm2.bias, encoders.camera.backbone.stages.3.blocks.1.ffn.layers.0.0.weight, encoders.camera.backbone.stages.3.blocks.1.ffn.layers.0.0.bias, encoders.camera.backbone.stages.3.blocks.1.ffn.layers.1.weight, encoders.camera.backbone.stages.3.blocks.1.ffn.layers.1.bias, encoders.camera.backbone.norm1.weight, encoders.camera.backbone.norm1.bias, encoders.camera.backbone.norm2.weight, encoders.camera.backbone.norm2.bias, encoders.camera.backbone.norm3.weight, encoders.camera.backbone.norm3.bias, encoders.camera.neck.lateral_convs.0.conv.weight, encoders.camera.neck.lateral_convs.0.bn.weight, encoders.camera.neck.lateral_convs.0.bn.bias, encoders.camera.neck.lateral_convs.0.bn.running_mean, encoders.camera.neck.lateral_convs.0.bn.running_var, encoders.camera.neck.lateral_convs.1.conv.weight, encoders.camera.neck.lateral_convs.1.bn.weight, encoders.camera.neck.lateral_convs.1.bn.bias, encoders.camera.neck.lateral_convs.1.bn.running_mean, encoders.camera.neck.lateral_convs.1.bn.running_var, encoders.camera.neck.fpn_convs.0.conv.weight, encoders.camera.neck.fpn_convs.0.bn.weight, encoders.camera.neck.fpn_convs.0.bn.bias, encoders.camera.neck.fpn_convs.0.bn.running_mean, encoders.camera.neck.fpn_convs.0.bn.running_var, encoders.camera.neck.fpn_convs.1.conv.weight, encoders.camera.neck.fpn_convs.1.bn.weight, encoders.camera.neck.fpn_convs.1.bn.bias, encoders.camera.neck.fpn_convs.1.bn.running_mean, encoders.camera.neck.fpn_convs.1.bn.running_var, encoders.camera.vtransform.dx, encoders.camera.vtransform.bx, encoders.camera.vtransform.nx, encoders.camera.vtransform.frustum, encoders.camera.vtransform.dtransform.0.weight, encoders.camera.vtransform.dtransform.0.bias, encoders.camera.vtransform.dtransform.1.weight, encoders.camera.vtransform.dtransform.1.bias, encoders.camera.vtransform.dtransform.1.running_mean, encoders.camera.vtransform.dtransform.1.running_var, encoders.camera.vtransform.dtransform.3.weight, encoders.camera.vtransform.dtransform.3.bias, encoders.camera.vtransform.dtransform.4.weight, encoders.camera.vtransform.dtransform.4.bias, encoders.camera.vtransform.dtransform.4.running_mean, encoders.camera.vtransform.dtransform.4.running_var, encoders.camera.vtransform.dtransform.6.weight, encoders.camera.vtransform.dtransform.6.bias, encoders.camera.vtransform.dtransform.7.weight, encoders.camera.vtransform.dtransform.7.bias, encoders.camera.vtransform.dtransform.7.running_mean, encoders.camera.vtransform.dtransform.7.running_var, encoders.camera.vtransform.depthnet.0.weight, encoders.camera.vtransform.depthnet.0.bias, encoders.camera.vtransform.depthnet.1.weight, encoders.camera.vtransform.depthnet.1.bias, encoders.camera.vtransform.depthnet.1.running_mean, encoders.camera.vtransform.depthnet.1.running_var, encoders.camera.vtransform.depthnet.3.weight, encoders.camera.vtransform.depthnet.3.bias, encoders.camera.vtransform.depthnet.4.weight, encoders.camera.vtransform.depthnet.4.bias, encoders.camera.vtransform.depthnet.4.running_mean, encoders.camera.vtransform.depthnet.4.running_var, encoders.camera.vtransform.depthnet.6.weight, encoders.camera.vtransform.depthnet.6.bias, encoders.camera.vtransform.downsample.0.weight, encoders.camera.vtransform.downsample.1.weight, encoders.camera.vtransform.downsample.1.bias, encoders.camera.vtransform.downsample.1.running_mean, encoders.camera.vtransform.downsample.1.running_var, encoders.camera.vtransform.downsample.3.weight, encoders.camera.vtransform.downsample.4.weight, encoders.camera.vtransform.downsample.4.bias, encoders.camera.vtransform.downsample.4.running_mean, encoders.camera.vtransform.downsample.4.running_var, encoders.camera.vtransform.downsample.6.weight, encoders.camera.vtransform.downsample.7.weight, encoders.camera.vtransform.downsample.7.bias, encoders.camera.vtransform.downsample.7.running_mean, encoders.camera.vtransform.downsample.7.running_var, encoders.infra.backbone.patch_embed.projection.weight, encoders.infra.backbone.patch_embed.projection.bias, encoders.infra.backbone.patch_embed.norm.weight, encoders.infra.backbone.patch_embed.norm.bias, encoders.infra.backbone.stages.0.blocks.0.norm1.weight, encoders.infra.backbone.stages.0.blocks.0.norm1.bias, encoders.infra.backbone.stages.0.blocks.0.attn.w_msa.relative_position_bias_table, encoders.infra.backbone.stages.0.blocks.0.attn.w_msa.relative_position_index, encoders.infra.backbone.stages.0.blocks.0.attn.w_msa.qkv.weight, encoders.infra.backbone.stages.0.blocks.0.attn.w_msa.qkv.bias, encoders.infra.backbone.stages.0.blocks.0.attn.w_msa.proj.weight, encoders.infra.backbone.stages.0.blocks.0.attn.w_msa.proj.bias, encoders.infra.backbone.stages.0.blocks.0.norm2.weight, encoders.infra.backbone.stages.0.blocks.0.norm2.bias, encoders.infra.backbone.stages.0.blocks.0.ffn.layers.0.0.weight, encoders.infra.backbone.stages.0.blocks.0.ffn.layers.0.0.bias, encoders.infra.backbone.stages.0.blocks.0.ffn.layers.1.weight, encoders.infra.backbone.stages.0.blocks.0.ffn.layers.1.bias, encoders.infra.backbone.stages.0.blocks.1.norm1.weight, encoders.infra.backbone.stages.0.blocks.1.norm1.bias, encoders.infra.backbone.stages.0.blocks.1.attn.w_msa.relative_position_bias_table, encoders.infra.backbone.stages.0.blocks.1.attn.w_msa.relative_position_index, encoders.infra.backbone.stages.0.blocks.1.attn.w_msa.qkv.weight, encoders.infra.backbone.stages.0.blocks.1.attn.w_msa.qkv.bias, encoders.infra.backbone.stages.0.blocks.1.attn.w_msa.proj.weight, encoders.infra.backbone.stages.0.blocks.1.attn.w_msa.proj.bias, encoders.infra.backbone.stages.0.blocks.1.norm2.weight, encoders.infra.backbone.stages.0.blocks.1.norm2.bias, encoders.infra.backbone.stages.0.blocks.1.ffn.layers.0.0.weight, encoders.infra.backbone.stages.0.blocks.1.ffn.layers.0.0.bias, encoders.infra.backbone.stages.0.blocks.1.ffn.layers.1.weight, encoders.infra.backbone.stages.0.blocks.1.ffn.layers.1.bias, encoders.infra.backbone.stages.0.downsample.norm.weight, encoders.infra.backbone.stages.0.downsample.norm.bias, encoders.infra.backbone.stages.0.downsample.reduction.weight, encoders.infra.backbone.stages.1.blocks.0.norm1.weight, encoders.infra.backbone.stages.1.blocks.0.norm1.bias, encoders.infra.backbone.stages.1.blocks.0.attn.w_msa.relative_position_bias_table, encoders.infra.backbone.stages.1.blocks.0.attn.w_msa.relative_position_index, encoders.infra.backbone.stages.1.blocks.0.attn.w_msa.qkv.weight, encoders.infra.backbone.stages.1.blocks.0.attn.w_msa.qkv.bias, encoders.infra.backbone.stages.1.blocks.0.attn.w_msa.proj.weight, encoders.infra.backbone.stages.1.blocks.0.attn.w_msa.proj.bias, encoders.infra.backbone.stages.1.blocks.0.norm2.weight, encoders.infra.backbone.stages.1.blocks.0.norm2.bias, encoders.infra.backbone.stages.1.blocks.0.ffn.layers.0.0.weight, encoders.infra.backbone.stages.1.blocks.0.ffn.layers.0.0.bias, encoders.infra.backbone.stages.1.blocks.0.ffn.layers.1.weight, encoders.infra.backbone.stages.1.blocks.0.ffn.layers.1.bias, encoders.infra.backbone.stages.1.blocks.1.norm1.weight, encoders.infra.backbone.stages.1.blocks.1.norm1.bias, encoders.infra.backbone.stages.1.blocks.1.attn.w_msa.relative_position_bias_table, encoders.infra.backbone.stages.1.blocks.1.attn.w_msa.relative_position_index, encoders.infra.backbone.stages.1.blocks.1.attn.w_msa.qkv.weight, encoders.infra.backbone.stages.1.blocks.1.attn.w_msa.qkv.bias, encoders.infra.backbone.stages.1.blocks.1.attn.w_msa.proj.weight, encoders.infra.backbone.stages.1.blocks.1.attn.w_msa.proj.bias, encoders.infra.backbone.stages.1.blocks.1.norm2.weight, encoders.infra.backbone.stages.1.blocks.1.norm2.bias, encoders.infra.backbone.stages.1.blocks.1.ffn.layers.0.0.weight, encoders.infra.backbone.stages.1.blocks.1.ffn.layers.0.0.bias, encoders.infra.backbone.stages.1.blocks.1.ffn.layers.1.weight, encoders.infra.backbone.stages.1.blocks.1.ffn.layers.1.bias, encoders.infra.backbone.stages.1.downsample.norm.weight, encoders.infra.backbone.stages.1.downsample.norm.bias, encoders.infra.backbone.stages.1.downsample.reduction.weight, encoders.infra.backbone.stages.2.blocks.0.norm1.weight, encoders.infra.backbone.stages.2.blocks.0.norm1.bias, encoders.infra.backbone.stages.2.blocks.0.attn.w_msa.relative_position_bias_table, encoders.infra.backbone.stages.2.blocks.0.attn.w_msa.relative_position_index, encoders.infra.backbone.stages.2.blocks.0.attn.w_msa.qkv.weight, encoders.infra.backbone.stages.2.blocks.0.attn.w_msa.qkv.bias, encoders.infra.backbone.stages.2.blocks.0.attn.w_msa.proj.weight, encoders.infra.backbone.stages.2.blocks.0.attn.w_msa.proj.bias, encoders.infra.backbone.stages.2.blocks.0.norm2.weight, encoders.infra.backbone.stages.2.blocks.0.norm2.bias, encoders.infra.backbone.stages.2.blocks.0.ffn.layers.0.0.weight, encoders.infra.backbone.stages.2.blocks.0.ffn.layers.0.0.bias, encoders.infra.backbone.stages.2.blocks.0.ffn.layers.1.weight, encoders.infra.backbone.stages.2.blocks.0.ffn.layers.1.bias, encoders.infra.backbone.stages.2.blocks.1.norm1.weight, encoders.infra.backbone.stages.2.blocks.1.norm1.bias, encoders.infra.backbone.stages.2.blocks.1.attn.w_msa.relative_position_bias_table, encoders.infra.backbone.stages.2.blocks.1.attn.w_msa.relative_position_index, encoders.infra.backbone.stages.2.blocks.1.attn.w_msa.qkv.weight, encoders.infra.backbone.stages.2.blocks.1.attn.w_msa.qkv.bias, encoders.infra.backbone.stages.2.blocks.1.attn.w_msa.proj.weight, encoders.infra.backbone.stages.2.blocks.1.attn.w_msa.proj.bias, encoders.infra.backbone.stages.2.blocks.1.norm2.weight, encoders.infra.backbone.stages.2.blocks.1.norm2.bias, encoders.infra.backbone.stages.2.blocks.1.ffn.layers.0.0.weight, encoders.infra.backbone.stages.2.blocks.1.ffn.layers.0.0.bias, encoders.infra.backbone.stages.2.blocks.1.ffn.layers.1.weight, encoders.infra.backbone.stages.2.blocks.1.ffn.layers.1.bias, encoders.infra.backbone.stages.2.blocks.2.norm1.weight, encoders.infra.backbone.stages.2.blocks.2.norm1.bias, encoders.infra.backbone.stages.2.blocks.2.attn.w_msa.relative_position_bias_table, encoders.infra.backbone.stages.2.blocks.2.attn.w_msa.relative_position_index, encoders.infra.backbone.stages.2.blocks.2.attn.w_msa.qkv.weight, encoders.infra.backbone.stages.2.blocks.2.attn.w_msa.qkv.bias, encoders.infra.backbone.stages.2.blocks.2.attn.w_msa.proj.weight, encoders.infra.backbone.stages.2.blocks.2.attn.w_msa.proj.bias, encoders.infra.backbone.stages.2.blocks.2.norm2.weight, encoders.infra.backbone.stages.2.blocks.2.norm2.bias, encoders.infra.backbone.stages.2.blocks.2.ffn.layers.0.0.weight, encoders.infra.backbone.stages.2.blocks.2.ffn.layers.0.0.bias, encoders.infra.backbone.stages.2.blocks.2.ffn.layers.1.weight, encoders.infra.backbone.stages.2.blocks.2.ffn.layers.1.bias, encoders.infra.backbone.stages.2.blocks.3.norm1.weight, encoders.infra.backbone.stages.2.blocks.3.norm1.bias, encoders.infra.backbone.stages.2.blocks.3.attn.w_msa.relative_position_bias_table, encoders.infra.backbone.stages.2.blocks.3.attn.w_msa.relative_position_index, encoders.infra.backbone.stages.2.blocks.3.attn.w_msa.qkv.weight, encoders.infra.backbone.stages.2.blocks.3.attn.w_msa.qkv.bias, encoders.infra.backbone.stages.2.blocks.3.attn.w_msa.proj.weight, encoders.infra.backbone.stages.2.blocks.3.attn.w_msa.proj.bias, encoders.infra.backbone.stages.2.blocks.3.norm2.weight, encoders.infra.backbone.stages.2.blocks.3.norm2.bias, encoders.infra.backbone.stages.2.blocks.3.ffn.layers.0.0.weight, encoders.infra.backbone.stages.2.blocks.3.ffn.layers.0.0.bias, encoders.infra.backbone.stages.2.blocks.3.ffn.layers.1.weight, encoders.infra.backbone.stages.2.blocks.3.ffn.layers.1.bias, encoders.infra.backbone.stages.2.blocks.4.norm1.weight, encoders.infra.backbone.stages.2.blocks.4.norm1.bias, encoders.infra.backbone.stages.2.blocks.4.attn.w_msa.relative_position_bias_table, encoders.infra.backbone.stages.2.blocks.4.attn.w_msa.relative_position_index, encoders.infra.backbone.stages.2.blocks.4.attn.w_msa.qkv.weight, encoders.infra.backbone.stages.2.blocks.4.attn.w_msa.qkv.bias, encoders.infra.backbone.stages.2.blocks.4.attn.w_msa.proj.weight, encoders.infra.backbone.stages.2.blocks.4.attn.w_msa.proj.bias, encoders.infra.backbone.stages.2.blocks.4.norm2.weight, encoders.infra.backbone.stages.2.blocks.4.norm2.bias, encoders.infra.backbone.stages.2.blocks.4.ffn.layers.0.0.weight, encoders.infra.backbone.stages.2.blocks.4.ffn.layers.0.0.bias, encoders.infra.backbone.stages.2.blocks.4.ffn.layers.1.weight, encoders.infra.backbone.stages.2.blocks.4.ffn.layers.1.bias, encoders.infra.backbone.stages.2.blocks.5.norm1.weight, encoders.infra.backbone.stages.2.blocks.5.norm1.bias, encoders.infra.backbone.stages.2.blocks.5.attn.w_msa.relative_position_bias_table, encoders.infra.backbone.stages.2.blocks.5.attn.w_msa.relative_position_index, encoders.infra.backbone.stages.2.blocks.5.attn.w_msa.qkv.weight, encoders.infra.backbone.stages.2.blocks.5.attn.w_msa.qkv.bias, encoders.infra.backbone.stages.2.blocks.5.attn.w_msa.proj.weight, encoders.infra.backbone.stages.2.blocks.5.attn.w_msa.proj.bias, encoders.infra.backbone.stages.2.blocks.5.norm2.weight, encoders.infra.backbone.stages.2.blocks.5.norm2.bias, encoders.infra.backbone.stages.2.blocks.5.ffn.layers.0.0.weight, encoders.infra.backbone.stages.2.blocks.5.ffn.layers.0.0.bias, encoders.infra.backbone.stages.2.blocks.5.ffn.layers.1.weight, encoders.infra.backbone.stages.2.blocks.5.ffn.layers.1.bias, encoders.infra.backbone.stages.2.downsample.norm.weight, encoders.infra.backbone.stages.2.downsample.norm.bias, encoders.infra.backbone.stages.2.downsample.reduction.weight, encoders.infra.backbone.stages.3.blocks.0.norm1.weight, encoders.infra.backbone.stages.3.blocks.0.norm1.bias, encoders.infra.backbone.stages.3.blocks.0.attn.w_msa.relative_position_bias_table, encoders.infra.backbone.stages.3.blocks.0.attn.w_msa.relative_position_index, encoders.infra.backbone.stages.3.blocks.0.attn.w_msa.qkv.weight, encoders.infra.backbone.stages.3.blocks.0.attn.w_msa.qkv.bias, encoders.infra.backbone.stages.3.blocks.0.attn.w_msa.proj.weight, encoders.infra.backbone.stages.3.blocks.0.attn.w_msa.proj.bias, encoders.infra.backbone.stages.3.blocks.0.norm2.weight, encoders.infra.backbone.stages.3.blocks.0.norm2.bias, encoders.infra.backbone.stages.3.blocks.0.ffn.layers.0.0.weight, encoders.infra.backbone.stages.3.blocks.0.ffn.layers.0.0.bias, encoders.infra.backbone.stages.3.blocks.0.ffn.layers.1.weight, encoders.infra.backbone.stages.3.blocks.0.ffn.layers.1.bias, encoders.infra.backbone.stages.3.blocks.1.norm1.weight, encoders.infra.backbone.stages.3.blocks.1.norm1.bias, encoders.infra.backbone.stages.3.blocks.1.attn.w_msa.relative_position_bias_table, encoders.infra.backbone.stages.3.blocks.1.attn.w_msa.relative_position_index, encoders.infra.backbone.stages.3.blocks.1.attn.w_msa.qkv.weight, encoders.infra.backbone.stages.3.blocks.1.attn.w_msa.qkv.bias, encoders.infra.backbone.stages.3.blocks.1.attn.w_msa.proj.weight, encoders.infra.backbone.stages.3.blocks.1.attn.w_msa.proj.bias, encoders.infra.backbone.stages.3.blocks.1.norm2.weight, encoders.infra.backbone.stages.3.blocks.1.norm2.bias, encoders.infra.backbone.stages.3.blocks.1.ffn.layers.0.0.weight, encoders.infra.backbone.stages.3.blocks.1.ffn.layers.0.0.bias, encoders.infra.backbone.stages.3.blocks.1.ffn.layers.1.weight, encoders.infra.backbone.stages.3.blocks.1.ffn.layers.1.bias, encoders.infra.backbone.norm1.weight, encoders.infra.backbone.norm1.bias, encoders.infra.backbone.norm2.weight, encoders.infra.backbone.norm2.bias, encoders.infra.backbone.norm3.weight, encoders.infra.backbone.norm3.bias, encoders.infra.neck.lateral_convs.0.conv.weight, encoders.infra.neck.lateral_convs.0.bn.weight, encoders.infra.neck.lateral_convs.0.bn.bias, encoders.infra.neck.lateral_convs.0.bn.running_mean, encoders.infra.neck.lateral_convs.0.bn.running_var, encoders.infra.neck.lateral_convs.1.conv.weight, encoders.infra.neck.lateral_convs.1.bn.weight, encoders.infra.neck.lateral_convs.1.bn.bias, encoders.infra.neck.lateral_convs.1.bn.running_mean, encoders.infra.neck.lateral_convs.1.bn.running_var, encoders.infra.neck.fpn_convs.0.conv.weight, encoders.infra.neck.fpn_convs.0.bn.weight, encoders.infra.neck.fpn_convs.0.bn.bias, encoders.infra.neck.fpn_convs.0.bn.running_mean, encoders.infra.neck.fpn_convs.0.bn.running_var, encoders.infra.neck.fpn_convs.1.conv.weight, encoders.infra.neck.fpn_convs.1.bn.weight, encoders.infra.neck.fpn_convs.1.bn.bias, encoders.infra.neck.fpn_convs.1.bn.running_mean, encoders.infra.neck.fpn_convs.1.bn.running_var, encoders.infra.vtransform.dx, encoders.infra.vtransform.bx, encoders.infra.vtransform.nx, encoders.infra.vtransform.frustum, encoders.infra.vtransform.dtransform.0.weight, encoders.infra.vtransform.dtransform.0.bias, encoders.infra.vtransform.dtransform.1.weight, encoders.infra.vtransform.dtransform.1.bias, encoders.infra.vtransform.dtransform.1.running_mean, encoders.infra.vtransform.dtransform.1.running_var, encoders.infra.vtransform.dtransform.3.weight, encoders.infra.vtransform.dtransform.3.bias, encoders.infra.vtransform.dtransform.4.weight, encoders.infra.vtransform.dtransform.4.bias, encoders.infra.vtransform.dtransform.4.running_mean, encoders.infra.vtransform.dtransform.4.running_var, encoders.infra.vtransform.dtransform.6.weight, encoders.infra.vtransform.dtransform.6.bias, encoders.infra.vtransform.dtransform.7.weight, encoders.infra.vtransform.dtransform.7.bias, encoders.infra.vtransform.dtransform.7.running_mean, encoders.infra.vtransform.dtransform.7.running_var, encoders.infra.vtransform.depthnet.0.weight, encoders.infra.vtransform.depthnet.0.bias, encoders.infra.vtransform.depthnet.1.weight, encoders.infra.vtransform.depthnet.1.bias, encoders.infra.vtransform.depthnet.1.running_mean, encoders.infra.vtransform.depthnet.1.running_var, encoders.infra.vtransform.depthnet.3.weight, encoders.infra.vtransform.depthnet.3.bias, encoders.infra.vtransform.depthnet.4.weight, encoders.infra.vtransform.depthnet.4.bias, encoders.infra.vtransform.depthnet.4.running_mean, encoders.infra.vtransform.depthnet.4.running_var, encoders.infra.vtransform.depthnet.6.weight, encoders.infra.vtransform.depthnet.6.bias, encoders.infra.vtransform.downsample.0.weight, encoders.infra.vtransform.downsample.1.weight, encoders.infra.vtransform.downsample.1.bias, encoders.infra.vtransform.downsample.1.running_mean, encoders.infra.vtransform.downsample.1.running_var, encoders.infra.vtransform.downsample.3.weight, encoders.infra.vtransform.downsample.4.weight, encoders.infra.vtransform.downsample.4.bias, encoders.infra.vtransform.downsample.4.running_mean, encoders.infra.vtransform.downsample.4.running_var, encoders.infra.vtransform.downsample.6.weight, encoders.infra.vtransform.downsample.7.weight, encoders.infra.vtransform.downsample.7.bias, encoders.infra.vtransform.downsample.7.running_mean, encoders.infra.vtransform.downsample.7.running_var, fuser.0.weight, fuser.1.weight, fuser.1.bias, fuser.1.running_mean, fuser.1.running_var

2024-09-03 23:30:11,279 - mmdet3d - INFO - Start running, host: jmeng18@sg048, work_dir: /home/jmeng18/bev_fusion/bevfusion-beliv/train_result_infra_short_full
2024-09-03 23:30:11,279 - mmdet3d - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) CosineAnnealingLrUpdaterHook       
(HIGH        ) CyclicMomentumUpdaterHook          
(ABOVE_NORMAL) Fp16OptimizerHook                  
(NORMAL      ) CheckpointHook                     
(NORMAL      ) DistEvalHook                       
(VERY_LOW    ) TextLoggerHook                     
(VERY_LOW    ) TensorboardLoggerHook              
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) CosineAnnealingLrUpdaterHook       
(HIGH        ) CyclicMomentumUpdaterHook          
(NORMAL      ) DistSamplerSeedHook                
(NORMAL      ) DistEvalHook                       
(LOW         ) IterTimerHook                      
(VERY_LOW    ) TextLoggerHook                     
(VERY_LOW    ) TensorboardLoggerHook              
 -------------------- 
before_train_iter:
(VERY_HIGH   ) CosineAnnealingLrUpdaterHook       
(HIGH        ) CyclicMomentumUpdaterHook          
(NORMAL      ) DistEvalHook                       
(LOW         ) IterTimerHook                      
 -------------------- 
after_train_iter:
(ABOVE_NORMAL) Fp16OptimizerHook                  
(NORMAL      ) CheckpointHook                     
(NORMAL      ) DistEvalHook                       
(LOW         ) IterTimerHook                      
(VERY_LOW    ) TextLoggerHook                     
(VERY_LOW    ) TensorboardLoggerHook              
 -------------------- 
after_train_epoch:
(NORMAL      ) CheckpointHook                     
(NORMAL      ) DistEvalHook                       
(VERY_LOW    ) TextLoggerHook                     
(VERY_LOW    ) TensorboardLoggerHook              
 -------------------- 
before_val_epoch:
(NORMAL      ) DistSamplerSeedHook                
(LOW         ) IterTimerHook                      
(VERY_LOW    ) TextLoggerHook                     
(VERY_LOW    ) TensorboardLoggerHook              
 -------------------- 
before_val_iter:
(LOW         ) IterTimerHook                      
 -------------------- 
after_val_iter:
(LOW         ) IterTimerHook                      
 -------------------- 
after_val_epoch:
(VERY_LOW    ) TextLoggerHook                     
(VERY_LOW    ) TensorboardLoggerHook              
 -------------------- 
after_run:
(VERY_LOW    ) TextLoggerHook                     
(VERY_LOW    ) TensorboardLoggerHook              
 -------------------- 
2024-09-03 23:30:11,280 - mmdet3d - INFO - workflow: [('train', 1)], max: 10 epochs
2024-09-03 23:30:11,282 - mmdet3d - INFO - Checkpoints will be saved to /home/jmeng18/bev_fusion/bevfusion-beliv/train_result_infra_short_full by HardDiskBackend.
2024-09-03 23:31:05,639 - mmdet3d - INFO - Epoch [1][50/8000]	lr: 7.973e-05, eta: 1 day, 0:06:05, time: 1.085, data_time: 0.072, memory: 6907, loss/object/loss_heatmap: 237.4412, loss/object/layer_-1_loss_cls: 1.4099, loss/object/layer_-1_loss_bbox: 10.4439, stats/object/matched_ious: 0.0102, loss: 249.2949, grad_norm: nan
2024-09-03 23:31:55,756 - mmdet3d - INFO - Epoch [1][100/8000]	lr: 9.307e-05, eta: 23:09:59, time: 1.002, data_time: 0.012, memory: 6934, loss/object/loss_heatmap: 46.0494, loss/object/layer_-1_loss_cls: 0.7905, loss/object/layer_-1_loss_bbox: 6.1637, stats/object/matched_ious: 0.0178, loss: 53.0036, grad_norm: 500.5475
2024-09-03 23:32:53,399 - mmdet3d - INFO - Epoch [1][150/8000]	lr: 1.064e-04, eta: 23:57:29, time: 1.153, data_time: 0.147, memory: 6934, loss/object/loss_heatmap: 6.4377, loss/object/layer_-1_loss_cls: 0.5942, loss/object/layer_-1_loss_bbox: 4.0793, stats/object/matched_ious: 0.0672, loss: 11.1112, grad_norm: 102.0516
2024-09-03 23:34:01,218 - mmdet3d - INFO - Epoch [1][200/8000]	lr: 1.197e-04, eta: 1 day, 1:28:26, time: 1.356, data_time: 0.314, memory: 6948, loss/object/loss_heatmap: 2.4659, loss/object/layer_-1_loss_cls: 0.4161, loss/object/layer_-1_loss_bbox: 1.9630, stats/object/matched_ious: 0.1624, loss: 4.8450, grad_norm: 36.6869
2024-09-03 23:35:10,296 - mmdet3d - INFO - Epoch [1][250/8000]	lr: 1.331e-04, eta: 1 day, 2:29:14, time: 1.382, data_time: 0.293, memory: 6948, loss/object/loss_heatmap: 1.6656, loss/object/layer_-1_loss_cls: 0.2488, loss/object/layer_-1_loss_bbox: 1.4371, stats/object/matched_ious: 0.2280, loss: 3.3515, grad_norm: 15.9097
2024-09-03 23:36:17,493 - mmdet3d - INFO - Epoch [1][300/8000]	lr: 1.464e-04, eta: 1 day, 3:01:04, time: 1.344, data_time: 0.309, memory: 6948, loss/object/loss_heatmap: 1.5994, loss/object/layer_-1_loss_cls: 0.2153, loss/object/layer_-1_loss_bbox: 1.5908, stats/object/matched_ious: 0.2050, loss: 3.4055, grad_norm: 18.0084
2024-09-03 23:37:22,661 - mmdet3d - INFO - Epoch [1][350/8000]	lr: 1.597e-04, eta: 1 day, 3:15:47, time: 1.303, data_time: 0.239, memory: 6948, loss/object/loss_heatmap: 1.2812, loss/object/layer_-1_loss_cls: 0.1812, loss/object/layer_-1_loss_bbox: 1.2120, stats/object/matched_ious: 0.2530, loss: 2.6744, grad_norm: 12.5877
2024-09-03 23:38:27,807 - mmdet3d - INFO - Epoch [1][400/8000]	lr: 1.731e-04, eta: 1 day, 3:26:28, time: 1.303, data_time: 0.235, memory: 6949, loss/object/loss_heatmap: 1.2428, loss/object/layer_-1_loss_cls: 0.1591, loss/object/layer_-1_loss_bbox: 1.2196, stats/object/matched_ious: 0.2834, loss: 2.6215, grad_norm: 13.3752
2024-09-03 23:39:31,433 - mmdet3d - INFO - Epoch [1][450/8000]	lr: 1.864e-04, eta: 1 day, 3:30:04, time: 1.273, data_time: 0.225, memory: 6949, loss/object/loss_heatmap: 1.2744, loss/object/layer_-1_loss_cls: 0.1497, loss/object/layer_-1_loss_bbox: 1.3586, stats/object/matched_ious: 0.2667, loss: 2.7827, grad_norm: 11.0325
2024-09-03 23:40:38,357 - mmdet3d - INFO - Epoch [1][500/8000]	lr: 1.997e-04, eta: 1 day, 3:41:29, time: 1.338, data_time: 0.262, memory: 6949, loss/object/loss_heatmap: 1.0684, loss/object/layer_-1_loss_cls: 0.1168, loss/object/layer_-1_loss_bbox: 1.1909, stats/object/matched_ious: 0.3181, loss: 2.3761, grad_norm: 9.3596
2024-09-03 23:41:46,749 - mmdet3d - INFO - Epoch [1][550/8000]	lr: 2.000e-04, eta: 1 day, 3:54:09, time: 1.368, data_time: 0.290, memory: 6949, loss/object/loss_heatmap: 1.2108, loss/object/layer_-1_loss_cls: 0.1490, loss/object/layer_-1_loss_bbox: 1.2658, stats/object/matched_ious: 0.3138, loss: 2.6256, grad_norm: 9.5666
2024-09-03 23:42:46,993 - mmdet3d - INFO - Epoch [1][600/8000]	lr: 2.000e-04, eta: 1 day, 3:46:32, time: 1.205, data_time: 0.145, memory: 6949, loss/object/loss_heatmap: 1.1054, loss/object/layer_-1_loss_cls: 0.1350, loss/object/layer_-1_loss_bbox: 1.1923, stats/object/matched_ious: 0.3247, loss: 2.4327, grad_norm: 8.1044
2024-09-03 23:43:51,305 - mmdet3d - INFO - Epoch [1][650/8000]	lr: 2.000e-04, eta: 1 day, 3:48:13, time: 1.286, data_time: 0.256, memory: 6949, loss/object/loss_heatmap: 1.0970, loss/object/layer_-1_loss_cls: 0.1188, loss/object/layer_-1_loss_bbox: 1.3382, stats/object/matched_ious: 0.3345, loss: 2.5541, grad_norm: 8.2951
2024-09-03 23:44:57,287 - mmdet3d - INFO - Epoch [1][700/8000]	lr: 2.000e-04, eta: 1 day, 3:52:40, time: 1.320, data_time: 0.251, memory: 6952, loss/object/loss_heatmap: 1.0208, loss/object/layer_-1_loss_cls: 0.1397, loss/object/layer_-1_loss_bbox: 1.0693, stats/object/matched_ious: 0.3593, loss: 2.2299, grad_norm: 10.0458
2024-09-03 23:45:57,505 - mmdet3d - INFO - Epoch [1][750/8000]	lr: 2.000e-04, eta: 1 day, 3:46:13, time: 1.204, data_time: 0.152, memory: 6956, loss/object/loss_heatmap: 1.0462, loss/object/layer_-1_loss_cls: 0.1204, loss/object/layer_-1_loss_bbox: 1.2116, stats/object/matched_ious: 0.3592, loss: 2.3782, grad_norm: 9.7776
2024-09-03 23:47:02,662 - mmdet3d - INFO - Epoch [1][800/8000]	lr: 2.000e-04, eta: 1 day, 3:48:36, time: 1.303, data_time: 0.219, memory: 6956, loss/object/loss_heatmap: 0.9903, loss/object/layer_-1_loss_cls: 0.1221, loss/object/layer_-1_loss_bbox: 1.0361, stats/object/matched_ious: 0.3862, loss: 2.1485, grad_norm: 8.4375
2024-09-03 23:48:12,927 - mmdet3d - INFO - Epoch [1][850/8000]	lr: 2.000e-04, eta: 1 day, 3:58:30, time: 1.405, data_time: 0.365, memory: 6956, loss/object/loss_heatmap: 1.0088, loss/object/layer_-1_loss_cls: 0.1147, loss/object/layer_-1_loss_bbox: 1.0779, stats/object/matched_ious: 0.4082, loss: 2.2014, grad_norm: 8.3897
2024-09-03 23:49:15,441 - mmdet3d - INFO - Epoch [1][900/8000]	lr: 2.000e-04, eta: 1 day, 3:55:49, time: 1.250, data_time: 0.192, memory: 6956, loss/object/loss_heatmap: 0.9772, loss/object/layer_-1_loss_cls: 0.0997, loss/object/layer_-1_loss_bbox: 1.3016, stats/object/matched_ious: 0.3723, loss: 2.3785, grad_norm: 8.9914
2024-09-03 23:50:17,036 - mmdet3d - INFO - Epoch [1][950/8000]	lr: 2.000e-04, eta: 1 day, 3:52:02, time: 1.232, data_time: 0.177, memory: 6970, loss/object/loss_heatmap: 0.9915, loss/object/layer_-1_loss_cls: 0.1187, loss/object/layer_-1_loss_bbox: 1.1324, stats/object/matched_ious: 0.4184, loss: 2.2427, grad_norm: 9.6051
2024-09-03 23:51:23,950 - mmdet3d - INFO - Epoch [1][1000/8000]	lr: 2.000e-04, eta: 1 day, 3:55:32, time: 1.338, data_time: 0.259, memory: 6970, loss/object/loss_heatmap: 0.9083, loss/object/layer_-1_loss_cls: 0.1052, loss/object/layer_-1_loss_bbox: 1.1178, stats/object/matched_ious: 0.4251, loss: 2.1313, grad_norm: 7.0694
2024-09-03 23:52:25,015 - mmdet3d - INFO - Epoch [1][1050/8000]	lr: 2.000e-04, eta: 1 day, 3:51:16, time: 1.221, data_time: 0.171, memory: 6970, loss/object/loss_heatmap: 0.8803, loss/object/layer_-1_loss_cls: 0.0919, loss/object/layer_-1_loss_bbox: 1.1065, stats/object/matched_ious: 0.4368, loss: 2.0788, grad_norm: 6.4035
2024-09-03 23:53:31,686 - mmdet3d - INFO - Epoch [1][1100/8000]	lr: 2.000e-04, eta: 1 day, 3:53:59, time: 1.333, data_time: 0.273, memory: 6970, loss/object/loss_heatmap: 0.9249, loss/object/layer_-1_loss_cls: 0.1233, loss/object/layer_-1_loss_bbox: 1.0173, stats/object/matched_ious: 0.4282, loss: 2.0656, grad_norm: 8.3055
2024-09-03 23:54:35,935 - mmdet3d - INFO - Epoch [1][1150/8000]	lr: 2.000e-04, eta: 1 day, 3:53:37, time: 1.285, data_time: 0.183, memory: 6970, loss/object/loss_heatmap: 0.9001, loss/object/layer_-1_loss_cls: 0.1048, loss/object/layer_-1_loss_bbox: 1.0639, stats/object/matched_ious: 0.4423, loss: 2.0689, grad_norm: 7.3266
2024-09-03 23:55:37,040 - mmdet3d - INFO - Epoch [1][1200/8000]	lr: 2.000e-04, eta: 1 day, 3:49:44, time: 1.222, data_time: 0.178, memory: 6970, loss/object/loss_heatmap: 0.9149, loss/object/layer_-1_loss_cls: 0.1047, loss/object/layer_-1_loss_bbox: 1.0950, stats/object/matched_ious: 0.4485, loss: 2.1146, grad_norm: 8.1571
2024-09-03 23:56:35,521 - mmdet3d - INFO - Epoch [1][1250/8000]	lr: 2.000e-04, eta: 1 day, 3:43:20, time: 1.170, data_time: 0.114, memory: 6970, loss/object/loss_heatmap: 0.8082, loss/object/layer_-1_loss_cls: 0.0942, loss/object/layer_-1_loss_bbox: 0.9304, stats/object/matched_ious: 0.4792, loss: 1.8328, grad_norm: 6.8871
2024-09-03 23:57:37,720 - mmdet3d - INFO - Epoch [1][1300/8000]	lr: 2.000e-04, eta: 1 day, 3:41:06, time: 1.244, data_time: 0.127, memory: 6970, loss/object/loss_heatmap: 0.7703, loss/object/layer_-1_loss_cls: 0.0865, loss/object/layer_-1_loss_bbox: 0.9995, stats/object/matched_ious: 0.5022, loss: 1.8563, grad_norm: 6.4891
2024-09-03 23:58:39,372 - mmdet3d - INFO - Epoch [1][1350/8000]	lr: 2.000e-04, eta: 1 day, 3:38:25, time: 1.233, data_time: 0.169, memory: 6970, loss/object/loss_heatmap: 0.7866, loss/object/layer_-1_loss_cls: 0.0939, loss/object/layer_-1_loss_bbox: 0.9780, stats/object/matched_ious: 0.5174, loss: 1.8585, grad_norm: 6.1828
2024-09-03 23:59:42,942 - mmdet3d - INFO - Epoch [1][1400/8000]	lr: 2.000e-04, eta: 1 day, 3:37:40, time: 1.271, data_time: 0.181, memory: 6970, loss/object/loss_heatmap: 0.7584, loss/object/layer_-1_loss_cls: 0.0886, loss/object/layer_-1_loss_bbox: 1.0052, stats/object/matched_ious: 0.4923, loss: 1.8522, grad_norm: 5.9397
2024-09-04 00:00:45,336 - mmdet3d - INFO - Epoch [1][1450/8000]	lr: 2.000e-04, eta: 1 day, 3:35:49, time: 1.248, data_time: 0.154, memory: 6970, loss/object/loss_heatmap: 0.7819, loss/object/layer_-1_loss_cls: 0.0923, loss/object/layer_-1_loss_bbox: 0.8990, stats/object/matched_ious: 0.5222, loss: 1.7731, grad_norm: 7.1178
2024-09-04 00:01:47,910 - mmdet3d - INFO - Epoch [1][1500/8000]	lr: 2.000e-04, eta: 1 day, 3:34:11, time: 1.251, data_time: 0.193, memory: 6970, loss/object/loss_heatmap: 0.8312, loss/object/layer_-1_loss_cls: 0.1017, loss/object/layer_-1_loss_bbox: 1.0028, stats/object/matched_ious: 0.4979, loss: 1.9357, grad_norm: 6.8874
2024-09-04 00:02:47,350 - mmdet3d - INFO - Epoch [1][1550/8000]	lr: 2.000e-04, eta: 1 day, 3:29:56, time: 1.189, data_time: 0.133, memory: 6970, loss/object/loss_heatmap: 0.7540, loss/object/layer_-1_loss_cls: 0.0975, loss/object/layer_-1_loss_bbox: 0.8131, stats/object/matched_ious: 0.5266, loss: 1.6646, grad_norm: 5.9828
2024-09-04 00:03:49,833 - mmdet3d - INFO - Epoch [1][1600/8000]	lr: 2.000e-04, eta: 1 day, 3:28:23, time: 1.250, data_time: 0.190, memory: 6970, loss/object/loss_heatmap: 0.7642, loss/object/layer_-1_loss_cls: 0.0844, loss/object/layer_-1_loss_bbox: 1.1154, stats/object/matched_ious: 0.4984, loss: 1.9640, grad_norm: 5.7180
2024-09-04 00:04:51,273 - mmdet3d - INFO - Epoch [1][1650/8000]	lr: 2.000e-04, eta: 1 day, 3:26:02, time: 1.229, data_time: 0.136, memory: 6970, loss/object/loss_heatmap: 0.8304, loss/object/layer_-1_loss_cls: 0.0941, loss/object/layer_-1_loss_bbox: 1.0178, stats/object/matched_ious: 0.5090, loss: 1.9423, grad_norm: 5.6240
2024-09-04 00:05:53,190 - mmdet3d - INFO - Epoch [1][1700/8000]	lr: 2.000e-04, eta: 1 day, 3:24:08, time: 1.238, data_time: 0.160, memory: 6970, loss/object/loss_heatmap: 0.7597, loss/object/layer_-1_loss_cls: 0.0907, loss/object/layer_-1_loss_bbox: 0.8958, stats/object/matched_ious: 0.5324, loss: 1.7462, grad_norm: 6.1643
2024-09-04 00:06:55,210 - mmdet3d - INFO - Epoch [1][1750/8000]	lr: 2.000e-04, eta: 1 day, 3:22:22, time: 1.240, data_time: 0.170, memory: 6970, loss/object/loss_heatmap: 0.7442, loss/object/layer_-1_loss_cls: 0.0845, loss/object/layer_-1_loss_bbox: 1.0103, stats/object/matched_ious: 0.5296, loss: 1.8390, grad_norm: 5.7834
2024-09-04 00:07:54,163 - mmdet3d - INFO - Epoch [1][1800/8000]	lr: 2.000e-04, eta: 1 day, 3:18:24, time: 1.179, data_time: 0.093, memory: 6970, loss/object/loss_heatmap: 0.7182, loss/object/layer_-1_loss_cls: 0.0860, loss/object/layer_-1_loss_bbox: 0.8176, stats/object/matched_ious: 0.5327, loss: 1.6219, grad_norm: 5.3677
2024-09-04 00:08:51,347 - mmdet3d - INFO - Epoch [1][1850/8000]	lr: 2.000e-04, eta: 1 day, 3:13:22, time: 1.144, data_time: 0.101, memory: 6970, loss/object/loss_heatmap: 0.7189, loss/object/layer_-1_loss_cls: 0.0809, loss/object/layer_-1_loss_bbox: 0.8888, stats/object/matched_ious: 0.5450, loss: 1.6885, grad_norm: 5.8096
2024-09-04 00:09:48,756 - mmdet3d - INFO - Epoch [1][1900/8000]	lr: 2.000e-04, eta: 1 day, 3:08:42, time: 1.148, data_time: 0.077, memory: 6970, loss/object/loss_heatmap: 0.6646, loss/object/layer_-1_loss_cls: 0.0852, loss/object/layer_-1_loss_bbox: 0.7541, stats/object/matched_ious: 0.5713, loss: 1.5039, grad_norm: 5.0919
2024-09-04 00:10:49,336 - mmdet3d - INFO - Epoch [1][1950/8000]	lr: 2.000e-04, eta: 1 day, 3:06:20, time: 1.212, data_time: 0.157, memory: 6970, loss/object/loss_heatmap: 0.7397, loss/object/layer_-1_loss_cls: 0.0834, loss/object/layer_-1_loss_bbox: 1.0343, stats/object/matched_ious: 0.5132, loss: 1.8575, grad_norm: 5.6826
2024-09-04 00:11:51,741 - mmdet3d - INFO - Epoch [1][2000/8000]	lr: 2.000e-04, eta: 1 day, 3:05:13, time: 1.248, data_time: 0.208, memory: 6970, loss/object/loss_heatmap: 0.7941, loss/object/layer_-1_loss_cls: 0.0998, loss/object/layer_-1_loss_bbox: 0.9550, stats/object/matched_ious: 0.5140, loss: 1.8489, grad_norm: 5.9660
2024-09-04 00:12:52,452 - mmdet3d - INFO - Epoch [1][2050/8000]	lr: 2.000e-04, eta: 1 day, 3:03:02, time: 1.214, data_time: 0.162, memory: 6970, loss/object/loss_heatmap: 0.7031, loss/object/layer_-1_loss_cls: 0.0829, loss/object/layer_-1_loss_bbox: 0.8189, stats/object/matched_ious: 0.5279, loss: 1.6049, grad_norm: 5.9384
2024-09-04 00:13:51,428 - mmdet3d - INFO - Epoch [1][2100/8000]	lr: 2.000e-04, eta: 1 day, 2:59:50, time: 1.180, data_time: 0.127, memory: 6970, loss/object/loss_heatmap: 0.7144, loss/object/layer_-1_loss_cls: 0.0841, loss/object/layer_-1_loss_bbox: 0.9030, stats/object/matched_ious: 0.5363, loss: 1.7016, grad_norm: 5.0745
2024-09-04 00:14:51,025 - mmdet3d - INFO - Epoch [1][2150/8000]	lr: 2.000e-04, eta: 1 day, 2:57:07, time: 1.192, data_time: 0.121, memory: 6970, loss/object/loss_heatmap: 0.6952, loss/object/layer_-1_loss_cls: 0.0775, loss/object/layer_-1_loss_bbox: 0.9029, stats/object/matched_ious: 0.5455, loss: 1.6756, grad_norm: 4.7993
2024-09-04 00:15:47,756 - mmdet3d - INFO - Epoch [1][2200/8000]	lr: 2.000e-04, eta: 1 day, 2:52:47, time: 1.135, data_time: 0.071, memory: 6970, loss/object/loss_heatmap: 0.6866, loss/object/layer_-1_loss_cls: 0.0790, loss/object/layer_-1_loss_bbox: 0.8027, stats/object/matched_ious: 0.5489, loss: 1.5683, grad_norm: 4.9580
2024-09-04 00:16:46,596 - mmdet3d - INFO - Epoch [1][2250/8000]	lr: 2.000e-04, eta: 1 day, 2:49:49, time: 1.177, data_time: 0.126, memory: 6970, loss/object/loss_heatmap: 0.7721, loss/object/layer_-1_loss_cls: 0.0936, loss/object/layer_-1_loss_bbox: 1.0477, stats/object/matched_ious: 0.5334, loss: 1.9134, grad_norm: 5.8498
2024-09-04 00:17:49,126 - mmdet3d - INFO - Epoch [1][2300/8000]	lr: 2.000e-04, eta: 1 day, 2:49:01, time: 1.251, data_time: 0.174, memory: 6970, loss/object/loss_heatmap: 0.6895, loss/object/layer_-1_loss_cls: 0.0880, loss/object/layer_-1_loss_bbox: 0.7044, stats/object/matched_ious: 0.5684, loss: 1.4818, grad_norm: 5.9222
2024-09-04 00:18:47,793 - mmdet3d - INFO - Epoch [1][2350/8000]	lr: 2.000e-04, eta: 1 day, 2:46:05, time: 1.173, data_time: 0.071, memory: 6970, loss/object/loss_heatmap: 0.7032, loss/object/layer_-1_loss_cls: 0.0834, loss/object/layer_-1_loss_bbox: 0.8419, stats/object/matched_ious: 0.5566, loss: 1.6285, grad_norm: 4.5595
2024-09-04 00:19:45,290 - mmdet3d - INFO - Epoch [1][2400/8000]	lr: 2.000e-04, eta: 1 day, 2:42:35, time: 1.150, data_time: 0.088, memory: 6970, loss/object/loss_heatmap: 0.7161, loss/object/layer_-1_loss_cls: 0.0892, loss/object/layer_-1_loss_bbox: 0.8559, stats/object/matched_ious: 0.5628, loss: 1.6613, grad_norm: 4.9738
2024-09-04 00:20:43,883 - mmdet3d - INFO - Epoch [1][2450/8000]	lr: 2.000e-04, eta: 1 day, 2:39:47, time: 1.172, data_time: 0.103, memory: 6970, loss/object/loss_heatmap: 0.6461, loss/object/layer_-1_loss_cls: 0.0817, loss/object/layer_-1_loss_bbox: 0.8054, stats/object/matched_ious: 0.5683, loss: 1.5331, grad_norm: 4.5717
2024-09-04 00:21:43,140 - mmdet3d - INFO - Epoch [1][2500/8000]	lr: 2.000e-04, eta: 1 day, 2:37:24, time: 1.185, data_time: 0.112, memory: 6970, loss/object/loss_heatmap: 0.6651, loss/object/layer_-1_loss_cls: 0.0829, loss/object/layer_-1_loss_bbox: 0.7671, stats/object/matched_ious: 0.5735, loss: 1.5151, grad_norm: 5.0039
2024-09-04 00:22:44,613 - mmdet3d - INFO - Epoch [1][2550/8000]	lr: 2.000e-04, eta: 1 day, 2:36:11, time: 1.229, data_time: 0.162, memory: 6970, loss/object/loss_heatmap: 0.6521, loss/object/layer_-1_loss_cls: 0.0794, loss/object/layer_-1_loss_bbox: 0.7559, stats/object/matched_ious: 0.5609, loss: 1.4874, grad_norm: 5.2103
2024-09-04 00:23:46,300 - mmdet3d - INFO - Epoch [1][2600/8000]	lr: 2.000e-04, eta: 1 day, 2:35:05, time: 1.234, data_time: 0.165, memory: 6970, loss/object/loss_heatmap: 0.6798, loss/object/layer_-1_loss_cls: 0.0802, loss/object/layer_-1_loss_bbox: 0.8370, stats/object/matched_ious: 0.5510, loss: 1.5970, grad_norm: 4.5624
2024-09-04 00:24:43,932 - mmdet3d - INFO - Epoch [1][2650/8000]	lr: 2.000e-04, eta: 1 day, 2:32:00, time: 1.153, data_time: 0.059, memory: 6970, loss/object/loss_heatmap: 0.6706, loss/object/layer_-1_loss_cls: 0.0878, loss/object/layer_-1_loss_bbox: 0.7134, stats/object/matched_ious: 0.5741, loss: 1.4719, grad_norm: 4.5003
2024-09-04 00:25:44,627 - mmdet3d - INFO - Epoch [1][2700/8000]	lr: 2.000e-04, eta: 1 day, 2:30:29, time: 1.214, data_time: 0.113, memory: 6970, loss/object/loss_heatmap: 0.6272, loss/object/layer_-1_loss_cls: 0.0819, loss/object/layer_-1_loss_bbox: 0.7368, stats/object/matched_ious: 0.5788, loss: 1.4459, grad_norm: 4.9671
2024-09-04 00:26:44,389 - mmdet3d - INFO - Epoch [1][2750/8000]	lr: 2.000e-04, eta: 1 day, 2:28:32, time: 1.195, data_time: 0.095, memory: 6970, loss/object/loss_heatmap: 0.6694, loss/object/layer_-1_loss_cls: 0.0785, loss/object/layer_-1_loss_bbox: 0.8374, stats/object/matched_ious: 0.5638, loss: 1.5853, grad_norm: 4.1895
2024-09-04 00:27:40,235 - mmdet3d - INFO - Epoch [1][2800/8000]	lr: 2.000e-04, eta: 1 day, 2:24:49, time: 1.117, data_time: 0.045, memory: 6970, loss/object/loss_heatmap: 0.7191, loss/object/layer_-1_loss_cls: 0.0955, loss/object/layer_-1_loss_bbox: 0.8215, stats/object/matched_ious: 0.5450, loss: 1.6361, grad_norm: 4.8387
2024-09-04 00:28:40,769 - mmdet3d - INFO - Epoch [1][2850/8000]	lr: 2.000e-04, eta: 1 day, 2:23:19, time: 1.211, data_time: 0.111, memory: 6970, loss/object/loss_heatmap: 0.6880, loss/object/layer_-1_loss_cls: 0.0869, loss/object/layer_-1_loss_bbox: 0.9306, stats/object/matched_ious: 0.5606, loss: 1.7055, grad_norm: 4.7223
2024-09-04 00:29:45,852 - mmdet3d - INFO - Epoch [1][2900/8000]	lr: 2.000e-04, eta: 1 day, 2:23:51, time: 1.302, data_time: 0.210, memory: 6970, loss/object/loss_heatmap: 0.6801, loss/object/layer_-1_loss_cls: 0.0822, loss/object/layer_-1_loss_bbox: 0.8262, stats/object/matched_ious: 0.5709, loss: 1.5885, grad_norm: 4.5388
2024-09-04 00:30:47,421 - mmdet3d - INFO - Epoch [1][2950/8000]	lr: 2.000e-04, eta: 1 day, 2:22:48, time: 1.231, data_time: 0.129, memory: 6970, loss/object/loss_heatmap: 0.7479, loss/object/layer_-1_loss_cls: 0.0863, loss/object/layer_-1_loss_bbox: 0.9990, stats/object/matched_ious: 0.5535, loss: 1.8332, grad_norm: 4.5775
2024-09-04 00:31:47,221 - mmdet3d - INFO - Epoch [1][3000/8000]	lr: 2.000e-04, eta: 1 day, 2:20:59, time: 1.196, data_time: 0.114, memory: 6970, loss/object/loss_heatmap: 0.6897, loss/object/layer_-1_loss_cls: 0.0791, loss/object/layer_-1_loss_bbox: 0.9341, stats/object/matched_ious: 0.5621, loss: 1.7029, grad_norm: 4.2189
2024-09-04 00:32:45,719 - mmdet3d - INFO - Epoch [1][3050/8000]	lr: 2.000e-04, eta: 1 day, 2:18:39, time: 1.170, data_time: 0.076, memory: 6970, loss/object/loss_heatmap: 0.7079, loss/object/layer_-1_loss_cls: 0.0781, loss/object/layer_-1_loss_bbox: 0.8507, stats/object/matched_ious: 0.5670, loss: 1.6367, grad_norm: 4.4715
2024-09-04 00:33:43,348 - mmdet3d - INFO - Epoch [1][3100/8000]	lr: 2.000e-04, eta: 1 day, 2:16:00, time: 1.153, data_time: 0.077, memory: 6970, loss/object/loss_heatmap: 0.6229, loss/object/layer_-1_loss_cls: 0.0798, loss/object/layer_-1_loss_bbox: 0.7098, stats/object/matched_ious: 0.5818, loss: 1.4125, grad_norm: 4.5478
2024-09-04 00:34:44,184 - mmdet3d - INFO - Epoch [1][3150/8000]	lr: 2.000e-04, eta: 1 day, 2:14:43, time: 1.217, data_time: 0.133, memory: 6970, loss/object/loss_heatmap: 0.6838, loss/object/layer_-1_loss_cls: 0.0812, loss/object/layer_-1_loss_bbox: 0.7779, stats/object/matched_ious: 0.5826, loss: 1.5429, grad_norm: 4.7041
2024-09-04 00:35:43,301 - mmdet3d - INFO - Epoch [1][3200/8000]	lr: 2.000e-04, eta: 1 day, 2:12:45, time: 1.182, data_time: 0.123, memory: 6970, loss/object/loss_heatmap: 0.6375, loss/object/layer_-1_loss_cls: 0.0838, loss/object/layer_-1_loss_bbox: 0.7783, stats/object/matched_ious: 0.5661, loss: 1.4996, grad_norm: 4.9509
2024-09-04 00:36:40,832 - mmdet3d - INFO - Epoch [1][3250/8000]	lr: 2.000e-04, eta: 1 day, 2:10:12, time: 1.151, data_time: 0.086, memory: 6970, loss/object/loss_heatmap: 0.6924, loss/object/layer_-1_loss_cls: 0.0812, loss/object/layer_-1_loss_bbox: 0.7954, stats/object/matched_ious: 0.5841, loss: 1.5690, grad_norm: 4.2015
2024-09-04 00:37:34,691 - mmdet3d - INFO - Epoch [1][3300/8000]	lr: 2.000e-04, eta: 1 day, 2:06:15, time: 1.077, data_time: 0.039, memory: 6970, loss/object/loss_heatmap: 0.6142, loss/object/layer_-1_loss_cls: 0.0760, loss/object/layer_-1_loss_bbox: 0.7073, stats/object/matched_ious: 0.5915, loss: 1.3975, grad_norm: 5.1174
2024-09-04 00:38:32,579 - mmdet3d - INFO - Epoch [1][3350/8000]	lr: 2.000e-04, eta: 1 day, 2:03:57, time: 1.158, data_time: 0.108, memory: 6970, loss/object/loss_heatmap: 0.6302, loss/object/layer_-1_loss_cls: 0.0823, loss/object/layer_-1_loss_bbox: 0.7597, stats/object/matched_ious: 0.5933, loss: 1.4722, grad_norm: 4.4644
2024-09-04 00:39:31,016 - mmdet3d - INFO - Epoch [1][3400/8000]	lr: 2.000e-04, eta: 1 day, 2:01:53, time: 1.169, data_time: 0.080, memory: 6970, loss/object/loss_heatmap: 0.6106, loss/object/layer_-1_loss_cls: 0.0831, loss/object/layer_-1_loss_bbox: 0.6276, stats/object/matched_ious: 0.5830, loss: 1.3213, grad_norm: 5.0344
2024-09-04 00:40:29,801 - mmdet3d - INFO - Epoch [1][3450/8000]	lr: 2.000e-04, eta: 1 day, 1:59:59, time: 1.176, data_time: 0.094, memory: 6970, loss/object/loss_heatmap: 0.6744, loss/object/layer_-1_loss_cls: 0.0748, loss/object/layer_-1_loss_bbox: 0.8775, stats/object/matched_ious: 0.5787, loss: 1.6266, grad_norm: 5.1603
2024-09-04 00:41:24,947 - mmdet3d - INFO - Epoch [1][3500/8000]	lr: 2.000e-04, eta: 1 day, 1:56:47, time: 1.103, data_time: 0.025, memory: 6970, loss/object/loss_heatmap: 0.6457, loss/object/layer_-1_loss_cls: 0.0827, loss/object/layer_-1_loss_bbox: 0.7721, stats/object/matched_ious: 0.5759, loss: 1.5005, grad_norm: 4.2470
2024-09-04 00:42:23,244 - mmdet3d - INFO - Epoch [1][3550/8000]	lr: 2.000e-04, eta: 1 day, 1:54:47, time: 1.166, data_time: 0.077, memory: 6970, loss/object/loss_heatmap: 0.6434, loss/object/layer_-1_loss_cls: 0.0805, loss/object/layer_-1_loss_bbox: 0.7714, stats/object/matched_ious: 0.5852, loss: 1.4952, grad_norm: 3.8730
2024-09-04 00:43:21,453 - mmdet3d - INFO - Epoch [1][3600/8000]	lr: 2.000e-04, eta: 1 day, 1:52:46, time: 1.164, data_time: 0.060, memory: 6970, loss/object/loss_heatmap: 0.6277, loss/object/layer_-1_loss_cls: 0.0704, loss/object/layer_-1_loss_bbox: 0.8318, stats/object/matched_ious: 0.5842, loss: 1.5299, grad_norm: 4.3466
2024-09-04 00:44:18,812 - mmdet3d - INFO - Epoch [1][3650/8000]	lr: 2.000e-04, eta: 1 day, 1:50:30, time: 1.147, data_time: 0.091, memory: 6970, loss/object/loss_heatmap: 0.5932, loss/object/layer_-1_loss_cls: 0.0777, loss/object/layer_-1_loss_bbox: 0.6533, stats/object/matched_ious: 0.6032, loss: 1.3243, grad_norm: 4.4804
2024-09-04 00:45:16,382 - mmdet3d - INFO - Epoch [1][3700/8000]	lr: 2.000e-04, eta: 1 day, 1:48:20, time: 1.151, data_time: 0.099, memory: 6970, loss/object/loss_heatmap: 0.6015, loss/object/layer_-1_loss_cls: 0.0798, loss/object/layer_-1_loss_bbox: 0.6612, stats/object/matched_ious: 0.5945, loss: 1.3426, grad_norm: 4.1394
2024-09-04 00:46:16,415 - mmdet3d - INFO - Epoch [1][3750/8000]	lr: 2.000e-04, eta: 1 day, 1:47:01, time: 1.201, data_time: 0.111, memory: 6970, loss/object/loss_heatmap: 0.6539, loss/object/layer_-1_loss_cls: 0.0817, loss/object/layer_-1_loss_bbox: 0.8691, stats/object/matched_ious: 0.5809, loss: 1.6047, grad_norm: 4.1557
2024-09-04 00:47:16,190 - mmdet3d - INFO - Epoch [1][3800/8000]	lr: 2.000e-04, eta: 1 day, 1:45:39, time: 1.196, data_time: 0.137, memory: 6970, loss/object/loss_heatmap: 0.6099, loss/object/layer_-1_loss_cls: 0.0712, loss/object/layer_-1_loss_bbox: 0.7701, stats/object/matched_ious: 0.5872, loss: 1.4512, grad_norm: 4.1768
2024-09-04 00:48:12,885 - mmdet3d - INFO - Epoch [1][3850/8000]	lr: 2.000e-04, eta: 1 day, 1:43:16, time: 1.134, data_time: 0.074, memory: 6970, loss/object/loss_heatmap: 0.6274, loss/object/layer_-1_loss_cls: 0.0704, loss/object/layer_-1_loss_bbox: 0.7690, stats/object/matched_ious: 0.5863, loss: 1.4667, grad_norm: 4.1763
2024-09-04 00:49:09,485 - mmdet3d - INFO - Epoch [1][3900/8000]	lr: 2.000e-04, eta: 1 day, 1:40:53, time: 1.132, data_time: 0.052, memory: 6970, loss/object/loss_heatmap: 0.7606, loss/object/layer_-1_loss_cls: 0.0779, loss/object/layer_-1_loss_bbox: 1.1422, stats/object/matched_ious: 0.5445, loss: 1.9807, grad_norm: 4.1976
2024-09-04 00:50:06,375 - mmdet3d - INFO - Epoch [1][3950/8000]	lr: 2.000e-04, eta: 1 day, 1:38:38, time: 1.138, data_time: 0.075, memory: 6970, loss/object/loss_heatmap: 0.6668, loss/object/layer_-1_loss_cls: 0.0864, loss/object/layer_-1_loss_bbox: 0.8487, stats/object/matched_ious: 0.5860, loss: 1.6020, grad_norm: 4.1346
2024-09-04 00:51:06,031 - mmdet3d - INFO - Epoch [1][4000/8000]	lr: 2.000e-04, eta: 1 day, 1:37:17, time: 1.193, data_time: 0.138, memory: 6970, loss/object/loss_heatmap: 0.6383, loss/object/layer_-1_loss_cls: 0.0871, loss/object/layer_-1_loss_bbox: 0.7554, stats/object/matched_ious: 0.5937, loss: 1.4807, grad_norm: 4.0255
2024-09-04 00:52:06,553 - mmdet3d - INFO - Epoch [1][4050/8000]	lr: 2.000e-04, eta: 1 day, 1:36:14, time: 1.210, data_time: 0.160, memory: 6970, loss/object/loss_heatmap: 0.6882, loss/object/layer_-1_loss_cls: 0.0819, loss/object/layer_-1_loss_bbox: 0.8222, stats/object/matched_ious: 0.5682, loss: 1.5923, grad_norm: 4.5026
2024-09-04 00:53:05,007 - mmdet3d - INFO - Epoch [1][4100/8000]	lr: 2.000e-04, eta: 1 day, 1:34:32, time: 1.169, data_time: 0.138, memory: 6970, loss/object/loss_heatmap: 0.7268, loss/object/layer_-1_loss_cls: 0.0846, loss/object/layer_-1_loss_bbox: 1.0413, stats/object/matched_ious: 0.5508, loss: 1.8527, grad_norm: 4.4116
2024-09-04 00:54:01,523 - mmdet3d - INFO - Epoch [1][4150/8000]	lr: 2.000e-04, eta: 1 day, 1:32:16, time: 1.130, data_time: 0.082, memory: 6970, loss/object/loss_heatmap: 0.6294, loss/object/layer_-1_loss_cls: 0.0822, loss/object/layer_-1_loss_bbox: 0.7389, stats/object/matched_ious: 0.5936, loss: 1.4505, grad_norm: 3.8437
2024-09-04 00:54:58,645 - mmdet3d - INFO - Epoch [1][4200/8000]	lr: 2.000e-04, eta: 1 day, 1:30:12, time: 1.142, data_time: 0.049, memory: 6970, loss/object/loss_heatmap: 0.6153, loss/object/layer_-1_loss_cls: 0.0704, loss/object/layer_-1_loss_bbox: 0.7747, stats/object/matched_ious: 0.5818, loss: 1.4603, grad_norm: 3.6705
2024-09-04 00:55:53,302 - mmdet3d - INFO - Epoch [1][4250/8000]	lr: 2.000e-04, eta: 1 day, 1:27:26, time: 1.093, data_time: 0.031, memory: 6970, loss/object/loss_heatmap: 0.6507, loss/object/layer_-1_loss_cls: 0.0805, loss/object/layer_-1_loss_bbox: 0.8084, stats/object/matched_ious: 0.5819, loss: 1.5397, grad_norm: 3.6515
2024-09-04 00:56:51,229 - mmdet3d - INFO - Epoch [1][4300/8000]	lr: 2.000e-04, eta: 1 day, 1:25:41, time: 1.159, data_time: 0.106, memory: 6970, loss/object/loss_heatmap: 0.6729, loss/object/layer_-1_loss_cls: 0.0900, loss/object/layer_-1_loss_bbox: 0.8458, stats/object/matched_ious: 0.5805, loss: 1.6087, grad_norm: 3.9491
2024-09-04 00:57:47,266 - mmdet3d - INFO - Epoch [1][4350/8000]	lr: 2.000e-04, eta: 1 day, 1:23:23, time: 1.121, data_time: 0.072, memory: 6970, loss/object/loss_heatmap: 0.6114, loss/object/layer_-1_loss_cls: 0.0751, loss/object/layer_-1_loss_bbox: 0.7786, stats/object/matched_ious: 0.5973, loss: 1.4650, grad_norm: 3.2048
2024-09-04 00:58:46,056 - mmdet3d - INFO - Epoch [1][4400/8000]	lr: 2.000e-04, eta: 1 day, 1:21:55, time: 1.176, data_time: 0.125, memory: 6970, loss/object/loss_heatmap: 0.6155, loss/object/layer_-1_loss_cls: 0.0851, loss/object/layer_-1_loss_bbox: 0.6503, stats/object/matched_ious: 0.6028, loss: 1.3510, grad_norm: 3.3615
2024-09-04 00:59:44,177 - mmdet3d - INFO - Epoch [1][4450/8000]	lr: 2.000e-04, eta: 1 day, 1:20:16, time: 1.162, data_time: 0.097, memory: 6970, loss/object/loss_heatmap: 0.6362, loss/object/layer_-1_loss_cls: 0.0842, loss/object/layer_-1_loss_bbox: 0.7558, stats/object/matched_ious: 0.6002, loss: 1.4763, grad_norm: 3.4146
2024-09-04 01:00:39,136 - mmdet3d - INFO - Epoch [1][4500/8000]	lr: 2.000e-04, eta: 1 day, 1:17:45, time: 1.099, data_time: 0.044, memory: 6970, loss/object/loss_heatmap: 0.6366, loss/object/layer_-1_loss_cls: 0.0806, loss/object/layer_-1_loss_bbox: 0.7003, stats/object/matched_ious: 0.5874, loss: 1.4174, grad_norm: 3.7357
2024-09-04 01:01:31,727 - mmdet3d - INFO - Epoch [1][4550/8000]	lr: 2.000e-04, eta: 1 day, 1:14:37, time: 1.052, data_time: 0.024, memory: 6970, loss/object/loss_heatmap: 0.6392, loss/object/layer_-1_loss_cls: 0.0703, loss/object/layer_-1_loss_bbox: 0.7969, stats/object/matched_ious: 0.5951, loss: 1.5063, grad_norm: 3.2049
2024-09-04 01:02:27,540 - mmdet3d - INFO - Epoch [1][4600/8000]	lr: 2.000e-04, eta: 1 day, 1:12:24, time: 1.116, data_time: 0.040, memory: 6970, loss/object/loss_heatmap: 0.6367, loss/object/layer_-1_loss_cls: 0.0805, loss/object/layer_-1_loss_bbox: 0.6993, stats/object/matched_ious: 0.5999, loss: 1.4165, grad_norm: 3.4631
2024-09-04 01:03:23,052 - mmdet3d - INFO - Epoch [1][4650/8000]	lr: 2.000e-04, eta: 1 day, 1:10:08, time: 1.110, data_time: 0.042, memory: 6970, loss/object/loss_heatmap: 0.6268, loss/object/layer_-1_loss_cls: 0.0804, loss/object/layer_-1_loss_bbox: 0.8065, stats/object/matched_ious: 0.5954, loss: 1.5137, grad_norm: 3.6451
2024-09-04 01:04:21,408 - mmdet3d - INFO - Epoch [1][4700/8000]	lr: 2.000e-04, eta: 1 day, 1:08:40, time: 1.167, data_time: 0.102, memory: 6970, loss/object/loss_heatmap: 0.6884, loss/object/layer_-1_loss_cls: 0.0815, loss/object/layer_-1_loss_bbox: 0.8858, stats/object/matched_ious: 0.5776, loss: 1.6557, grad_norm: 3.7760
2024-09-04 01:05:15,734 - mmdet3d - INFO - Epoch [1][4750/8000]	lr: 2.000e-04, eta: 1 day, 1:06:08, time: 1.087, data_time: 0.052, memory: 6970, loss/object/loss_heatmap: 0.6495, loss/object/layer_-1_loss_cls: 0.0865, loss/object/layer_-1_loss_bbox: 0.7861, stats/object/matched_ious: 0.5805, loss: 1.5221, grad_norm: 4.2651
2024-09-04 01:06:15,700 - mmdet3d - INFO - Epoch [1][4800/8000]	lr: 2.000e-04, eta: 1 day, 1:05:07, time: 1.199, data_time: 0.035, memory: 6970, loss/object/loss_heatmap: 0.6266, loss/object/layer_-1_loss_cls: 0.0859, loss/object/layer_-1_loss_bbox: 0.7258, stats/object/matched_ious: 0.5943, loss: 1.4383, grad_norm: 3.6770
2024-09-04 01:07:12,861 - mmdet3d - INFO - Epoch [1][4850/8000]	lr: 2.000e-04, eta: 1 day, 1:03:22, time: 1.143, data_time: 0.056, memory: 6970, loss/object/loss_heatmap: 0.5838, loss/object/layer_-1_loss_cls: 0.0807, loss/object/layer_-1_loss_bbox: 0.6705, stats/object/matched_ious: 0.6105, loss: 1.3349, grad_norm: 3.5548
2024-09-04 01:08:08,283 - mmdet3d - INFO - Epoch [1][4900/8000]	lr: 2.000e-04, eta: 1 day, 1:01:12, time: 1.108, data_time: 0.040, memory: 6970, loss/object/loss_heatmap: 0.5966, loss/object/layer_-1_loss_cls: 0.0697, loss/object/layer_-1_loss_bbox: 0.8085, stats/object/matched_ious: 0.6009, loss: 1.4747, grad_norm: 3.2344
2024-09-04 01:09:05,293 - mmdet3d - INFO - Epoch [1][4950/8000]	lr: 2.000e-04, eta: 1 day, 0:59:27, time: 1.140, data_time: 0.043, memory: 6970, loss/object/loss_heatmap: 0.6349, loss/object/layer_-1_loss_cls: 0.0726, loss/object/layer_-1_loss_bbox: 0.8196, stats/object/matched_ious: 0.5836, loss: 1.5271, grad_norm: 3.3656
2024-09-04 01:10:01,747 - mmdet3d - INFO - Epoch [1][5000/8000]	lr: 2.000e-04, eta: 1 day, 0:57:35, time: 1.129, data_time: 0.094, memory: 6970, loss/object/loss_heatmap: 0.6483, loss/object/layer_-1_loss_cls: 0.0822, loss/object/layer_-1_loss_bbox: 0.7659, stats/object/matched_ious: 0.6017, loss: 1.4964, grad_norm: 3.3076
2024-09-04 01:10:58,016 - mmdet3d - INFO - Epoch [1][5050/8000]	lr: 2.000e-04, eta: 1 day, 0:55:41, time: 1.125, data_time: 0.056, memory: 6970, loss/object/loss_heatmap: 0.6123, loss/object/layer_-1_loss_cls: 0.0698, loss/object/layer_-1_loss_bbox: 0.8238, stats/object/matched_ious: 0.5947, loss: 1.5059, grad_norm: 3.2501
2024-09-04 01:11:53,908 - mmdet3d - INFO - Epoch [1][5100/8000]	lr: 2.000e-04, eta: 1 day, 0:53:42, time: 1.118, data_time: 0.048, memory: 6970, loss/object/loss_heatmap: 0.6058, loss/object/layer_-1_loss_cls: 0.0732, loss/object/layer_-1_loss_bbox: 0.7900, stats/object/matched_ious: 0.6085, loss: 1.4690, grad_norm: 3.0461
2024-09-04 01:12:50,915 - mmdet3d - INFO - Epoch [1][5150/8000]	lr: 2.000e-04, eta: 1 day, 0:52:02, time: 1.140, data_time: 0.084, memory: 6970, loss/object/loss_heatmap: 0.6161, loss/object/layer_-1_loss_cls: 0.0736, loss/object/layer_-1_loss_bbox: 0.6827, stats/object/matched_ious: 0.6042, loss: 1.3724, grad_norm: 3.2037
2024-09-04 01:13:44,477 - mmdet3d - INFO - Epoch [1][5200/8000]	lr: 2.000e-04, eta: 1 day, 0:49:32, time: 1.071, data_time: 0.024, memory: 6970, loss/object/loss_heatmap: 0.5794, loss/object/layer_-1_loss_cls: 0.0677, loss/object/layer_-1_loss_bbox: 0.6891, stats/object/matched_ious: 0.6117, loss: 1.3363, grad_norm: 3.1267
2024-09-04 01:14:38,466 - mmdet3d - INFO - Epoch [1][5250/8000]	lr: 2.000e-04, eta: 1 day, 0:47:10, time: 1.080, data_time: 0.030, memory: 6970, loss/object/loss_heatmap: 0.6299, loss/object/layer_-1_loss_cls: 0.0765, loss/object/layer_-1_loss_bbox: 0.8607, stats/object/matched_ious: 0.5947, loss: 1.5670, grad_norm: 3.5516
2024-09-04 01:15:33,207 - mmdet3d - INFO - Epoch [1][5300/8000]	lr: 2.000e-04, eta: 1 day, 0:45:01, time: 1.095, data_time: 0.031, memory: 6970, loss/object/loss_heatmap: 0.6257, loss/object/layer_-1_loss_cls: 0.0789, loss/object/layer_-1_loss_bbox: 0.6933, stats/object/matched_ious: 0.6005, loss: 1.3979, grad_norm: 3.4834
2024-09-04 01:16:26,241 - mmdet3d - INFO - Epoch [1][5350/8000]	lr: 2.000e-04, eta: 1 day, 0:42:29, time: 1.061, data_time: 0.016, memory: 6970, loss/object/loss_heatmap: 0.6187, loss/object/layer_-1_loss_cls: 0.0788, loss/object/layer_-1_loss_bbox: 0.7022, stats/object/matched_ious: 0.5883, loss: 1.3997, grad_norm: 3.3376
2024-09-04 01:17:21,484 - mmdet3d - INFO - Epoch [1][5400/8000]	lr: 2.000e-04, eta: 1 day, 0:40:30, time: 1.105, data_time: 0.016, memory: 6970, loss/object/loss_heatmap: 0.5781, loss/object/layer_-1_loss_cls: 0.0692, loss/object/layer_-1_loss_bbox: 0.6944, stats/object/matched_ious: 0.6041, loss: 1.3416, grad_norm: 3.1181
2024-09-04 01:18:14,988 - mmdet3d - INFO - Epoch [1][5450/8000]	lr: 2.000e-04, eta: 1 day, 0:38:08, time: 1.070, data_time: 0.014, memory: 6970, loss/object/loss_heatmap: 0.5854, loss/object/layer_-1_loss_cls: 0.0765, loss/object/layer_-1_loss_bbox: 0.6664, stats/object/matched_ious: 0.6040, loss: 1.3283, grad_norm: 3.3134
2024-09-04 01:19:09,036 - mmdet3d - INFO - Epoch [1][5500/8000]	lr: 2.000e-04, eta: 1 day, 0:35:55, time: 1.081, data_time: 0.028, memory: 6970, loss/object/loss_heatmap: 0.6155, loss/object/layer_-1_loss_cls: 0.0754, loss/object/layer_-1_loss_bbox: 0.7304, stats/object/matched_ious: 0.6056, loss: 1.4213, grad_norm: 3.3559
2024-09-04 01:20:03,361 - mmdet3d - INFO - Epoch [1][5550/8000]	lr: 2.000e-04, eta: 1 day, 0:33:47, time: 1.087, data_time: 0.025, memory: 6970, loss/object/loss_heatmap: 0.6570, loss/object/layer_-1_loss_cls: 0.0835, loss/object/layer_-1_loss_bbox: 0.7327, stats/object/matched_ious: 0.5974, loss: 1.4732, grad_norm: 3.2588
2024-09-04 01:20:59,456 - mmdet3d - INFO - Epoch [1][5600/8000]	lr: 2.000e-04, eta: 1 day, 0:32:04, time: 1.122, data_time: 0.055, memory: 6970, loss/object/loss_heatmap: 0.5830, loss/object/layer_-1_loss_cls: 0.0706, loss/object/layer_-1_loss_bbox: 0.7539, stats/object/matched_ious: 0.6088, loss: 1.4074, grad_norm: 3.0761
2024-09-04 01:21:55,307 - mmdet3d - INFO - Epoch [1][5650/8000]	lr: 2.000e-04, eta: 1 day, 0:30:18, time: 1.117, data_time: 0.063, memory: 6970, loss/object/loss_heatmap: 0.6809, loss/object/layer_-1_loss_cls: 0.0811, loss/object/layer_-1_loss_bbox: 0.8647, stats/object/matched_ious: 0.5867, loss: 1.6267, grad_norm: 3.3262
2024-09-04 01:22:49,005 - mmdet3d - INFO - Epoch [1][5700/8000]	lr: 2.000e-04, eta: 1 day, 0:28:05, time: 1.074, data_time: 0.015, memory: 6970, loss/object/loss_heatmap: 0.6361, loss/object/layer_-1_loss_cls: 0.0733, loss/object/layer_-1_loss_bbox: 0.8255, stats/object/matched_ious: 0.5791, loss: 1.5349, grad_norm: 3.3347
2024-09-04 01:23:45,805 - mmdet3d - INFO - Epoch [1][5750/8000]	lr: 2.000e-04, eta: 1 day, 0:26:34, time: 1.136, data_time: 0.039, memory: 6970, loss/object/loss_heatmap: 0.6485, loss/object/layer_-1_loss_cls: 0.0751, loss/object/layer_-1_loss_bbox: 0.7241, stats/object/matched_ious: 0.5681, loss: 1.4476, grad_norm: 3.5533
2024-09-04 01:24:41,977 - mmdet3d - INFO - Epoch [1][5800/8000]	lr: 2.000e-04, eta: 1 day, 0:24:55, time: 1.123, data_time: 0.032, memory: 6970, loss/object/loss_heatmap: 0.5943, loss/object/layer_-1_loss_cls: 0.0700, loss/object/layer_-1_loss_bbox: 0.7350, stats/object/matched_ious: 0.6130, loss: 1.3994, grad_norm: 3.0402
2024-09-04 01:25:45,121 - mmdet3d - INFO - Epoch [1][5850/8000]	lr: 2.000e-04, eta: 1 day, 0:24:46, time: 1.263, data_time: 0.204, memory: 6970, loss/object/loss_heatmap: 0.6076, loss/object/layer_-1_loss_cls: 0.0779, loss/object/layer_-1_loss_bbox: 0.6923, stats/object/matched_ious: 0.6092, loss: 1.3778, grad_norm: 3.0649
2024-09-04 01:26:46,082 - mmdet3d - INFO - Epoch [1][5900/8000]	lr: 2.000e-04, eta: 1 day, 0:24:08, time: 1.219, data_time: 0.141, memory: 6973, loss/object/loss_heatmap: 0.6111, loss/object/layer_-1_loss_cls: 0.0703, loss/object/layer_-1_loss_bbox: 0.7406, stats/object/matched_ious: 0.6094, loss: 1.4221, grad_norm: 3.0232
2024-09-04 01:27:47,858 - mmdet3d - INFO - Epoch [1][5950/8000]	lr: 2.000e-04, eta: 1 day, 0:23:40, time: 1.236, data_time: 0.183, memory: 6973, loss/object/loss_heatmap: 0.5974, loss/object/layer_-1_loss_cls: 0.0756, loss/object/layer_-1_loss_bbox: 0.6941, stats/object/matched_ious: 0.6180, loss: 1.3671, grad_norm: 3.1073
2024-09-04 01:28:50,803 - mmdet3d - INFO - Epoch [1][6000/8000]	lr: 2.000e-04, eta: 1 day, 0:23:25, time: 1.259, data_time: 0.204, memory: 6973, loss/object/loss_heatmap: 0.6149, loss/object/layer_-1_loss_cls: 0.0841, loss/object/layer_-1_loss_bbox: 0.6839, stats/object/matched_ious: 0.6158, loss: 1.3829, grad_norm: 3.3073
2024-09-04 01:29:55,241 - mmdet3d - INFO - Epoch [1][6050/8000]	lr: 2.000e-04, eta: 1 day, 0:23:28, time: 1.289, data_time: 0.227, memory: 6973, loss/object/loss_heatmap: 0.6114, loss/object/layer_-1_loss_cls: 0.0795, loss/object/layer_-1_loss_bbox: 0.7891, stats/object/matched_ious: 0.5951, loss: 1.4800, grad_norm: 3.1703
2024-09-04 01:31:01,834 - mmdet3d - INFO - Epoch [1][6100/8000]	lr: 2.000e-04, eta: 1 day, 0:23:57, time: 1.332, data_time: 0.253, memory: 6973, loss/object/loss_heatmap: 0.6542, loss/object/layer_-1_loss_cls: 0.0795, loss/object/layer_-1_loss_bbox: 0.7742, stats/object/matched_ious: 0.5990, loss: 1.5079, grad_norm: 3.0442
2024-09-04 01:32:04,029 - mmdet3d - INFO - Epoch [1][6150/8000]	lr: 2.000e-04, eta: 1 day, 0:23:30, time: 1.244, data_time: 0.200, memory: 6973, loss/object/loss_heatmap: 0.6051, loss/object/layer_-1_loss_cls: 0.0730, loss/object/layer_-1_loss_bbox: 0.7489, stats/object/matched_ious: 0.5892, loss: 1.4270, grad_norm: 3.1011
2024-09-04 01:33:08,876 - mmdet3d - INFO - Epoch [1][6200/8000]	lr: 2.000e-04, eta: 1 day, 0:23:35, time: 1.297, data_time: 0.239, memory: 6973, loss/object/loss_heatmap: 0.5991, loss/object/layer_-1_loss_cls: 0.0746, loss/object/layer_-1_loss_bbox: 0.6796, stats/object/matched_ious: 0.6023, loss: 1.3533, grad_norm: 3.3362
2024-09-04 01:34:12,994 - mmdet3d - INFO - Epoch [1][6250/8000]	lr: 2.000e-04, eta: 1 day, 0:23:30, time: 1.282, data_time: 0.218, memory: 6973, loss/object/loss_heatmap: 0.6272, loss/object/layer_-1_loss_cls: 0.0782, loss/object/layer_-1_loss_bbox: 0.6523, stats/object/matched_ious: 0.6064, loss: 1.3577, grad_norm: 3.2954
2024-09-04 01:35:19,753 - mmdet3d - INFO - Epoch [1][6300/8000]	lr: 2.000e-04, eta: 1 day, 0:23:55, time: 1.335, data_time: 0.270, memory: 6973, loss/object/loss_heatmap: 0.5758, loss/object/layer_-1_loss_cls: 0.0713, loss/object/layer_-1_loss_bbox: 0.6336, stats/object/matched_ious: 0.6266, loss: 1.2807, grad_norm: 2.8804
2024-09-04 01:36:22,618 - mmdet3d - INFO - Epoch [1][6350/8000]	lr: 2.000e-04, eta: 1 day, 0:23:34, time: 1.257, data_time: 0.178, memory: 6973, loss/object/loss_heatmap: 0.5864, loss/object/layer_-1_loss_cls: 0.0634, loss/object/layer_-1_loss_bbox: 0.7524, stats/object/matched_ious: 0.6038, loss: 1.4022, grad_norm: 2.9350
2024-09-04 01:37:22,367 - mmdet3d - INFO - Epoch [1][6400/8000]	lr: 2.000e-04, eta: 1 day, 0:22:35, time: 1.195, data_time: 0.162, memory: 6973, loss/object/loss_heatmap: 0.6383, loss/object/layer_-1_loss_cls: 0.0791, loss/object/layer_-1_loss_bbox: 0.7170, stats/object/matched_ious: 0.5936, loss: 1.4344, grad_norm: 3.4048
2024-09-04 01:38:20,821 - mmdet3d - INFO - Epoch [1][6450/8000]	lr: 2.000e-04, eta: 1 day, 0:21:23, time: 1.169, data_time: 0.104, memory: 6973, loss/object/loss_heatmap: 0.6222, loss/object/layer_-1_loss_cls: 0.0740, loss/object/layer_-1_loss_bbox: 0.6849, stats/object/matched_ious: 0.5965, loss: 1.3811, grad_norm: 3.1518
2024-09-04 01:39:31,745 - mmdet3d - INFO - Epoch [1][6500/8000]	lr: 2.000e-04, eta: 1 day, 0:22:31, time: 1.418, data_time: 0.385, memory: 6973, loss/object/loss_heatmap: 0.6652, loss/object/layer_-1_loss_cls: 0.0818, loss/object/layer_-1_loss_bbox: 0.8501, stats/object/matched_ious: 0.5984, loss: 1.5972, grad_norm: 4.0708
2024-09-04 01:40:38,059 - mmdet3d - INFO - Epoch [1][6550/8000]	lr: 2.000e-04, eta: 1 day, 0:22:45, time: 1.326, data_time: 0.278, memory: 6973, loss/object/loss_heatmap: 0.5922, loss/object/layer_-1_loss_cls: 0.0790, loss/object/layer_-1_loss_bbox: 0.7016, stats/object/matched_ious: 0.6111, loss: 1.3728, grad_norm: 3.1343
2024-09-04 01:41:46,850 - mmdet3d - INFO - Epoch [1][6600/8000]	lr: 2.000e-04, eta: 1 day, 0:23:26, time: 1.376, data_time: 0.347, memory: 6973, loss/object/loss_heatmap: 0.6145, loss/object/layer_-1_loss_cls: 0.0729, loss/object/layer_-1_loss_bbox: 0.8364, stats/object/matched_ious: 0.5965, loss: 1.5238, grad_norm: 3.0159
2024-09-04 01:42:48,860 - mmdet3d - INFO - Epoch [1][6650/8000]	lr: 2.000e-04, eta: 1 day, 0:22:51, time: 1.240, data_time: 0.198, memory: 6973, loss/object/loss_heatmap: 0.6837, loss/object/layer_-1_loss_cls: 0.0796, loss/object/layer_-1_loss_bbox: 0.8871, stats/object/matched_ious: 0.5777, loss: 1.6504, grad_norm: 3.1379
2024-09-04 01:43:48,996 - mmdet3d - INFO - Epoch [1][6700/8000]	lr: 2.000e-04, eta: 1 day, 0:21:54, time: 1.203, data_time: 0.138, memory: 6973, loss/object/loss_heatmap: 0.6238, loss/object/layer_-1_loss_cls: 0.0795, loss/object/layer_-1_loss_bbox: 0.7198, stats/object/matched_ious: 0.6009, loss: 1.4231, grad_norm: 3.4439
2024-09-04 01:44:49,510 - mmdet3d - INFO - Epoch [1][6750/8000]	lr: 2.000e-04, eta: 1 day, 0:21:02, time: 1.210, data_time: 0.157, memory: 6973, loss/object/loss_heatmap: 0.6740, loss/object/layer_-1_loss_cls: 0.0899, loss/object/layer_-1_loss_bbox: 0.7943, stats/object/matched_ious: 0.6063, loss: 1.5582, grad_norm: 3.6182
2024-09-04 01:45:48,351 - mmdet3d - INFO - Epoch [1][6800/8000]	lr: 2.000e-04, eta: 1 day, 0:19:51, time: 1.177, data_time: 0.143, memory: 6973, loss/object/loss_heatmap: 0.6219, loss/object/layer_-1_loss_cls: 0.0753, loss/object/layer_-1_loss_bbox: 0.7935, stats/object/matched_ious: 0.6101, loss: 1.4907, grad_norm: 3.0691
2024-09-04 01:46:48,972 - mmdet3d - INFO - Epoch [1][6850/8000]	lr: 2.000e-04, eta: 1 day, 0:19:00, time: 1.212, data_time: 0.130, memory: 6973, loss/object/loss_heatmap: 0.5748, loss/object/layer_-1_loss_cls: 0.0724, loss/object/layer_-1_loss_bbox: 0.6768, stats/object/matched_ious: 0.6157, loss: 1.3239, grad_norm: 2.8461
2024-09-04 01:47:53,883 - mmdet3d - INFO - Epoch [1][6900/8000]	lr: 2.000e-04, eta: 1 day, 0:18:54, time: 1.298, data_time: 0.261, memory: 6973, loss/object/loss_heatmap: 0.5833, loss/object/layer_-1_loss_cls: 0.0714, loss/object/layer_-1_loss_bbox: 0.6735, stats/object/matched_ious: 0.6306, loss: 1.3283, grad_norm: 3.0073
2024-09-04 01:48:56,535 - mmdet3d - INFO - Epoch [1][6950/8000]	lr: 2.000e-04, eta: 1 day, 0:18:23, time: 1.253, data_time: 0.201, memory: 6973, loss/object/loss_heatmap: 0.5667, loss/object/layer_-1_loss_cls: 0.0723, loss/object/layer_-1_loss_bbox: 0.7432, stats/object/matched_ious: 0.6305, loss: 1.3822, grad_norm: 2.8263
2024-09-04 01:50:12,112 - mmdet3d - INFO - Epoch [1][7000/8000]	lr: 2.000e-04, eta: 1 day, 0:20:07, time: 1.511, data_time: 0.441, memory: 6973, loss/object/loss_heatmap: 0.5976, loss/object/layer_-1_loss_cls: 0.0727, loss/object/layer_-1_loss_bbox: 0.7570, stats/object/matched_ious: 0.6146, loss: 1.4273, grad_norm: 2.8762
2024-09-04 01:51:25,497 - mmdet3d - INFO - Epoch [1][7050/8000]	lr: 2.000e-04, eta: 1 day, 0:21:25, time: 1.468, data_time: 0.421, memory: 6973, loss/object/loss_heatmap: 0.6104, loss/object/layer_-1_loss_cls: 0.0747, loss/object/layer_-1_loss_bbox: 0.7036, stats/object/matched_ious: 0.6141, loss: 1.3887, grad_norm: 2.6961
2024-09-04 01:52:35,658 - mmdet3d - INFO - Epoch [1][7100/8000]	lr: 2.000e-04, eta: 1 day, 0:22:08, time: 1.403, data_time: 0.324, memory: 6973, loss/object/loss_heatmap: 0.6128, loss/object/layer_-1_loss_cls: 0.0715, loss/object/layer_-1_loss_bbox: 0.7168, stats/object/matched_ious: 0.6152, loss: 1.4011, grad_norm: 2.6764
2024-09-04 01:53:39,595 - mmdet3d - INFO - Epoch [1][7150/8000]	lr: 2.000e-04, eta: 1 day, 0:21:47, time: 1.279, data_time: 0.249, memory: 6973, loss/object/loss_heatmap: 0.6023, loss/object/layer_-1_loss_cls: 0.0768, loss/object/layer_-1_loss_bbox: 0.6391, stats/object/matched_ious: 0.6199, loss: 1.3183, grad_norm: 3.6216
2024-09-04 01:54:47,661 - mmdet3d - INFO - Epoch [1][7200/8000]	lr: 2.000e-04, eta: 1 day, 0:22:06, time: 1.361, data_time: 0.308, memory: 6973, loss/object/loss_heatmap: 0.6050, loss/object/layer_-1_loss_cls: 0.0719, loss/object/layer_-1_loss_bbox: 0.8012, stats/object/matched_ious: 0.6217, loss: 1.4782, grad_norm: 2.8198
2024-09-04 01:55:47,628 - mmdet3d - INFO - Epoch [1][7250/8000]	lr: 2.000e-04, eta: 1 day, 0:21:03, time: 1.199, data_time: 0.150, memory: 6973, loss/object/loss_heatmap: 0.6559, loss/object/layer_-1_loss_cls: 0.0778, loss/object/layer_-1_loss_bbox: 0.7436, stats/object/matched_ious: 0.6002, loss: 1.4772, grad_norm: 2.8357
2024-09-04 01:56:56,769 - mmdet3d - INFO - Epoch [1][7300/8000]	lr: 2.000e-04, eta: 1 day, 0:21:31, time: 1.383, data_time: 0.356, memory: 6973, loss/object/loss_heatmap: 0.6027, loss/object/layer_-1_loss_cls: 0.0711, loss/object/layer_-1_loss_bbox: 0.7318, stats/object/matched_ious: 0.6178, loss: 1.4056, grad_norm: 3.0445
2024-09-04 01:58:24,107 - mmdet3d - INFO - Epoch [1][7350/8000]	lr: 2.000e-04, eta: 1 day, 0:24:58, time: 1.747, data_time: 0.682, memory: 6973, loss/object/loss_heatmap: 0.5992, loss/object/layer_-1_loss_cls: 0.0714, loss/object/layer_-1_loss_bbox: 0.7071, stats/object/matched_ious: 0.6107, loss: 1.3777, grad_norm: 3.1796
2024-09-04 01:59:46,044 - mmdet3d - INFO - Epoch [1][7400/8000]	lr: 2.000e-04, eta: 1 day, 0:27:28, time: 1.639, data_time: 0.557, memory: 6973, loss/object/loss_heatmap: 0.4884, loss/object/layer_-1_loss_cls: 0.0593, loss/object/layer_-1_loss_bbox: 0.5684, stats/object/matched_ious: 0.6320, loss: 1.1161, grad_norm: 2.7449
2024-09-04 02:01:11,039 - mmdet3d - INFO - Epoch [1][7450/8000]	lr: 2.000e-04, eta: 1 day, 0:30:24, time: 1.700, data_time: 0.611, memory: 6973, loss/object/loss_heatmap: 0.6169, loss/object/layer_-1_loss_cls: 0.0724, loss/object/layer_-1_loss_bbox: 0.7954, stats/object/matched_ious: 0.6081, loss: 1.4848, grad_norm: 2.8300
2024-09-04 02:02:29,335 - mmdet3d - INFO - Epoch [1][7500/8000]	lr: 2.000e-04, eta: 1 day, 0:32:13, time: 1.566, data_time: 0.455, memory: 6973, loss/object/loss_heatmap: 0.5819, loss/object/layer_-1_loss_cls: 0.0749, loss/object/layer_-1_loss_bbox: 0.6760, stats/object/matched_ious: 0.6433, loss: 1.3328, grad_norm: 2.6809
2024-09-04 02:03:43,814 - mmdet3d - INFO - Epoch [1][7550/8000]	lr: 2.000e-04, eta: 1 day, 0:33:22, time: 1.490, data_time: 0.401, memory: 6973, loss/object/loss_heatmap: 0.5358, loss/object/layer_-1_loss_cls: 0.0664, loss/object/layer_-1_loss_bbox: 0.6315, stats/object/matched_ious: 0.6365, loss: 1.2337, grad_norm: 2.7450
2024-09-04 02:04:49,207 - mmdet3d - INFO - Epoch [1][7600/8000]	lr: 2.000e-04, eta: 1 day, 0:33:03, time: 1.308, data_time: 0.261, memory: 6973, loss/object/loss_heatmap: 0.6583, loss/object/layer_-1_loss_cls: 0.0877, loss/object/layer_-1_loss_bbox: 0.7502, stats/object/matched_ious: 0.5910, loss: 1.4962, grad_norm: 3.3942
2024-09-04 02:06:32,612 - mmdet3d - INFO - Epoch [1][7650/8000]	lr: 2.000e-04, eta: 1 day, 0:38:42, time: 2.068, data_time: 1.014, memory: 6973, loss/object/loss_heatmap: 0.6288, loss/object/layer_-1_loss_cls: 0.0770, loss/object/layer_-1_loss_bbox: 0.6649, stats/object/matched_ious: 0.6080, loss: 1.3706, grad_norm: 2.9577
2024-09-04 02:08:29,426 - mmdet3d - INFO - Epoch [1][7700/8000]	lr: 2.000e-04, eta: 1 day, 0:46:22, time: 2.336, data_time: 1.232, memory: 6973, loss/object/loss_heatmap: 0.5880, loss/object/layer_-1_loss_cls: 0.0703, loss/object/layer_-1_loss_bbox: 0.6873, stats/object/matched_ious: 0.6254, loss: 1.3456, grad_norm: 3.1184
2024-09-04 02:09:54,293 - mmdet3d - INFO - Epoch [1][7750/8000]	lr: 2.000e-04, eta: 1 day, 0:48:57, time: 1.697, data_time: 0.621, memory: 6973, loss/object/loss_heatmap: 0.6067, loss/object/layer_-1_loss_cls: 0.0676, loss/object/layer_-1_loss_bbox: 0.7702, stats/object/matched_ious: 0.6175, loss: 1.4445, grad_norm: 2.7848
2024-09-04 02:11:18,380 - mmdet3d - INFO - Epoch [1][7800/8000]	lr: 2.000e-04, eta: 1 day, 0:51:21, time: 1.682, data_time: 0.625, memory: 6973, loss/object/loss_heatmap: 0.5377, loss/object/layer_-1_loss_cls: 0.0660, loss/object/layer_-1_loss_bbox: 0.6022, stats/object/matched_ious: 0.6394, loss: 1.2059, grad_norm: 2.5540
2024-09-04 02:13:34,976 - mmdet3d - INFO - Epoch [1][7850/8000]	lr: 2.000e-04, eta: 1 day, 1:01:45, time: 2.732, data_time: 1.600, memory: 6973, loss/object/loss_heatmap: 0.6350, loss/object/layer_-1_loss_cls: 0.0755, loss/object/layer_-1_loss_bbox: 0.7200, stats/object/matched_ious: 0.6146, loss: 1.4305, grad_norm: 2.7843
2024-09-04 02:15:21,861 - mmdet3d - INFO - Epoch [1][7900/8000]	lr: 2.000e-04, eta: 1 day, 1:07:28, time: 2.138, data_time: 1.012, memory: 6973, loss/object/loss_heatmap: 0.5588, loss/object/layer_-1_loss_cls: 0.0661, loss/object/layer_-1_loss_bbox: 0.6247, stats/object/matched_ious: 0.6338, loss: 1.2496, grad_norm: 2.6635
2024-09-04 02:16:47,892 - mmdet3d - INFO - Epoch [1][7950/8000]	lr: 2.000e-04, eta: 1 day, 1:09:56, time: 1.721, data_time: 0.621, memory: 6973, loss/object/loss_heatmap: 0.6397, loss/object/layer_-1_loss_cls: 0.0767, loss/object/layer_-1_loss_bbox: 0.7761, stats/object/matched_ious: 0.6117, loss: 1.4926, grad_norm: 3.1751
2024-09-04 02:18:06,851 - mmdet3d - INFO - Epoch [1][8000/8000]	lr: 2.000e-04, eta: 1 day, 1:11:18, time: 1.579, data_time: 0.485, memory: 6973, loss/object/loss_heatmap: 0.5663, loss/object/layer_-1_loss_cls: 0.0729, loss/object/layer_-1_loss_bbox: 0.6171, stats/object/matched_ious: 0.6280, loss: 1.2563, grad_norm: 2.8754
2024-09-04 02:18:07,008 - mmdet3d - INFO - Saving checkpoint at 1 epochs
