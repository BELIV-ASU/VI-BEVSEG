2025-01-21 22:03:04,556 - mmdet3d - INFO - Config:
seed = 0
deterministic = False
checkpoint_config = dict(interval=1, max_keep_ckpts=1)
log_config = dict(
    interval=50,
    hooks=[dict(type='TextLoggerHook'),
           dict(type='TensorboardLoggerHook')])
load_from = None
resume_from = None
cudnn_benchmark = False
fp16 = dict(loss_scale=dict(growth_interval=2000))
max_epochs = 20
runner = dict(type='CustomEpochBasedRunner', max_epochs=20)
dataset_type = 'NuScenesDataset'
dataset_root = '/scratch/jmeng18/V2X-SIM/'
gt_paste_stop_epoch = -1
reduce_beams = 32
load_dim = 5
use_dim = 5
load_augmented = None
point_cloud_range = [-102.4, -102.4, -10.0, 102.4, 102.4, 6.0]
voxel_size = [0.2, 0.2, 0.4]
image_size = [256, 704]
augment2d = dict(
    resize=[[0.38, 0.55], [0.48, 0.48]],
    rotate=[-5.4, 5.4],
    gridmask=dict(prob=0.0, fixed_prob=True))
augment3d = dict(
    scale=[0.9, 1.1], rotate=[-0.78539816, 0.78539816], translate=0.5)
object_classes = ['car']
map_classes = ['drivable_area', 'ped_crossing', 'walkway']
input_modality = dict(
    use_lidar=True,
    use_camera=True,
    use_radar=False,
    use_map=False,
    use_external=False)
train_pipeline = [
    dict(type='LoadMultiViewImageFromFiles', to_float32=True),
    dict(
        type='LoadPointsFromFile',
        coord_type='LIDAR',
        load_dim=5,
        use_dim=5,
        reduce_beams=32,
        load_augmented=None),
    dict(
        type='LoadPointsFromMultiSweeps',
        sweeps_num=9,
        load_dim=5,
        use_dim=5,
        reduce_beams=32,
        pad_empty_sweeps=True,
        remove_close=True,
        load_augmented=None),
    dict(
        type='LoadAnnotations3D',
        with_bbox_3d=True,
        with_label_3d=True,
        with_attr_label=False),
    dict(
        type='ObjectPaste',
        stop_epoch=-1,
        db_sampler=dict(
            dataset_root='/scratch/jmeng18/V2X-SIM/',
            info_path='/scratch/jmeng18/V2X-SIM/nuscenes_dbinfos_train.pkl',
            rate=1.0,
            prepare=dict(
                filter_by_difficulty=[-1], filter_by_min_points=dict(car=5)),
            classes=['car'],
            sample_groups=dict(car=2),
            points_loader=dict(
                type='LoadPointsFromFile',
                coord_type='LIDAR',
                load_dim=5,
                use_dim=5,
                reduce_beams=32))),
    dict(
        type='ImageAug3D',
        final_dim=[256, 704],
        resize_lim=[0.45, 0.55],
        bot_pct_lim=[0.0, 0.0],
        rot_lim=[-0.5, 0.5],
        rand_flip=False,
        is_train=True),
    dict(
        type='GlobalRotScaleTrans',
        resize_lim=[0.9, 1.1],
        rot_lim=[-0.78539816, 0.78539816],
        trans_lim=0.5,
        is_train=True),
    dict(
        type='LoadBEVSegmentation',
        dataset_root='/scratch/jmeng18/V2X-SIM/',
        xbound=[-100.0, 100.0, 1.0],
        ybound=[-100.0, 100.0, 1.0],
        classes=['drivable_area', 'ped_crossing', 'walkway']),
    dict(type='RandomFlip3D'),
    dict(
        type='PointsRangeFilter',
        point_cloud_range=[-102.4, -102.4, -10.0, 102.4, 102.4, 6.0]),
    dict(
        type='ObjectRangeFilter',
        point_cloud_range=[-102.4, -102.4, -10.0, 102.4, 102.4, 6.0]),
    dict(type='ObjectNameFilter', classes=['car']),
    dict(
        type='ImageNormalize',
        mean=[0.485, 0.456, 0.406],
        std=[0.229, 0.224, 0.225]),
    dict(
        type='GridMask',
        use_h=True,
        use_w=True,
        max_epoch=20,
        rotate=1,
        offset=False,
        ratio=0.5,
        mode=1,
        prob=0.0,
        fixed_prob=True),
    dict(type='PointShuffle'),
    dict(type='DefaultFormatBundle3D', classes=['car']),
    dict(
        type='Collect3D',
        keys=['img', 'points', 'gt_bboxes_3d', 'gt_labels_3d', 'gt_masks_bev'],
        meta_keys=[
            'camera_intrinsics', 'camera2ego', 'lidar2ego', 'lidar2camera',
            'camera2lidar', 'lidar2image', 'img_aug_matrix', 'lidar_aug_matrix'
        ]),
    dict(type='GTDepth', keyframe_only=True)
]
test_pipeline = [
    dict(type='LoadMultiViewImageFromFiles', to_float32=True),
    dict(
        type='LoadPointsFromFile',
        coord_type='LIDAR',
        load_dim=5,
        use_dim=5,
        reduce_beams=32,
        load_augmented=None),
    dict(
        type='LoadPointsFromMultiSweeps',
        sweeps_num=9,
        load_dim=5,
        use_dim=5,
        reduce_beams=32,
        pad_empty_sweeps=True,
        remove_close=True,
        load_augmented=None),
    dict(
        type='LoadAnnotations3D',
        with_bbox_3d=True,
        with_label_3d=True,
        with_attr_label=False),
    dict(
        type='ImageAug3D',
        final_dim=[256, 704],
        resize_lim=[0.48, 0.48],
        bot_pct_lim=[0.0, 0.0],
        rot_lim=[0.0, 0.0],
        rand_flip=False,
        is_train=False),
    dict(
        type='GlobalRotScaleTrans',
        resize_lim=[1.0, 1.0],
        rot_lim=[0.0, 0.0],
        trans_lim=0.0,
        is_train=False),
    dict(
        type='LoadBEVSegmentation',
        dataset_root='/scratch/jmeng18/V2X-SIM/',
        xbound=[-100.0, 100.0, 1.0],
        ybound=[-100.0, 100.0, 1.0],
        classes=['drivable_area', 'ped_crossing', 'walkway']),
    dict(
        type='PointsRangeFilter',
        point_cloud_range=[-102.4, -102.4, -10.0, 102.4, 102.4, 6.0]),
    dict(
        type='ImageNormalize',
        mean=[0.485, 0.456, 0.406],
        std=[0.229, 0.224, 0.225]),
    dict(type='DefaultFormatBundle3D', classes=['car']),
    dict(
        type='Collect3D',
        keys=['img', 'points', 'gt_bboxes_3d', 'gt_labels_3d', 'gt_masks_bev'],
        meta_keys=[
            'camera_intrinsics', 'camera2ego', 'lidar2ego', 'lidar2camera',
            'camera2lidar', 'lidar2image', 'img_aug_matrix', 'lidar_aug_matrix'
        ]),
    dict(type='GTDepth', keyframe_only=True)
]
data = dict(
    samples_per_gpu=1,
    workers_per_gpu=1,
    train=dict(
        type='CBGSDataset',
        dataset=dict(
            type='NuScenesDataset',
            dataset_root='/scratch/jmeng18/V2X-SIM/',
            ann_file='/scratch/jmeng18/V2X-SIM/nuscenes_infos_train.pkl',
            pipeline=[
                dict(type='LoadMultiViewImageFromFiles', to_float32=True),
                dict(
                    type='LoadPointsFromFile',
                    coord_type='LIDAR',
                    load_dim=5,
                    use_dim=5,
                    reduce_beams=32,
                    load_augmented=None),
                dict(
                    type='LoadPointsFromMultiSweeps',
                    sweeps_num=9,
                    load_dim=5,
                    use_dim=5,
                    reduce_beams=32,
                    pad_empty_sweeps=True,
                    remove_close=True,
                    load_augmented=None),
                dict(
                    type='LoadAnnotations3D',
                    with_bbox_3d=True,
                    with_label_3d=True,
                    with_attr_label=False),
                dict(
                    type='ObjectPaste',
                    stop_epoch=-1,
                    db_sampler=dict(
                        dataset_root='/scratch/jmeng18/V2X-SIM/',
                        info_path=
                        '/scratch/jmeng18/V2X-SIM/nuscenes_dbinfos_train.pkl',
                        rate=1.0,
                        prepare=dict(
                            filter_by_difficulty=[-1],
                            filter_by_min_points=dict(car=5)),
                        classes=['car'],
                        sample_groups=dict(car=2),
                        points_loader=dict(
                            type='LoadPointsFromFile',
                            coord_type='LIDAR',
                            load_dim=5,
                            use_dim=5,
                            reduce_beams=32))),
                dict(
                    type='ImageAug3D',
                    final_dim=[256, 704],
                    resize_lim=[0.45, 0.55],
                    bot_pct_lim=[0.0, 0.0],
                    rot_lim=[-0.5, 0.5],
                    rand_flip=False,
                    is_train=True),
                dict(
                    type='GlobalRotScaleTrans',
                    resize_lim=[0.9, 1.1],
                    rot_lim=[-0.78539816, 0.78539816],
                    trans_lim=0.5,
                    is_train=True),
                dict(
                    type='LoadBEVSegmentation',
                    dataset_root='/scratch/jmeng18/V2X-SIM/',
                    xbound=[-100.0, 100.0, 1.0],
                    ybound=[-100.0, 100.0, 1.0],
                    classes=['drivable_area', 'ped_crossing', 'walkway']),
                dict(type='RandomFlip3D'),
                dict(
                    type='PointsRangeFilter',
                    point_cloud_range=[
                        -102.4, -102.4, -10.0, 102.4, 102.4, 6.0
                    ]),
                dict(
                    type='ObjectRangeFilter',
                    point_cloud_range=[
                        -102.4, -102.4, -10.0, 102.4, 102.4, 6.0
                    ]),
                dict(type='ObjectNameFilter', classes=['car']),
                dict(
                    type='ImageNormalize',
                    mean=[0.485, 0.456, 0.406],
                    std=[0.229, 0.224, 0.225]),
                dict(
                    type='GridMask',
                    use_h=True,
                    use_w=True,
                    max_epoch=20,
                    rotate=1,
                    offset=False,
                    ratio=0.5,
                    mode=1,
                    prob=0.0,
                    fixed_prob=True),
                dict(type='PointShuffle'),
                dict(type='DefaultFormatBundle3D', classes=['car']),
                dict(
                    type='Collect3D',
                    keys=[
                        'img', 'points', 'gt_bboxes_3d', 'gt_labels_3d',
                        'gt_masks_bev'
                    ],
                    meta_keys=[
                        'camera_intrinsics', 'camera2ego', 'lidar2ego',
                        'lidar2camera', 'camera2lidar', 'lidar2image',
                        'img_aug_matrix', 'lidar_aug_matrix'
                    ]),
                dict(type='GTDepth', keyframe_only=True)
            ],
            object_classes=['car'],
            map_classes=['drivable_area', 'ped_crossing', 'walkway'],
            modality=dict(
                use_lidar=True,
                use_camera=True,
                use_radar=False,
                use_map=False,
                use_external=False),
            test_mode=False,
            use_valid_flag=True,
            box_type_3d='LiDAR')),
    val=dict(
        type='NuScenesDataset',
        dataset_root='/scratch/jmeng18/V2X-SIM/',
        ann_file='/scratch/jmeng18/V2X-SIM/nuscenes_infos_val.pkl',
        pipeline=[
            dict(type='LoadMultiViewImageFromFiles', to_float32=True),
            dict(
                type='LoadPointsFromFile',
                coord_type='LIDAR',
                load_dim=5,
                use_dim=5,
                reduce_beams=32,
                load_augmented=None),
            dict(
                type='LoadPointsFromMultiSweeps',
                sweeps_num=9,
                load_dim=5,
                use_dim=5,
                reduce_beams=32,
                pad_empty_sweeps=True,
                remove_close=True,
                load_augmented=None),
            dict(
                type='LoadAnnotations3D',
                with_bbox_3d=True,
                with_label_3d=True,
                with_attr_label=False),
            dict(
                type='ImageAug3D',
                final_dim=[256, 704],
                resize_lim=[0.48, 0.48],
                bot_pct_lim=[0.0, 0.0],
                rot_lim=[0.0, 0.0],
                rand_flip=False,
                is_train=False),
            dict(
                type='GlobalRotScaleTrans',
                resize_lim=[1.0, 1.0],
                rot_lim=[0.0, 0.0],
                trans_lim=0.0,
                is_train=False),
            dict(
                type='LoadBEVSegmentation',
                dataset_root='/scratch/jmeng18/V2X-SIM/',
                xbound=[-100.0, 100.0, 1.0],
                ybound=[-100.0, 100.0, 1.0],
                classes=['drivable_area', 'ped_crossing', 'walkway']),
            dict(
                type='PointsRangeFilter',
                point_cloud_range=[-102.4, -102.4, -10.0, 102.4, 102.4, 6.0]),
            dict(
                type='ImageNormalize',
                mean=[0.485, 0.456, 0.406],
                std=[0.229, 0.224, 0.225]),
            dict(type='DefaultFormatBundle3D', classes=['car']),
            dict(
                type='Collect3D',
                keys=[
                    'img', 'points', 'gt_bboxes_3d', 'gt_labels_3d',
                    'gt_masks_bev'
                ],
                meta_keys=[
                    'camera_intrinsics', 'camera2ego', 'lidar2ego',
                    'lidar2camera', 'camera2lidar', 'lidar2image',
                    'img_aug_matrix', 'lidar_aug_matrix'
                ]),
            dict(type='GTDepth', keyframe_only=True)
        ],
        object_classes=['car'],
        map_classes=['drivable_area', 'ped_crossing', 'walkway'],
        modality=dict(
            use_lidar=True,
            use_camera=True,
            use_radar=False,
            use_map=False,
            use_external=False),
        test_mode=False,
        box_type_3d='LiDAR'),
    test=dict(
        type='NuScenesDataset',
        dataset_root='/scratch/jmeng18/V2X-SIM/',
        ann_file='/scratch/jmeng18/V2X-SIM/nuscenes_infos_val.pkl',
        pipeline=[
            dict(type='LoadMultiViewImageFromFiles', to_float32=True),
            dict(
                type='LoadPointsFromFile',
                coord_type='LIDAR',
                load_dim=5,
                use_dim=5,
                reduce_beams=32,
                load_augmented=None),
            dict(
                type='LoadPointsFromMultiSweeps',
                sweeps_num=9,
                load_dim=5,
                use_dim=5,
                reduce_beams=32,
                pad_empty_sweeps=True,
                remove_close=True,
                load_augmented=None),
            dict(
                type='LoadAnnotations3D',
                with_bbox_3d=True,
                with_label_3d=True,
                with_attr_label=False),
            dict(
                type='ImageAug3D',
                final_dim=[256, 704],
                resize_lim=[0.48, 0.48],
                bot_pct_lim=[0.0, 0.0],
                rot_lim=[0.0, 0.0],
                rand_flip=False,
                is_train=False),
            dict(
                type='GlobalRotScaleTrans',
                resize_lim=[1.0, 1.0],
                rot_lim=[0.0, 0.0],
                trans_lim=0.0,
                is_train=False),
            dict(
                type='LoadBEVSegmentation',
                dataset_root='/scratch/jmeng18/V2X-SIM/',
                xbound=[-100.0, 100.0, 1.0],
                ybound=[-100.0, 100.0, 1.0],
                classes=['drivable_area', 'ped_crossing', 'walkway']),
            dict(
                type='PointsRangeFilter',
                point_cloud_range=[-102.4, -102.4, -10.0, 102.4, 102.4, 6.0]),
            dict(
                type='ImageNormalize',
                mean=[0.485, 0.456, 0.406],
                std=[0.229, 0.224, 0.225]),
            dict(type='DefaultFormatBundle3D', classes=['car']),
            dict(
                type='Collect3D',
                keys=[
                    'img', 'points', 'gt_bboxes_3d', 'gt_labels_3d',
                    'gt_masks_bev'
                ],
                meta_keys=[
                    'camera_intrinsics', 'camera2ego', 'lidar2ego',
                    'lidar2camera', 'camera2lidar', 'lidar2image',
                    'img_aug_matrix', 'lidar_aug_matrix'
                ]),
            dict(type='GTDepth', keyframe_only=True)
        ],
        object_classes=['car'],
        map_classes=['drivable_area', 'ped_crossing', 'walkway'],
        modality=dict(
            use_lidar=True,
            use_camera=True,
            use_radar=False,
            use_map=False,
            use_external=False),
        test_mode=True,
        box_type_3d='LiDAR'))
evaluation = dict(
    interval=1,
    pipeline=[
        dict(type='LoadMultiViewImageFromFiles', to_float32=True),
        dict(
            type='LoadPointsFromFile',
            coord_type='LIDAR',
            load_dim=5,
            use_dim=5,
            reduce_beams=32,
            load_augmented=None),
        dict(
            type='LoadPointsFromMultiSweeps',
            sweeps_num=9,
            load_dim=5,
            use_dim=5,
            reduce_beams=32,
            pad_empty_sweeps=True,
            remove_close=True,
            load_augmented=None),
        dict(
            type='LoadAnnotations3D',
            with_bbox_3d=True,
            with_label_3d=True,
            with_attr_label=False),
        dict(
            type='ImageAug3D',
            final_dim=[256, 704],
            resize_lim=[0.48, 0.48],
            bot_pct_lim=[0.0, 0.0],
            rot_lim=[0.0, 0.0],
            rand_flip=False,
            is_train=False),
        dict(
            type='GlobalRotScaleTrans',
            resize_lim=[1.0, 1.0],
            rot_lim=[0.0, 0.0],
            trans_lim=0.0,
            is_train=False),
        dict(
            type='LoadBEVSegmentation',
            dataset_root='/scratch/jmeng18/V2X-SIM/',
            xbound=[-100.0, 100.0, 1.0],
            ybound=[-100.0, 100.0, 1.0],
            classes=['drivable_area', 'ped_crossing', 'walkway']),
        dict(
            type='PointsRangeFilter',
            point_cloud_range=[-102.4, -102.4, -10.0, 102.4, 102.4, 6.0]),
        dict(
            type='ImageNormalize',
            mean=[0.485, 0.456, 0.406],
            std=[0.229, 0.224, 0.225]),
        dict(type='DefaultFormatBundle3D', classes=['car']),
        dict(
            type='Collect3D',
            keys=[
                'img', 'points', 'gt_bboxes_3d', 'gt_labels_3d', 'gt_masks_bev'
            ],
            meta_keys=[
                'camera_intrinsics', 'camera2ego', 'lidar2ego', 'lidar2camera',
                'camera2lidar', 'lidar2image', 'img_aug_matrix',
                'lidar_aug_matrix'
            ]),
        dict(type='GTDepth', keyframe_only=True)
    ])
model = dict(
    type='BEVFusion',
    heads=dict(
        object=None,
        map=dict(
            type='BEVSegmentationHead',
            in_channels=256,
            grid_transform=dict(
                input_scope=[[-102.4, 102.4, 1.6], [-102.4, 102.4, 1.6]],
                output_scope=[[-100, 100, 1.0], [-100, 100, 1.0]]),
            classes=['drivable_area', 'ped_crossing', 'walkway'],
            loss='focal')),
    encoders=dict(
        lidar=None,
        camera=dict(
            backbone=dict(
                type='SwinTransformer',
                embed_dims=96,
                depths=[2, 2, 6, 2],
                num_heads=[3, 6, 12, 24],
                window_size=7,
                mlp_ratio=4,
                qkv_bias=True,
                qk_scale=None,
                drop_rate=0.0,
                attn_drop_rate=0.0,
                drop_path_rate=0.3,
                patch_norm=True,
                out_indices=[1, 2, 3],
                with_cp=False,
                convert_weights=True,
                init_cfg=dict(
                    type='Pretrained',
                    checkpoint=
                    'https://github.com/SwinTransformer/storage/releases/download/v1.0.0/swin_tiny_patch4_window7_224.pth'
                )),
            neck=dict(
                type='GeneralizedLSSFPN',
                in_channels=[192, 384, 768],
                out_channels=256,
                start_level=0,
                num_outs=3,
                norm_cfg=dict(type='BN2d', requires_grad=True),
                act_cfg=dict(type='ReLU', inplace=True),
                upsample_cfg=dict(mode='bilinear', align_corners=False)),
            vtransform=dict(
                type='LSSTransform',
                in_channels=256,
                out_channels=80,
                image_size=[256, 704],
                feature_size=[32, 88],
                xbound=[-51.2, 51.2, 0.4],
                ybound=[-51.2, 51.2, 0.4],
                zbound=[-10.0, 10.0, 20.0],
                dbound=[1.0, 60.0, 0.5],
                downsample=2)),
        infra=dict(
            backbone=dict(
                type='SwinTransformer',
                embed_dims=96,
                depths=[2, 2, 6, 2],
                num_heads=[3, 6, 12, 24],
                window_size=7,
                mlp_ratio=4,
                qkv_bias=True,
                qk_scale=None,
                drop_rate=0.0,
                attn_drop_rate=0.0,
                drop_path_rate=0.3,
                patch_norm=True,
                out_indices=[1, 2, 3],
                with_cp=False,
                convert_weights=True,
                init_cfg=dict(
                    type='Pretrained',
                    checkpoint=
                    'https://github.com/SwinTransformer/storage/releases/download/v1.0.0/swin_tiny_patch4_window7_224.pth'
                )),
            neck=dict(
                type='GeneralizedLSSFPN',
                in_channels=[192, 384, 768],
                out_channels=256,
                start_level=0,
                num_outs=3,
                norm_cfg=dict(type='BN2d', requires_grad=True),
                act_cfg=dict(type='ReLU', inplace=True),
                upsample_cfg=dict(mode='bilinear', align_corners=False)),
            vtransform=dict(
                type='LSSTransform',
                in_channels=256,
                out_channels=80,
                image_size=[256, 704],
                feature_size=[32, 88],
                xbound=[-51.2, 51.2, 0.4],
                ybound=[-51.2, 51.2, 0.4],
                zbound=[-10.0, 10.0, 20.0],
                dbound=[1.0, 60.0, 0.5],
                downsample=2))),
    fuser=dict(type='ConvFuser', in_channels=[80, 80], out_channels=80),
    decoder=dict(
        backbone=dict(
            type='GeneralizedResNet',
            in_channels=80,
            blocks=[[2, 160, 2], [2, 320, 2], [2, 640, 1]]),
        neck=dict(
            type='LSSFPN',
            in_indices=[-1, 0],
            in_channels=[640, 160],
            out_channels=256,
            scale_factor=2)))
optimizer = dict(
    type='AdamW',
    lr=0.0001,
    weight_decay=0.01,
    paramwise_cfg=dict(
        custom_keys=dict(
            absolute_pos_embed=dict(decay_mult=0),
            relative_position_bias_table=dict(decay_mult=0))))
optimizer_config = dict(grad_clip=dict(max_norm=35, norm_type=2))
lr_config = dict(policy='cyclic')
momentum_config = dict(policy='cyclic')
run_dir = 'train_result_map_infra+onboard_camera_long_depth_vit'

2025-01-21 22:03:04,557 - mmdet3d - INFO - Set random seed to 0, deterministic mode: False
2025-01-21 22:03:13,096 - mmdet3d - INFO - load 349483 car database infos
2025-01-21 22:03:13,096 - mmdet3d - INFO - load 157002 bicycle database infos
2025-01-21 22:03:13,096 - mmdet3d - INFO - load 40210 motorcycle database infos
2025-01-21 22:03:13,096 - mmdet3d - INFO - load 16943 vehicle.emergency.police database infos
2025-01-21 22:03:13,949 - mmdet3d - INFO - After filter database:
2025-01-21 22:03:13,962 - mmdet3d - INFO - load 170227 car database infos
2025-01-21 22:03:13,963 - mmdet3d - INFO - load 157002 bicycle database infos
2025-01-21 22:03:13,964 - mmdet3d - INFO - load 40210 motorcycle database infos
2025-01-21 22:03:13,965 - mmdet3d - INFO - load 16943 vehicle.emergency.police database infos
2025-01-21 22:03:16,513 - mmdet3d - INFO - Model:
BEVFusion(
  (encoders): ModuleDict(
    (camera): ModuleDict(
      (backbone): SwinTransformer(
        (patch_embed): PatchEmbed(
          (adap_padding): AdaptivePadding()
          (projection): Conv2d(3, 96, kernel_size=(4, 4), stride=(4, 4))
          (norm): LayerNorm((96,), eps=1e-05, elementwise_affine=True)
        )
        (drop_after_pos): Dropout(p=0.0, inplace=False)
        (stages): ModuleList(
          (0): SwinBlockSequence(
            (blocks): ModuleList(
              (0): SwinBlock(
                (norm1): LayerNorm((96,), eps=1e-05, elementwise_affine=True)
                (attn): ShiftWindowMSA(
                  (w_msa): WindowMSA(
                    (qkv): Linear(in_features=96, out_features=288, bias=True)
                    (attn_drop): Dropout(p=0.0, inplace=False)
                    (proj): Linear(in_features=96, out_features=96, bias=True)
                    (proj_drop): Dropout(p=0.0, inplace=False)
                    (softmax): Softmax(dim=-1)
                  )
                  (drop): DropPath()
                )
                (norm2): LayerNorm((96,), eps=1e-05, elementwise_affine=True)
                (ffn): FFN(
                  (activate): GELU()
                  (layers): Sequential(
                    (0): Sequential(
                      (0): Linear(in_features=96, out_features=384, bias=True)
                      (1): GELU()
                      (2): Dropout(p=0.0, inplace=False)
                    )
                    (1): Linear(in_features=384, out_features=96, bias=True)
                    (2): Dropout(p=0.0, inplace=False)
                  )
                  (dropout_layer): DropPath()
                )
              )
              (1): SwinBlock(
                (norm1): LayerNorm((96,), eps=1e-05, elementwise_affine=True)
                (attn): ShiftWindowMSA(
                  (w_msa): WindowMSA(
                    (qkv): Linear(in_features=96, out_features=288, bias=True)
                    (attn_drop): Dropout(p=0.0, inplace=False)
                    (proj): Linear(in_features=96, out_features=96, bias=True)
                    (proj_drop): Dropout(p=0.0, inplace=False)
                    (softmax): Softmax(dim=-1)
                  )
                  (drop): DropPath()
                )
                (norm2): LayerNorm((96,), eps=1e-05, elementwise_affine=True)
                (ffn): FFN(
                  (activate): GELU()
                  (layers): Sequential(
                    (0): Sequential(
                      (0): Linear(in_features=96, out_features=384, bias=True)
                      (1): GELU()
                      (2): Dropout(p=0.0, inplace=False)
                    )
                    (1): Linear(in_features=384, out_features=96, bias=True)
                    (2): Dropout(p=0.0, inplace=False)
                  )
                  (dropout_layer): DropPath()
                )
              )
            )
            (downsample): PatchMerging(
              (adap_padding): AdaptivePadding()
              (sampler): Unfold(kernel_size=(2, 2), dilation=(1, 1), padding=(0, 0), stride=(2, 2))
              (norm): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
              (reduction): Linear(in_features=384, out_features=192, bias=False)
            )
          )
          (1): SwinBlockSequence(
            (blocks): ModuleList(
              (0): SwinBlock(
                (norm1): LayerNorm((192,), eps=1e-05, elementwise_affine=True)
                (attn): ShiftWindowMSA(
                  (w_msa): WindowMSA(
                    (qkv): Linear(in_features=192, out_features=576, bias=True)
                    (attn_drop): Dropout(p=0.0, inplace=False)
                    (proj): Linear(in_features=192, out_features=192, bias=True)
                    (proj_drop): Dropout(p=0.0, inplace=False)
                    (softmax): Softmax(dim=-1)
                  )
                  (drop): DropPath()
                )
                (norm2): LayerNorm((192,), eps=1e-05, elementwise_affine=True)
                (ffn): FFN(
                  (activate): GELU()
                  (layers): Sequential(
                    (0): Sequential(
                      (0): Linear(in_features=192, out_features=768, bias=True)
                      (1): GELU()
                      (2): Dropout(p=0.0, inplace=False)
                    )
                    (1): Linear(in_features=768, out_features=192, bias=True)
                    (2): Dropout(p=0.0, inplace=False)
                  )
                  (dropout_layer): DropPath()
                )
              )
              (1): SwinBlock(
                (norm1): LayerNorm((192,), eps=1e-05, elementwise_affine=True)
                (attn): ShiftWindowMSA(
                  (w_msa): WindowMSA(
                    (qkv): Linear(in_features=192, out_features=576, bias=True)
                    (attn_drop): Dropout(p=0.0, inplace=False)
                    (proj): Linear(in_features=192, out_features=192, bias=True)
                    (proj_drop): Dropout(p=0.0, inplace=False)
                    (softmax): Softmax(dim=-1)
                  )
                  (drop): DropPath()
                )
                (norm2): LayerNorm((192,), eps=1e-05, elementwise_affine=True)
                (ffn): FFN(
                  (activate): GELU()
                  (layers): Sequential(
                    (0): Sequential(
                      (0): Linear(in_features=192, out_features=768, bias=True)
                      (1): GELU()
                      (2): Dropout(p=0.0, inplace=False)
                    )
                    (1): Linear(in_features=768, out_features=192, bias=True)
                    (2): Dropout(p=0.0, inplace=False)
                  )
                  (dropout_layer): DropPath()
                )
              )
            )
            (downsample): PatchMerging(
              (adap_padding): AdaptivePadding()
              (sampler): Unfold(kernel_size=(2, 2), dilation=(1, 1), padding=(0, 0), stride=(2, 2))
              (norm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
              (reduction): Linear(in_features=768, out_features=384, bias=False)
            )
          )
          (2): SwinBlockSequence(
            (blocks): ModuleList(
              (0): SwinBlock(
                (norm1): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
                (attn): ShiftWindowMSA(
                  (w_msa): WindowMSA(
                    (qkv): Linear(in_features=384, out_features=1152, bias=True)
                    (attn_drop): Dropout(p=0.0, inplace=False)
                    (proj): Linear(in_features=384, out_features=384, bias=True)
                    (proj_drop): Dropout(p=0.0, inplace=False)
                    (softmax): Softmax(dim=-1)
                  )
                  (drop): DropPath()
                )
                (norm2): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
                (ffn): FFN(
                  (activate): GELU()
                  (layers): Sequential(
                    (0): Sequential(
                      (0): Linear(in_features=384, out_features=1536, bias=True)
                      (1): GELU()
                      (2): Dropout(p=0.0, inplace=False)
                    )
                    (1): Linear(in_features=1536, out_features=384, bias=True)
                    (2): Dropout(p=0.0, inplace=False)
                  )
                  (dropout_layer): DropPath()
                )
              )
              (1): SwinBlock(
                (norm1): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
                (attn): ShiftWindowMSA(
                  (w_msa): WindowMSA(
                    (qkv): Linear(in_features=384, out_features=1152, bias=True)
                    (attn_drop): Dropout(p=0.0, inplace=False)
                    (proj): Linear(in_features=384, out_features=384, bias=True)
                    (proj_drop): Dropout(p=0.0, inplace=False)
                    (softmax): Softmax(dim=-1)
                  )
                  (drop): DropPath()
                )
                (norm2): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
                (ffn): FFN(
                  (activate): GELU()
                  (layers): Sequential(
                    (0): Sequential(
                      (0): Linear(in_features=384, out_features=1536, bias=True)
                      (1): GELU()
                      (2): Dropout(p=0.0, inplace=False)
                    )
                    (1): Linear(in_features=1536, out_features=384, bias=True)
                    (2): Dropout(p=0.0, inplace=False)
                  )
                  (dropout_layer): DropPath()
                )
              )
              (2): SwinBlock(
                (norm1): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
                (attn): ShiftWindowMSA(
                  (w_msa): WindowMSA(
                    (qkv): Linear(in_features=384, out_features=1152, bias=True)
                    (attn_drop): Dropout(p=0.0, inplace=False)
                    (proj): Linear(in_features=384, out_features=384, bias=True)
                    (proj_drop): Dropout(p=0.0, inplace=False)
                    (softmax): Softmax(dim=-1)
                  )
                  (drop): DropPath()
                )
                (norm2): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
                (ffn): FFN(
                  (activate): GELU()
                  (layers): Sequential(
                    (0): Sequential(
                      (0): Linear(in_features=384, out_features=1536, bias=True)
                      (1): GELU()
                      (2): Dropout(p=0.0, inplace=False)
                    )
                    (1): Linear(in_features=1536, out_features=384, bias=True)
                    (2): Dropout(p=0.0, inplace=False)
                  )
                  (dropout_layer): DropPath()
                )
              )
              (3): SwinBlock(
                (norm1): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
                (attn): ShiftWindowMSA(
                  (w_msa): WindowMSA(
                    (qkv): Linear(in_features=384, out_features=1152, bias=True)
                    (attn_drop): Dropout(p=0.0, inplace=False)
                    (proj): Linear(in_features=384, out_features=384, bias=True)
                    (proj_drop): Dropout(p=0.0, inplace=False)
                    (softmax): Softmax(dim=-1)
                  )
                  (drop): DropPath()
                )
                (norm2): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
                (ffn): FFN(
                  (activate): GELU()
                  (layers): Sequential(
                    (0): Sequential(
                      (0): Linear(in_features=384, out_features=1536, bias=True)
                      (1): GELU()
                      (2): Dropout(p=0.0, inplace=False)
                    )
                    (1): Linear(in_features=1536, out_features=384, bias=True)
                    (2): Dropout(p=0.0, inplace=False)
                  )
                  (dropout_layer): DropPath()
                )
              )
              (4): SwinBlock(
                (norm1): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
                (attn): ShiftWindowMSA(
                  (w_msa): WindowMSA(
                    (qkv): Linear(in_features=384, out_features=1152, bias=True)
                    (attn_drop): Dropout(p=0.0, inplace=False)
                    (proj): Linear(in_features=384, out_features=384, bias=True)
                    (proj_drop): Dropout(p=0.0, inplace=False)
                    (softmax): Softmax(dim=-1)
                  )
                  (drop): DropPath()
                )
                (norm2): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
                (ffn): FFN(
                  (activate): GELU()
                  (layers): Sequential(
                    (0): Sequential(
                      (0): Linear(in_features=384, out_features=1536, bias=True)
                      (1): GELU()
                      (2): Dropout(p=0.0, inplace=False)
                    )
                    (1): Linear(in_features=1536, out_features=384, bias=True)
                    (2): Dropout(p=0.0, inplace=False)
                  )
                  (dropout_layer): DropPath()
                )
              )
              (5): SwinBlock(
                (norm1): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
                (attn): ShiftWindowMSA(
                  (w_msa): WindowMSA(
                    (qkv): Linear(in_features=384, out_features=1152, bias=True)
                    (attn_drop): Dropout(p=0.0, inplace=False)
                    (proj): Linear(in_features=384, out_features=384, bias=True)
                    (proj_drop): Dropout(p=0.0, inplace=False)
                    (softmax): Softmax(dim=-1)
                  )
                  (drop): DropPath()
                )
                (norm2): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
                (ffn): FFN(
                  (activate): GELU()
                  (layers): Sequential(
                    (0): Sequential(
                      (0): Linear(in_features=384, out_features=1536, bias=True)
                      (1): GELU()
                      (2): Dropout(p=0.0, inplace=False)
                    )
                    (1): Linear(in_features=1536, out_features=384, bias=True)
                    (2): Dropout(p=0.0, inplace=False)
                  )
                  (dropout_layer): DropPath()
                )
              )
            )
            (downsample): PatchMerging(
              (adap_padding): AdaptivePadding()
              (sampler): Unfold(kernel_size=(2, 2), dilation=(1, 1), padding=(0, 0), stride=(2, 2))
              (norm): LayerNorm((1536,), eps=1e-05, elementwise_affine=True)
              (reduction): Linear(in_features=1536, out_features=768, bias=False)
            )
          )
          (3): SwinBlockSequence(
            (blocks): ModuleList(
              (0): SwinBlock(
                (norm1): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
                (attn): ShiftWindowMSA(
                  (w_msa): WindowMSA(
                    (qkv): Linear(in_features=768, out_features=2304, bias=True)
                    (attn_drop): Dropout(p=0.0, inplace=False)
                    (proj): Linear(in_features=768, out_features=768, bias=True)
                    (proj_drop): Dropout(p=0.0, inplace=False)
                    (softmax): Softmax(dim=-1)
                  )
                  (drop): DropPath()
                )
                (norm2): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
                (ffn): FFN(
                  (activate): GELU()
                  (layers): Sequential(
                    (0): Sequential(
                      (0): Linear(in_features=768, out_features=3072, bias=True)
                      (1): GELU()
                      (2): Dropout(p=0.0, inplace=False)
                    )
                    (1): Linear(in_features=3072, out_features=768, bias=True)
                    (2): Dropout(p=0.0, inplace=False)
                  )
                  (dropout_layer): DropPath()
                )
              )
              (1): SwinBlock(
                (norm1): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
                (attn): ShiftWindowMSA(
                  (w_msa): WindowMSA(
                    (qkv): Linear(in_features=768, out_features=2304, bias=True)
                    (attn_drop): Dropout(p=0.0, inplace=False)
                    (proj): Linear(in_features=768, out_features=768, bias=True)
                    (proj_drop): Dropout(p=0.0, inplace=False)
                    (softmax): Softmax(dim=-1)
                  )
                  (drop): DropPath()
                )
                (norm2): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
                (ffn): FFN(
                  (activate): GELU()
                  (layers): Sequential(
                    (0): Sequential(
                      (0): Linear(in_features=768, out_features=3072, bias=True)
                      (1): GELU()
                      (2): Dropout(p=0.0, inplace=False)
                    )
                    (1): Linear(in_features=3072, out_features=768, bias=True)
                    (2): Dropout(p=0.0, inplace=False)
                  )
                  (dropout_layer): DropPath()
                )
              )
            )
          )
        )
        (norm1): LayerNorm((192,), eps=1e-05, elementwise_affine=True)
        (norm2): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
        (norm3): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
      )
      init_cfg={'type': 'Pretrained', 'checkpoint': 'https://github.com/SwinTransformer/storage/releases/download/v1.0.0/swin_tiny_patch4_window7_224.pth'}
      (neck): GeneralizedLSSFPN(
        (lateral_convs): ModuleList(
          (0): ConvModule(
            (conv): Conv2d(448, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (activate): ReLU(inplace=True)
          )
          (1): ConvModule(
            (conv): Conv2d(1152, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (activate): ReLU(inplace=True)
          )
        )
        (fpn_convs): ModuleList(
          (0): ConvModule(
            (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (activate): ReLU(inplace=True)
          )
          (1): ConvModule(
            (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (activate): ReLU(inplace=True)
          )
        )
      )
      (vtransform): LSSTransform(
        (depthnet): Sequential(
          (0): Conv2d(320, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
          (3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (4): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (5): ReLU(inplace=True)
          (6): Conv2d(256, 198, kernel_size=(1, 1), stride=(1, 1))
        )
        (dtransform): Sequential(
          (0): Conv2d(1, 8, kernel_size=(1, 1), stride=(1, 1))
          (1): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
          (3): Conv2d(8, 32, kernel_size=(5, 5), stride=(4, 4), padding=(2, 2))
          (4): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (5): ReLU(inplace=True)
          (6): Conv2d(32, 64, kernel_size=(5, 5), stride=(2, 2), padding=(2, 2))
          (7): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (8): ReLU(inplace=True)
        )
        (pyramid_depth_net): FCN(
          (backbone): IntermediateLayerGetter(
            (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
            (layer1): Sequential(
              (0): Bottleneck(
                (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (relu): ReLU(inplace=True)
                (downsample): Sequential(
                  (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                )
              )
              (1): Bottleneck(
                (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (relu): ReLU(inplace=True)
              )
              (2): Bottleneck(
                (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (relu): ReLU(inplace=True)
              )
            )
            (layer2): Sequential(
              (0): Bottleneck(
                (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (relu): ReLU(inplace=True)
                (downsample): Sequential(
                  (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
                  (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                )
              )
              (1): Bottleneck(
                (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (relu): ReLU(inplace=True)
              )
              (2): Bottleneck(
                (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (relu): ReLU(inplace=True)
              )
              (3): Bottleneck(
                (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (relu): ReLU(inplace=True)
              )
            )
            (layer3): Sequential(
              (0): Bottleneck(
                (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (relu): ReLU(inplace=True)
                (downsample): Sequential(
                  (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                )
              )
              (1): Bottleneck(
                (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
                (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (relu): ReLU(inplace=True)
              )
              (2): Bottleneck(
                (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
                (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (relu): ReLU(inplace=True)
              )
              (3): Bottleneck(
                (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
                (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (relu): ReLU(inplace=True)
              )
              (4): Bottleneck(
                (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
                (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (relu): ReLU(inplace=True)
              )
              (5): Bottleneck(
                (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
                (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (relu): ReLU(inplace=True)
              )
            )
            (layer4): Sequential(
              (0): Bottleneck(
                (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
                (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (relu): ReLU(inplace=True)
                (downsample): Sequential(
                  (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                )
              )
              (1): Bottleneck(
                (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(4, 4), dilation=(4, 4), bias=False)
                (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (relu): ReLU(inplace=True)
              )
              (2): Bottleneck(
                (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(4, 4), dilation=(4, 4), bias=False)
                (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (relu): ReLU(inplace=True)
              )
            )
          )
          (classifier): FCNHead(
            (0): Conv2d(2048, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU()
            (3): Dropout(p=0.1, inplace=False)
            (4): Conv2d(512, 21, kernel_size=(1, 1), stride=(1, 1))
          )
        )
        (conv): Conv2d(21, 1, kernel_size=(1, 1), stride=(1, 1))
        (downsample): Sequential(
          (0): Conv2d(80, 80, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (1): BatchNorm2d(80, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
          (3): Conv2d(80, 80, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
          (4): BatchNorm2d(80, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (5): ReLU(inplace=True)
          (6): Conv2d(80, 80, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (7): BatchNorm2d(80, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (8): ReLU(inplace=True)
        )
      )
    )
    (infra): ModuleDict(
      (backbone): SwinTransformer(
        (patch_embed): PatchEmbed(
          (adap_padding): AdaptivePadding()
          (projection): Conv2d(3, 96, kernel_size=(4, 4), stride=(4, 4))
          (norm): LayerNorm((96,), eps=1e-05, elementwise_affine=True)
        )
        (drop_after_pos): Dropout(p=0.0, inplace=False)
        (stages): ModuleList(
          (0): SwinBlockSequence(
            (blocks): ModuleList(
              (0): SwinBlock(
                (norm1): LayerNorm((96,), eps=1e-05, elementwise_affine=True)
                (attn): ShiftWindowMSA(
                  (w_msa): WindowMSA(
                    (qkv): Linear(in_features=96, out_features=288, bias=True)
                    (attn_drop): Dropout(p=0.0, inplace=False)
                    (proj): Linear(in_features=96, out_features=96, bias=True)
                    (proj_drop): Dropout(p=0.0, inplace=False)
                    (softmax): Softmax(dim=-1)
                  )
                  (drop): DropPath()
                )
                (norm2): LayerNorm((96,), eps=1e-05, elementwise_affine=True)
                (ffn): FFN(
                  (activate): GELU()
                  (layers): Sequential(
                    (0): Sequential(
                      (0): Linear(in_features=96, out_features=384, bias=True)
                      (1): GELU()
                      (2): Dropout(p=0.0, inplace=False)
                    )
                    (1): Linear(in_features=384, out_features=96, bias=True)
                    (2): Dropout(p=0.0, inplace=False)
                  )
                  (dropout_layer): DropPath()
                )
              )
              (1): SwinBlock(
                (norm1): LayerNorm((96,), eps=1e-05, elementwise_affine=True)
                (attn): ShiftWindowMSA(
                  (w_msa): WindowMSA(
                    (qkv): Linear(in_features=96, out_features=288, bias=True)
                    (attn_drop): Dropout(p=0.0, inplace=False)
                    (proj): Linear(in_features=96, out_features=96, bias=True)
                    (proj_drop): Dropout(p=0.0, inplace=False)
                    (softmax): Softmax(dim=-1)
                  )
                  (drop): DropPath()
                )
                (norm2): LayerNorm((96,), eps=1e-05, elementwise_affine=True)
                (ffn): FFN(
                  (activate): GELU()
                  (layers): Sequential(
                    (0): Sequential(
                      (0): Linear(in_features=96, out_features=384, bias=True)
                      (1): GELU()
                      (2): Dropout(p=0.0, inplace=False)
                    )
                    (1): Linear(in_features=384, out_features=96, bias=True)
                    (2): Dropout(p=0.0, inplace=False)
                  )
                  (dropout_layer): DropPath()
                )
              )
            )
            (downsample): PatchMerging(
              (adap_padding): AdaptivePadding()
              (sampler): Unfold(kernel_size=(2, 2), dilation=(1, 1), padding=(0, 0), stride=(2, 2))
              (norm): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
              (reduction): Linear(in_features=384, out_features=192, bias=False)
            )
          )
          (1): SwinBlockSequence(
            (blocks): ModuleList(
              (0): SwinBlock(
                (norm1): LayerNorm((192,), eps=1e-05, elementwise_affine=True)
                (attn): ShiftWindowMSA(
                  (w_msa): WindowMSA(
                    (qkv): Linear(in_features=192, out_features=576, bias=True)
                    (attn_drop): Dropout(p=0.0, inplace=False)
                    (proj): Linear(in_features=192, out_features=192, bias=True)
                    (proj_drop): Dropout(p=0.0, inplace=False)
                    (softmax): Softmax(dim=-1)
                  )
                  (drop): DropPath()
                )
                (norm2): LayerNorm((192,), eps=1e-05, elementwise_affine=True)
                (ffn): FFN(
                  (activate): GELU()
                  (layers): Sequential(
                    (0): Sequential(
                      (0): Linear(in_features=192, out_features=768, bias=True)
                      (1): GELU()
                      (2): Dropout(p=0.0, inplace=False)
                    )
                    (1): Linear(in_features=768, out_features=192, bias=True)
                    (2): Dropout(p=0.0, inplace=False)
                  )
                  (dropout_layer): DropPath()
                )
              )
              (1): SwinBlock(
                (norm1): LayerNorm((192,), eps=1e-05, elementwise_affine=True)
                (attn): ShiftWindowMSA(
                  (w_msa): WindowMSA(
                    (qkv): Linear(in_features=192, out_features=576, bias=True)
                    (attn_drop): Dropout(p=0.0, inplace=False)
                    (proj): Linear(in_features=192, out_features=192, bias=True)
                    (proj_drop): Dropout(p=0.0, inplace=False)
                    (softmax): Softmax(dim=-1)
                  )
                  (drop): DropPath()
                )
                (norm2): LayerNorm((192,), eps=1e-05, elementwise_affine=True)
                (ffn): FFN(
                  (activate): GELU()
                  (layers): Sequential(
                    (0): Sequential(
                      (0): Linear(in_features=192, out_features=768, bias=True)
                      (1): GELU()
                      (2): Dropout(p=0.0, inplace=False)
                    )
                    (1): Linear(in_features=768, out_features=192, bias=True)
                    (2): Dropout(p=0.0, inplace=False)
                  )
                  (dropout_layer): DropPath()
                )
              )
            )
            (downsample): PatchMerging(
              (adap_padding): AdaptivePadding()
              (sampler): Unfold(kernel_size=(2, 2), dilation=(1, 1), padding=(0, 0), stride=(2, 2))
              (norm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
              (reduction): Linear(in_features=768, out_features=384, bias=False)
            )
          )
          (2): SwinBlockSequence(
            (blocks): ModuleList(
              (0): SwinBlock(
                (norm1): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
                (attn): ShiftWindowMSA(
                  (w_msa): WindowMSA(
                    (qkv): Linear(in_features=384, out_features=1152, bias=True)
                    (attn_drop): Dropout(p=0.0, inplace=False)
                    (proj): Linear(in_features=384, out_features=384, bias=True)
                    (proj_drop): Dropout(p=0.0, inplace=False)
                    (softmax): Softmax(dim=-1)
                  )
                  (drop): DropPath()
                )
                (norm2): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
                (ffn): FFN(
                  (activate): GELU()
                  (layers): Sequential(
                    (0): Sequential(
                      (0): Linear(in_features=384, out_features=1536, bias=True)
                      (1): GELU()
                      (2): Dropout(p=0.0, inplace=False)
                    )
                    (1): Linear(in_features=1536, out_features=384, bias=True)
                    (2): Dropout(p=0.0, inplace=False)
                  )
                  (dropout_layer): DropPath()
                )
              )
              (1): SwinBlock(
                (norm1): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
                (attn): ShiftWindowMSA(
                  (w_msa): WindowMSA(
                    (qkv): Linear(in_features=384, out_features=1152, bias=True)
                    (attn_drop): Dropout(p=0.0, inplace=False)
                    (proj): Linear(in_features=384, out_features=384, bias=True)
                    (proj_drop): Dropout(p=0.0, inplace=False)
                    (softmax): Softmax(dim=-1)
                  )
                  (drop): DropPath()
                )
                (norm2): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
                (ffn): FFN(
                  (activate): GELU()
                  (layers): Sequential(
                    (0): Sequential(
                      (0): Linear(in_features=384, out_features=1536, bias=True)
                      (1): GELU()
                      (2): Dropout(p=0.0, inplace=False)
                    )
                    (1): Linear(in_features=1536, out_features=384, bias=True)
                    (2): Dropout(p=0.0, inplace=False)
                  )
                  (dropout_layer): DropPath()
                )
              )
              (2): SwinBlock(
                (norm1): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
                (attn): ShiftWindowMSA(
                  (w_msa): WindowMSA(
                    (qkv): Linear(in_features=384, out_features=1152, bias=True)
                    (attn_drop): Dropout(p=0.0, inplace=False)
                    (proj): Linear(in_features=384, out_features=384, bias=True)
                    (proj_drop): Dropout(p=0.0, inplace=False)
                    (softmax): Softmax(dim=-1)
                  )
                  (drop): DropPath()
                )
                (norm2): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
                (ffn): FFN(
                  (activate): GELU()
                  (layers): Sequential(
                    (0): Sequential(
                      (0): Linear(in_features=384, out_features=1536, bias=True)
                      (1): GELU()
                      (2): Dropout(p=0.0, inplace=False)
                    )
                    (1): Linear(in_features=1536, out_features=384, bias=True)
                    (2): Dropout(p=0.0, inplace=False)
                  )
                  (dropout_layer): DropPath()
                )
              )
              (3): SwinBlock(
                (norm1): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
                (attn): ShiftWindowMSA(
                  (w_msa): WindowMSA(
                    (qkv): Linear(in_features=384, out_features=1152, bias=True)
                    (attn_drop): Dropout(p=0.0, inplace=False)
                    (proj): Linear(in_features=384, out_features=384, bias=True)
                    (proj_drop): Dropout(p=0.0, inplace=False)
                    (softmax): Softmax(dim=-1)
                  )
                  (drop): DropPath()
                )
                (norm2): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
                (ffn): FFN(
                  (activate): GELU()
                  (layers): Sequential(
                    (0): Sequential(
                      (0): Linear(in_features=384, out_features=1536, bias=True)
                      (1): GELU()
                      (2): Dropout(p=0.0, inplace=False)
                    )
                    (1): Linear(in_features=1536, out_features=384, bias=True)
                    (2): Dropout(p=0.0, inplace=False)
                  )
                  (dropout_layer): DropPath()
                )
              )
              (4): SwinBlock(
                (norm1): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
                (attn): ShiftWindowMSA(
                  (w_msa): WindowMSA(
                    (qkv): Linear(in_features=384, out_features=1152, bias=True)
                    (attn_drop): Dropout(p=0.0, inplace=False)
                    (proj): Linear(in_features=384, out_features=384, bias=True)
                    (proj_drop): Dropout(p=0.0, inplace=False)
                    (softmax): Softmax(dim=-1)
                  )
                  (drop): DropPath()
                )
                (norm2): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
                (ffn): FFN(
                  (activate): GELU()
                  (layers): Sequential(
                    (0): Sequential(
                      (0): Linear(in_features=384, out_features=1536, bias=True)
                      (1): GELU()
                      (2): Dropout(p=0.0, inplace=False)
                    )
                    (1): Linear(in_features=1536, out_features=384, bias=True)
                    (2): Dropout(p=0.0, inplace=False)
                  )
                  (dropout_layer): DropPath()
                )
              )
              (5): SwinBlock(
                (norm1): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
                (attn): ShiftWindowMSA(
                  (w_msa): WindowMSA(
                    (qkv): Linear(in_features=384, out_features=1152, bias=True)
                    (attn_drop): Dropout(p=0.0, inplace=False)
                    (proj): Linear(in_features=384, out_features=384, bias=True)
                    (proj_drop): Dropout(p=0.0, inplace=False)
                    (softmax): Softmax(dim=-1)
                  )
                  (drop): DropPath()
                )
                (norm2): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
                (ffn): FFN(
                  (activate): GELU()
                  (layers): Sequential(
                    (0): Sequential(
                      (0): Linear(in_features=384, out_features=1536, bias=True)
                      (1): GELU()
                      (2): Dropout(p=0.0, inplace=False)
                    )
                    (1): Linear(in_features=1536, out_features=384, bias=True)
                    (2): Dropout(p=0.0, inplace=False)
                  )
                  (dropout_layer): DropPath()
                )
              )
            )
            (downsample): PatchMerging(
              (adap_padding): AdaptivePadding()
              (sampler): Unfold(kernel_size=(2, 2), dilation=(1, 1), padding=(0, 0), stride=(2, 2))
              (norm): LayerNorm((1536,), eps=1e-05, elementwise_affine=True)
              (reduction): Linear(in_features=1536, out_features=768, bias=False)
            )
          )
          (3): SwinBlockSequence(
            (blocks): ModuleList(
              (0): SwinBlock(
                (norm1): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
                (attn): ShiftWindowMSA(
                  (w_msa): WindowMSA(
                    (qkv): Linear(in_features=768, out_features=2304, bias=True)
                    (attn_drop): Dropout(p=0.0, inplace=False)
                    (proj): Linear(in_features=768, out_features=768, bias=True)
                    (proj_drop): Dropout(p=0.0, inplace=False)
                    (softmax): Softmax(dim=-1)
                  )
                  (drop): DropPath()
                )
                (norm2): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
                (ffn): FFN(
                  (activate): GELU()
                  (layers): Sequential(
                    (0): Sequential(
                      (0): Linear(in_features=768, out_features=3072, bias=True)
                      (1): GELU()
                      (2): Dropout(p=0.0, inplace=False)
                    )
                    (1): Linear(in_features=3072, out_features=768, bias=True)
                    (2): Dropout(p=0.0, inplace=False)
                  )
                  (dropout_layer): DropPath()
                )
              )
              (1): SwinBlock(
                (norm1): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
                (attn): ShiftWindowMSA(
                  (w_msa): WindowMSA(
                    (qkv): Linear(in_features=768, out_features=2304, bias=True)
                    (attn_drop): Dropout(p=0.0, inplace=False)
                    (proj): Linear(in_features=768, out_features=768, bias=True)
                    (proj_drop): Dropout(p=0.0, inplace=False)
                    (softmax): Softmax(dim=-1)
                  )
                  (drop): DropPath()
                )
                (norm2): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
                (ffn): FFN(
                  (activate): GELU()
                  (layers): Sequential(
                    (0): Sequential(
                      (0): Linear(in_features=768, out_features=3072, bias=True)
                      (1): GELU()
                      (2): Dropout(p=0.0, inplace=False)
                    )
                    (1): Linear(in_features=3072, out_features=768, bias=True)
                    (2): Dropout(p=0.0, inplace=False)
                  )
                  (dropout_layer): DropPath()
                )
              )
            )
          )
        )
        (norm1): LayerNorm((192,), eps=1e-05, elementwise_affine=True)
        (norm2): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
        (norm3): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
      )
      init_cfg={'type': 'Pretrained', 'checkpoint': 'https://github.com/SwinTransformer/storage/releases/download/v1.0.0/swin_tiny_patch4_window7_224.pth'}
      (neck): GeneralizedLSSFPN(
        (lateral_convs): ModuleList(
          (0): ConvModule(
            (conv): Conv2d(448, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (activate): ReLU(inplace=True)
          )
          (1): ConvModule(
            (conv): Conv2d(1152, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (activate): ReLU(inplace=True)
          )
        )
        (fpn_convs): ModuleList(
          (0): ConvModule(
            (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (activate): ReLU(inplace=True)
          )
          (1): ConvModule(
            (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (activate): ReLU(inplace=True)
          )
        )
      )
      (vtransform): LSSTransform(
        (depthnet): Sequential(
          (0): Conv2d(320, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
          (3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (4): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (5): ReLU(inplace=True)
          (6): Conv2d(256, 198, kernel_size=(1, 1), stride=(1, 1))
        )
        (dtransform): Sequential(
          (0): Conv2d(1, 8, kernel_size=(1, 1), stride=(1, 1))
          (1): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
          (3): Conv2d(8, 32, kernel_size=(5, 5), stride=(4, 4), padding=(2, 2))
          (4): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (5): ReLU(inplace=True)
          (6): Conv2d(32, 64, kernel_size=(5, 5), stride=(2, 2), padding=(2, 2))
          (7): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (8): ReLU(inplace=True)
        )
        (pyramid_depth_net): FCN(
          (backbone): IntermediateLayerGetter(
            (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
            (layer1): Sequential(
              (0): Bottleneck(
                (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (relu): ReLU(inplace=True)
                (downsample): Sequential(
                  (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                )
              )
              (1): Bottleneck(
                (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (relu): ReLU(inplace=True)
              )
              (2): Bottleneck(
                (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (relu): ReLU(inplace=True)
              )
            )
            (layer2): Sequential(
              (0): Bottleneck(
                (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (relu): ReLU(inplace=True)
                (downsample): Sequential(
                  (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
                  (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                )
              )
              (1): Bottleneck(
                (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (relu): ReLU(inplace=True)
              )
              (2): Bottleneck(
                (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (relu): ReLU(inplace=True)
              )
              (3): Bottleneck(
                (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (relu): ReLU(inplace=True)
              )
            )
            (layer3): Sequential(
              (0): Bottleneck(
                (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (relu): ReLU(inplace=True)
                (downsample): Sequential(
                  (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                )
              )
              (1): Bottleneck(
                (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
                (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (relu): ReLU(inplace=True)
              )
              (2): Bottleneck(
                (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
                (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (relu): ReLU(inplace=True)
              )
              (3): Bottleneck(
                (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
                (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (relu): ReLU(inplace=True)
              )
              (4): Bottleneck(
                (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
                (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (relu): ReLU(inplace=True)
              )
              (5): Bottleneck(
                (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
                (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (relu): ReLU(inplace=True)
              )
            )
            (layer4): Sequential(
              (0): Bottleneck(
                (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
                (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (relu): ReLU(inplace=True)
                (downsample): Sequential(
                  (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                )
              )
              (1): Bottleneck(
                (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(4, 4), dilation=(4, 4), bias=False)
                (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (relu): ReLU(inplace=True)
              )
              (2): Bottleneck(
                (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(4, 4), dilation=(4, 4), bias=False)
                (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (relu): ReLU(inplace=True)
              )
            )
          )
          (classifier): FCNHead(
            (0): Conv2d(2048, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU()
            (3): Dropout(p=0.1, inplace=False)
            (4): Conv2d(512, 21, kernel_size=(1, 1), stride=(1, 1))
          )
        )
        (conv): Conv2d(21, 1, kernel_size=(1, 1), stride=(1, 1))
        (downsample): Sequential(
          (0): Conv2d(80, 80, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (1): BatchNorm2d(80, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
          (3): Conv2d(80, 80, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
          (4): BatchNorm2d(80, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (5): ReLU(inplace=True)
          (6): Conv2d(80, 80, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (7): BatchNorm2d(80, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (8): ReLU(inplace=True)
        )
      )
    )
  )
  (input_cross_transformer): TransformerEncoder(
    (layers): ModuleList(
      (0): EncoderBlock(
        (self_attn): MultiheadAttention(
          (qkv_proj): Linear(in_features=128, out_features=384, bias=True)
          (o_proj): Linear(in_features=128, out_features=128, bias=True)
          (patch_in): PatchEmbedding(
            (proj): Conv2d(3, 128, kernel_size=(8, 8), stride=(8, 8))
          )
          (patch_pe): PatchEmbedding(
            (proj): Conv2d(256, 128, kernel_size=(8, 8), stride=(8, 8))
          )
        )
        (linear_net): Sequential(
          (0): Linear(in_features=128, out_features=384, bias=True)
          (1): ReLU()
          (2): Linear(in_features=384, out_features=384, bias=True)
          (3): ReLU()
          (4): Linear(in_features=384, out_features=128, bias=True)
        )
        (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
        (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
        (dropout): Dropout(p=0.0, inplace=False)
        (patch): PatchEmbedding(
          (proj): Conv2d(3, 128, kernel_size=(8, 8), stride=(8, 8))
        )
      )
    )
  )
  (input_cross_transformer_infra): TransformerEncoder(
    (layers): ModuleList(
      (0): EncoderBlock(
        (self_attn): MultiheadAttention(
          (qkv_proj): Linear(in_features=128, out_features=384, bias=True)
          (o_proj): Linear(in_features=128, out_features=128, bias=True)
          (patch_in): PatchEmbedding(
            (proj): Conv2d(3, 128, kernel_size=(8, 8), stride=(8, 8))
          )
          (patch_pe): PatchEmbedding(
            (proj): Conv2d(256, 128, kernel_size=(8, 8), stride=(8, 8))
          )
        )
        (linear_net): Sequential(
          (0): Linear(in_features=128, out_features=384, bias=True)
          (1): ReLU()
          (2): Linear(in_features=384, out_features=384, bias=True)
          (3): ReLU()
          (4): Linear(in_features=384, out_features=128, bias=True)
        )
        (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
        (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
        (dropout): Dropout(p=0.0, inplace=False)
        (patch): PatchEmbedding(
          (proj): Conv2d(3, 128, kernel_size=(8, 8), stride=(8, 8))
        )
      )
    )
  )
  (seg_model): MCnet(
    (model): Sequential(
      (0): Focus(
        (conv): Conv(
          (conv): Conv2d(12, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): Hardswish()
        )
      )
      (1): Conv(
        (conv): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): Hardswish()
      )
      (2): BottleneckCSP(
        (cv1): Conv(
          (conv): Conv2d(64, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): Hardswish()
        )
        (cv2): Conv2d(64, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (cv3): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (cv4): Conv(
          (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): Hardswish()
        )
        (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): LeakyReLU(negative_slope=0.1, inplace=True)
        (m): Sequential(
          (0): Bottleneck(
            (cv1): Conv(
              (conv): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): Hardswish()
            )
            (cv2): Conv(
              (conv): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): Hardswish()
            )
          )
        )
      )
      (3): Conv(
        (conv): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): Hardswish()
      )
      (4): BottleneckCSP(
        (cv1): Conv(
          (conv): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): Hardswish()
        )
        (cv2): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (cv3): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (cv4): Conv(
          (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): Hardswish()
        )
        (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): LeakyReLU(negative_slope=0.1, inplace=True)
        (m): Sequential(
          (0): Bottleneck(
            (cv1): Conv(
              (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): Hardswish()
            )
            (cv2): Conv(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): Hardswish()
            )
          )
          (1): Bottleneck(
            (cv1): Conv(
              (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): Hardswish()
            )
            (cv2): Conv(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): Hardswish()
            )
          )
          (2): Bottleneck(
            (cv1): Conv(
              (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): Hardswish()
            )
            (cv2): Conv(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): Hardswish()
            )
          )
        )
      )
      (5): Conv(
        (conv): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): Hardswish()
      )
      (6): BottleneckCSP(
        (cv1): Conv(
          (conv): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): Hardswish()
        )
        (cv2): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (cv3): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (cv4): Conv(
          (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): Hardswish()
        )
        (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): LeakyReLU(negative_slope=0.1, inplace=True)
        (m): Sequential(
          (0): Bottleneck(
            (cv1): Conv(
              (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): Hardswish()
            )
            (cv2): Conv(
              (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): Hardswish()
            )
          )
          (1): Bottleneck(
            (cv1): Conv(
              (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): Hardswish()
            )
            (cv2): Conv(
              (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): Hardswish()
            )
          )
          (2): Bottleneck(
            (cv1): Conv(
              (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): Hardswish()
            )
            (cv2): Conv(
              (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): Hardswish()
            )
          )
        )
      )
      (7): Conv(
        (conv): Conv2d(256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn): BatchNorm2d(512, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): Hardswish()
      )
      (8): SPP(
        (cv1): Conv(
          (conv): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): Hardswish()
        )
        (cv2): Conv(
          (conv): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(512, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): Hardswish()
        )
        (m): ModuleList(
          (0): MaxPool2d(kernel_size=5, stride=1, padding=2, dilation=1, ceil_mode=False)
          (1): MaxPool2d(kernel_size=9, stride=1, padding=4, dilation=1, ceil_mode=False)
          (2): MaxPool2d(kernel_size=13, stride=1, padding=6, dilation=1, ceil_mode=False)
        )
      )
      (9): BottleneckCSP(
        (cv1): Conv(
          (conv): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): Hardswish()
        )
        (cv2): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (cv3): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (cv4): Conv(
          (conv): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(512, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): Hardswish()
        )
        (bn): BatchNorm2d(512, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): LeakyReLU(negative_slope=0.1, inplace=True)
        (m): Sequential(
          (0): Bottleneck(
            (cv1): Conv(
              (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): Hardswish()
            )
            (cv2): Conv(
              (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): Hardswish()
            )
          )
        )
      )
      (10): Conv(
        (conv): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): Hardswish()
      )
      (11): Upsample(scale_factor=2.0, mode=nearest)
      (12): Concat()
      (13): BottleneckCSP(
        (cv1): Conv(
          (conv): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): Hardswish()
        )
        (cv2): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (cv3): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (cv4): Conv(
          (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): Hardswish()
        )
        (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): LeakyReLU(negative_slope=0.1, inplace=True)
        (m): Sequential(
          (0): Bottleneck(
            (cv1): Conv(
              (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): Hardswish()
            )
            (cv2): Conv(
              (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): Hardswish()
            )
          )
        )
      )
      (14): Conv(
        (conv): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): Hardswish()
      )
      (15): Upsample(scale_factor=2.0, mode=nearest)
      (16): Concat()
      (17): BottleneckCSP(
        (cv1): Conv(
          (conv): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): Hardswish()
        )
        (cv2): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (cv3): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (cv4): Conv(
          (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): Hardswish()
        )
        (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): LeakyReLU(negative_slope=0.1, inplace=True)
        (m): Sequential(
          (0): Bottleneck(
            (cv1): Conv(
              (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): Hardswish()
            )
            (cv2): Conv(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): Hardswish()
            )
          )
        )
      )
      (18): Conv(
        (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): Hardswish()
      )
      (19): Concat()
      (20): BottleneckCSP(
        (cv1): Conv(
          (conv): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): Hardswish()
        )
        (cv2): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (cv3): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (cv4): Conv(
          (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): Hardswish()
        )
        (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): LeakyReLU(negative_slope=0.1, inplace=True)
        (m): Sequential(
          (0): Bottleneck(
            (cv1): Conv(
              (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): Hardswish()
            )
            (cv2): Conv(
              (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): Hardswish()
            )
          )
        )
      )
      (21): Conv(
        (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): Hardswish()
      )
      (22): Concat()
      (23): BottleneckCSP(
        (cv1): Conv(
          (conv): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): Hardswish()
        )
        (cv2): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (cv3): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (cv4): Conv(
          (conv): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(512, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): Hardswish()
        )
        (bn): BatchNorm2d(512, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): LeakyReLU(negative_slope=0.1, inplace=True)
        (m): Sequential(
          (0): Bottleneck(
            (cv1): Conv(
              (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): Hardswish()
            )
            (cv2): Conv(
              (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): Hardswish()
            )
          )
        )
      )
      (24): Detect(
        (m): ModuleList(
          (0): Conv2d(128, 18, kernel_size=(1, 1), stride=(1, 1))
          (1): Conv2d(256, 18, kernel_size=(1, 1), stride=(1, 1))
          (2): Conv2d(512, 18, kernel_size=(1, 1), stride=(1, 1))
        )
      )
      (25): Conv(
        (conv): Conv2d(256, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): Hardswish()
      )
      (26): Upsample(scale_factor=2.0, mode=nearest)
      (27): BottleneckCSP(
        (cv1): Conv(
          (conv): Conv2d(128, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): Hardswish()
        )
        (cv2): Conv2d(128, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (cv3): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (cv4): Conv(
          (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): Hardswish()
        )
        (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): LeakyReLU(negative_slope=0.1, inplace=True)
        (m): Sequential(
          (0): Bottleneck(
            (cv1): Conv(
              (conv): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): Hardswish()
            )
            (cv2): Conv(
              (conv): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): Hardswish()
            )
          )
        )
      )
      (28): Conv(
        (conv): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): Hardswish()
      )
      (29): Upsample(scale_factor=2.0, mode=nearest)
      (30): Conv(
        (conv): Conv2d(32, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn): BatchNorm2d(16, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): Hardswish()
      )
      (31): BottleneckCSP(
        (cv1): Conv(
          (conv): Conv2d(16, 4, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(4, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): Hardswish()
        )
        (cv2): Conv2d(16, 4, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (cv3): Conv2d(4, 4, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (cv4): Conv(
          (conv): Conv2d(8, 8, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(8, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): Hardswish()
        )
        (bn): BatchNorm2d(8, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): LeakyReLU(negative_slope=0.1, inplace=True)
        (m): Sequential(
          (0): Bottleneck(
            (cv1): Conv(
              (conv): Conv2d(4, 4, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(4, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): Hardswish()
            )
            (cv2): Conv(
              (conv): Conv2d(4, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn): BatchNorm2d(4, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): Hardswish()
            )
          )
        )
      )
      (32): Upsample(scale_factor=2.0, mode=nearest)
      (33): Conv(
        (conv): Conv2d(8, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn): BatchNorm2d(2, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): Hardswish()
      )
      (34): Conv(
        (conv): Conv2d(256, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): Hardswish()
      )
      (35): Upsample(scale_factor=2.0, mode=nearest)
      (36): BottleneckCSP(
        (cv1): Conv(
          (conv): Conv2d(128, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): Hardswish()
        )
        (cv2): Conv2d(128, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (cv3): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (cv4): Conv(
          (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): Hardswish()
        )
        (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): LeakyReLU(negative_slope=0.1, inplace=True)
        (m): Sequential(
          (0): Bottleneck(
            (cv1): Conv(
              (conv): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): Hardswish()
            )
            (cv2): Conv(
              (conv): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): Hardswish()
            )
          )
        )
      )
      (37): Conv(
        (conv): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): Hardswish()
      )
      (38): Upsample(scale_factor=2.0, mode=nearest)
      (39): Conv(
        (conv): Conv2d(32, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn): BatchNorm2d(16, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): Hardswish()
      )
      (40): BottleneckCSP(
        (cv1): Conv(
          (conv): Conv2d(16, 4, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(4, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): Hardswish()
        )
        (cv2): Conv2d(16, 4, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (cv3): Conv2d(4, 4, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (cv4): Conv(
          (conv): Conv2d(8, 8, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(8, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): Hardswish()
        )
        (bn): BatchNorm2d(8, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): LeakyReLU(negative_slope=0.1, inplace=True)
        (m): Sequential(
          (0): Bottleneck(
            (cv1): Conv(
              (conv): Conv2d(4, 4, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(4, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): Hardswish()
            )
            (cv2): Conv(
              (conv): Conv2d(4, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn): BatchNorm2d(4, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): Hardswish()
            )
          )
        )
      )
      (41): Upsample(scale_factor=2.0, mode=nearest)
      (42): Conv(
        (conv): Conv2d(8, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn): BatchNorm2d(2, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): Hardswish()
      )
    )
  )
  (fuser): ConvFuser(
    (0): Conv2d(160, 80, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(80, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): ReLU(inplace=True)
  )
  (decoder): ModuleDict(
    (backbone): GeneralizedResNet(
      (0): Sequential(
        (0): BasicBlock(
          (conv1): Conv2d(80, 160, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
          (bn1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (conv2): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (downsample): Sequential(
            (0): Conv2d(80, 160, kernel_size=(1, 1), stride=(2, 2), bias=False)
            (1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): BasicBlock(
          (conv1): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (conv2): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): Sequential(
        (0): BasicBlock(
          (conv1): Conv2d(160, 320, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
          (bn1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (conv2): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (downsample): Sequential(
            (0): Conv2d(160, 320, kernel_size=(1, 1), stride=(2, 2), bias=False)
            (1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): BasicBlock(
          (conv1): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (conv2): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (2): Sequential(
        (0): BasicBlock(
          (conv1): Conv2d(320, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (conv2): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (downsample): Sequential(
            (0): Conv2d(320, 640, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): BasicBlock(
          (conv1): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (conv2): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (neck): LSSFPN(
      (fuse): Sequential(
        (0): Conv2d(800, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
        (3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (4): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (5): ReLU(inplace=True)
      )
      (upsample): Sequential(
        (0): Upsample(scale_factor=2.0, mode=bilinear)
        (1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (3): ReLU(inplace=True)
      )
    )
  )
  (heads): ModuleDict(
    (map): BEVSegmentationHead(
      (transform): BEVGridTransform()
      (classifier): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
        (3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (4): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (5): ReLU(inplace=True)
        (6): Conv2d(256, 3, kernel_size=(1, 1), stride=(1, 1))
      )
    )
  )
)
2025-01-21 22:03:20,937 - mmdet3d - INFO - Start running, host: jmeng18@sg015, work_dir: /home/jmeng18/bev_fusion/bevfusion-beliv/train_result_map_infra+onboard_camera_long_depth_vit
2025-01-21 22:03:20,938 - mmdet3d - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) CyclicLrUpdaterHook                
(HIGH        ) CyclicMomentumUpdaterHook          
(ABOVE_NORMAL) Fp16OptimizerHook                  
(NORMAL      ) CheckpointHook                     
(NORMAL      ) DistEvalHook                       
(VERY_LOW    ) TextLoggerHook                     
(VERY_LOW    ) TensorboardLoggerHook              
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) CyclicLrUpdaterHook                
(HIGH        ) CyclicMomentumUpdaterHook          
(NORMAL      ) DistSamplerSeedHook                
(NORMAL      ) DistEvalHook                       
(LOW         ) IterTimerHook                      
(VERY_LOW    ) TextLoggerHook                     
(VERY_LOW    ) TensorboardLoggerHook              
 -------------------- 
before_train_iter:
(VERY_HIGH   ) CyclicLrUpdaterHook                
(HIGH        ) CyclicMomentumUpdaterHook          
(NORMAL      ) DistEvalHook                       
(LOW         ) IterTimerHook                      
 -------------------- 
after_train_iter:
(ABOVE_NORMAL) Fp16OptimizerHook                  
(NORMAL      ) CheckpointHook                     
(NORMAL      ) DistEvalHook                       
(LOW         ) IterTimerHook                      
(VERY_LOW    ) TextLoggerHook                     
(VERY_LOW    ) TensorboardLoggerHook              
 -------------------- 
after_train_epoch:
(NORMAL      ) CheckpointHook                     
(NORMAL      ) DistEvalHook                       
(VERY_LOW    ) TextLoggerHook                     
(VERY_LOW    ) TensorboardLoggerHook              
 -------------------- 
before_val_epoch:
(NORMAL      ) DistSamplerSeedHook                
(LOW         ) IterTimerHook                      
(VERY_LOW    ) TextLoggerHook                     
(VERY_LOW    ) TensorboardLoggerHook              
 -------------------- 
before_val_iter:
(LOW         ) IterTimerHook                      
 -------------------- 
after_val_iter:
(LOW         ) IterTimerHook                      
 -------------------- 
after_val_epoch:
(VERY_LOW    ) TextLoggerHook                     
(VERY_LOW    ) TensorboardLoggerHook              
 -------------------- 
after_run:
(VERY_LOW    ) TextLoggerHook                     
(VERY_LOW    ) TensorboardLoggerHook              
 -------------------- 
2025-01-21 22:03:20,938 - mmdet3d - INFO - workflow: [('train', 1)], max: 20 epochs
2025-01-21 22:03:20,943 - mmdet3d - INFO - Checkpoints will be saved to /home/jmeng18/bev_fusion/bevfusion-beliv/train_result_map_infra+onboard_camera_long_depth_vit by HardDiskBackend.
2025-01-21 22:05:57,412 - mmdet3d - INFO - Epoch [1][50/8000]	lr: 1.000e-04, eta: 5 days, 18:57:06, time: 3.127, data_time: 0.992, memory: 25789, loss/map/drivable_area/focal: 9.5817, loss/map/ped_crossing/focal: 9.5666, loss/map/walkway/focal: 9.5772, loss: 28.7256, grad_norm: 102.4479
2025-01-21 22:08:25,221 - mmdet3d - INFO - Epoch [1][100/8000]	lr: 1.000e-04, eta: 5 days, 15:06:20, time: 2.956, data_time: 0.835, memory: 25789, loss/map/drivable_area/focal: 2.3610, loss/map/ped_crossing/focal: 2.3072, loss/map/walkway/focal: 2.3286, loss: 6.9967, grad_norm: nan
2025-01-21 22:10:48,441 - mmdet3d - INFO - Epoch [1][150/8000]	lr: 1.000e-04, eta: 5 days, 12:26:15, time: 2.864, data_time: 0.807, memory: 25813, loss/map/drivable_area/focal: 1.7076, loss/map/ped_crossing/focal: 1.6571, loss/map/walkway/focal: 1.6800, loss: 5.0448, grad_norm: nan
2025-01-21 22:13:07,766 - mmdet3d - INFO - Epoch [1][200/8000]	lr: 1.000e-04, eta: 5 days, 10:13:09, time: 2.786, data_time: 0.706, memory: 25813, loss/map/drivable_area/focal: 1.5746, loss/map/ped_crossing/focal: 1.4936, loss/map/walkway/focal: 1.5269, loss: 4.5951, grad_norm: 26.3571
2025-01-21 22:15:19,833 - mmdet3d - INFO - Epoch [1][250/8000]	lr: 1.000e-04, eta: 5 days, 7:35:04, time: 2.641, data_time: 0.566, memory: 25813, loss/map/drivable_area/focal: 1.4629, loss/map/ped_crossing/focal: 1.3971, loss/map/walkway/focal: 1.4266, loss: 4.2867, grad_norm: 25.2413
2025-01-21 22:17:29,954 - mmdet3d - INFO - Epoch [1][300/8000]	lr: 1.000e-04, eta: 5 days, 5:31:40, time: 2.602, data_time: 0.517, memory: 25813, loss/map/drivable_area/focal: 1.4597, loss/map/ped_crossing/focal: 1.4022, loss/map/walkway/focal: 1.4265, loss: 4.2884, grad_norm: 23.8471
2025-01-21 22:19:40,610 - mmdet3d - INFO - Epoch [1][350/8000]	lr: 1.001e-04, eta: 5 days, 4:06:59, time: 2.613, data_time: 0.527, memory: 25813, loss/map/drivable_area/focal: 1.3728, loss/map/ped_crossing/focal: 1.3051, loss/map/walkway/focal: 1.3352, loss: 4.0131, grad_norm: 25.0924
2025-01-21 22:21:46,798 - mmdet3d - INFO - Epoch [1][400/8000]	lr: 1.001e-04, eta: 5 days, 2:33:13, time: 2.524, data_time: 0.457, memory: 25813, loss/map/drivable_area/focal: 1.4152, loss/map/ped_crossing/focal: 1.3420, loss/map/walkway/focal: 1.3725, loss: 4.1297, grad_norm: 24.0565
2025-01-21 22:23:53,304 - mmdet3d - INFO - Epoch [1][450/8000]	lr: 1.001e-04, eta: 5 days, 1:21:42, time: 2.530, data_time: 0.486, memory: 25813, loss/map/drivable_area/focal: 1.4011, loss/map/ped_crossing/focal: 1.3326, loss/map/walkway/focal: 1.3581, loss: 4.0918, grad_norm: 23.6549
2025-01-21 22:25:58,937 - mmdet3d - INFO - Epoch [1][500/8000]	lr: 1.001e-04, eta: 5 days, 0:19:25, time: 2.513, data_time: 0.450, memory: 25813, loss/map/drivable_area/focal: 1.2627, loss/map/ped_crossing/focal: 1.1967, loss/map/walkway/focal: 1.2214, loss: 3.6808, grad_norm: 22.4509
2025-01-21 22:27:59,278 - mmdet3d - INFO - Epoch [1][550/8000]	lr: 1.002e-04, eta: 4 days, 23:02:30, time: 2.407, data_time: 0.327, memory: 25813, loss/map/drivable_area/focal: 1.3592, loss/map/ped_crossing/focal: 1.2920, loss/map/walkway/focal: 1.3180, loss: 3.9692, grad_norm: 21.7713
2025-01-21 22:30:04,139 - mmdet3d - INFO - Epoch [1][600/8000]	lr: 1.002e-04, eta: 4 days, 22:18:06, time: 2.497, data_time: 0.418, memory: 25813, loss/map/drivable_area/focal: 1.3357, loss/map/ped_crossing/focal: 1.2553, loss/map/walkway/focal: 1.2930, loss: 3.8840, grad_norm: 21.7209
2025-01-21 22:32:03,379 - mmdet3d - INFO - Epoch [1][650/8000]	lr: 1.002e-04, eta: 4 days, 21:17:14, time: 2.385, data_time: 0.317, memory: 25813, loss/map/drivable_area/focal: 1.1537, loss/map/ped_crossing/focal: 1.0831, loss/map/walkway/focal: 1.1144, loss: 3.3513, grad_norm: 21.7718
2025-01-21 22:34:31,210 - mmdet3d - INFO - Epoch [1][700/8000]	lr: 1.003e-04, eta: 4 days, 22:13:13, time: 2.957, data_time: 0.833, memory: 25813, loss/map/drivable_area/focal: 1.1908, loss/map/ped_crossing/focal: 1.1289, loss/map/walkway/focal: 1.1579, loss: 3.4775, grad_norm: 21.4865
2025-01-21 22:37:01,024 - mmdet3d - INFO - Epoch [1][750/8000]	lr: 1.003e-04, eta: 4 days, 23:08:26, time: 2.996, data_time: 0.859, memory: 25813, loss/map/drivable_area/focal: 1.1055, loss/map/ped_crossing/focal: 1.0271, loss/map/walkway/focal: 1.0638, loss: 3.1964, grad_norm: 18.8715
2025-01-21 22:39:30,500 - mmdet3d - INFO - Epoch [1][800/8000]	lr: 1.003e-04, eta: 4 days, 23:55:18, time: 2.989, data_time: 0.895, memory: 25813, loss/map/drivable_area/focal: 1.1295, loss/map/ped_crossing/focal: 1.0580, loss/map/walkway/focal: 1.0899, loss: 3.2775, grad_norm: 21.6286
2025-01-21 22:42:01,542 - mmdet3d - INFO - Epoch [1][850/8000]	lr: 1.004e-04, eta: 5 days, 0:41:16, time: 3.021, data_time: 0.889, memory: 25816, loss/map/drivable_area/focal: 1.1340, loss/map/ped_crossing/focal: 1.0682, loss/map/walkway/focal: 1.0978, loss: 3.3001, grad_norm: 21.0646
2025-01-21 22:44:38,645 - mmdet3d - INFO - Epoch [1][900/8000]	lr: 1.004e-04, eta: 5 days, 1:39:42, time: 3.142, data_time: 1.061, memory: 25816, loss/map/drivable_area/focal: 1.0990, loss/map/ped_crossing/focal: 1.0410, loss/map/walkway/focal: 1.0613, loss: 3.2013, grad_norm: 20.8594
2025-01-21 22:47:02,458 - mmdet3d - INFO - Epoch [1][950/8000]	lr: 1.005e-04, eta: 5 days, 1:54:37, time: 2.876, data_time: 0.781, memory: 25816, loss/map/drivable_area/focal: 1.0672, loss/map/ped_crossing/focal: 1.0050, loss/map/walkway/focal: 1.0293, loss: 3.1016, grad_norm: 19.9376
2025-01-21 22:49:26,195 - mmdet3d - INFO - Epoch [1][1000/8000]	lr: 1.005e-04, eta: 5 days, 2:07:36, time: 2.875, data_time: 0.814, memory: 25879, loss/map/drivable_area/focal: 1.1298, loss/map/ped_crossing/focal: 1.0688, loss/map/walkway/focal: 1.0926, loss: 3.2912, grad_norm: 19.7778
2025-01-21 22:51:48,100 - mmdet3d - INFO - Epoch [1][1050/8000]	lr: 1.006e-04, eta: 5 days, 2:14:30, time: 2.838, data_time: 0.772, memory: 25879, loss/map/drivable_area/focal: 1.0573, loss/map/ped_crossing/focal: 1.0008, loss/map/walkway/focal: 1.0253, loss: 3.0833, grad_norm: 18.8827
2025-01-21 22:54:07,918 - mmdet3d - INFO - Epoch [1][1100/8000]	lr: 1.007e-04, eta: 5 days, 2:15:32, time: 2.796, data_time: 0.742, memory: 25888, loss/map/drivable_area/focal: 0.9876, loss/map/ped_crossing/focal: 0.9335, loss/map/walkway/focal: 0.9587, loss: 2.8798, grad_norm: 18.8983
2025-01-21 22:56:22,336 - mmdet3d - INFO - Epoch [1][1150/8000]	lr: 1.007e-04, eta: 5 days, 2:03:50, time: 2.688, data_time: 0.622, memory: 25888, loss/map/drivable_area/focal: 0.9578, loss/map/ped_crossing/focal: 0.9072, loss/map/walkway/focal: 0.9301, loss: 2.7951, grad_norm: 18.6727
2025-01-21 22:58:38,353 - mmdet3d - INFO - Epoch [1][1200/8000]	lr: 1.008e-04, eta: 5 days, 1:56:28, time: 2.720, data_time: 0.625, memory: 25888, loss/map/drivable_area/focal: 1.1016, loss/map/ped_crossing/focal: 1.0220, loss/map/walkway/focal: 1.0563, loss: 3.1798, grad_norm: 20.5462
2025-01-21 23:01:02,208 - mmdet3d - INFO - Epoch [1][1250/8000]	lr: 1.008e-04, eta: 5 days, 2:06:05, time: 2.877, data_time: 0.765, memory: 25888, loss/map/drivable_area/focal: 1.0870, loss/map/ped_crossing/focal: 1.0279, loss/map/walkway/focal: 1.0546, loss: 3.1695, grad_norm: 19.2028
2025-01-21 23:03:17,723 - mmdet3d - INFO - Epoch [1][1300/8000]	lr: 1.009e-04, eta: 5 days, 1:57:49, time: 2.710, data_time: 0.616, memory: 25888, loss/map/drivable_area/focal: 1.0177, loss/map/ped_crossing/focal: 0.9517, loss/map/walkway/focal: 0.9785, loss: 2.9479, grad_norm: 19.0462
2025-01-21 23:05:37,401 - mmdet3d - INFO - Epoch [1][1350/8000]	lr: 1.010e-04, eta: 5 days, 1:58:08, time: 2.794, data_time: 0.750, memory: 25888, loss/map/drivable_area/focal: 0.9463, loss/map/ped_crossing/focal: 0.8806, loss/map/walkway/focal: 0.9115, loss: 2.7384, grad_norm: 17.3698
2025-01-21 23:07:59,240 - mmdet3d - INFO - Epoch [1][1400/8000]	lr: 1.011e-04, eta: 5 days, 2:02:22, time: 2.837, data_time: 0.711, memory: 25888, loss/map/drivable_area/focal: 1.0519, loss/map/ped_crossing/focal: 0.9894, loss/map/walkway/focal: 1.0163, loss: 3.0576, grad_norm: nan
2025-01-21 23:10:20,721 - mmdet3d - INFO - Epoch [1][1450/8000]	lr: 1.011e-04, eta: 5 days, 2:05:28, time: 2.830, data_time: 0.734, memory: 25888, loss/map/drivable_area/focal: 0.9665, loss/map/ped_crossing/focal: 0.9022, loss/map/walkway/focal: 0.9298, loss: 2.7984, grad_norm: 19.7360
2025-01-21 23:12:38,331 - mmdet3d - INFO - Epoch [1][1500/8000]	lr: 1.012e-04, eta: 5 days, 2:01:24, time: 2.752, data_time: 0.643, memory: 25947, loss/map/drivable_area/focal: 0.9322, loss/map/ped_crossing/focal: 0.8729, loss/map/walkway/focal: 0.9005, loss: 2.7056, grad_norm: 18.0555
2025-01-21 23:15:02,859 - mmdet3d - INFO - Epoch [1][1550/8000]	lr: 1.013e-04, eta: 5 days, 2:09:14, time: 2.891, data_time: 0.777, memory: 25947, loss/map/drivable_area/focal: 0.9983, loss/map/ped_crossing/focal: 0.9419, loss/map/walkway/focal: 0.9675, loss: 2.9077, grad_norm: 18.8216
2025-01-21 23:17:21,657 - mmdet3d - INFO - Epoch [1][1600/8000]	lr: 1.014e-04, eta: 5 days, 2:06:58, time: 2.776, data_time: 0.656, memory: 25947, loss/map/drivable_area/focal: 0.8398, loss/map/ped_crossing/focal: 0.7953, loss/map/walkway/focal: 0.8147, loss: 2.4498, grad_norm: 15.4414
2025-01-21 23:19:33,833 - mmdet3d - INFO - Epoch [1][1650/8000]	lr: 1.015e-04, eta: 5 days, 1:54:06, time: 2.644, data_time: 0.567, memory: 25947, loss/map/drivable_area/focal: 0.8916, loss/map/ped_crossing/focal: 0.8466, loss/map/walkway/focal: 0.8650, loss: 2.6033, grad_norm: 17.5391
2025-01-21 23:21:52,175 - mmdet3d - INFO - Epoch [1][1700/8000]	lr: 1.016e-04, eta: 5 days, 1:51:27, time: 2.767, data_time: 0.728, memory: 25947, loss/map/drivable_area/focal: 0.8664, loss/map/ped_crossing/focal: 0.8218, loss/map/walkway/focal: 0.8384, loss: 2.5266, grad_norm: 18.6066
2025-01-21 23:24:13,402 - mmdet3d - INFO - Epoch [1][1750/8000]	lr: 1.017e-04, eta: 5 days, 1:53:09, time: 2.825, data_time: 0.762, memory: 25947, loss/map/drivable_area/focal: 0.9361, loss/map/ped_crossing/focal: 0.8756, loss/map/walkway/focal: 0.9055, loss: 2.7172, grad_norm: 17.6862
2025-01-21 23:26:29,021 - mmdet3d - INFO - Epoch [1][1800/8000]	lr: 1.018e-04, eta: 5 days, 1:46:25, time: 2.712, data_time: 0.647, memory: 25947, loss/map/drivable_area/focal: 0.9603, loss/map/ped_crossing/focal: 0.8815, loss/map/walkway/focal: 0.9139, loss: 2.7557, grad_norm: 16.0291
2025-01-21 23:29:03,064 - mmdet3d - INFO - Epoch [1][1850/8000]	lr: 1.019e-04, eta: 5 days, 2:06:11, time: 3.081, data_time: 0.997, memory: 25947, loss/map/drivable_area/focal: 0.9123, loss/map/ped_crossing/focal: 0.8371, loss/map/walkway/focal: 0.8744, loss: 2.6238, grad_norm: 17.1434
2025-01-21 23:31:24,932 - mmdet3d - INFO - Epoch [1][1900/8000]	lr: 1.020e-04, eta: 5 days, 2:07:52, time: 2.837, data_time: 0.768, memory: 25947, loss/map/drivable_area/focal: 0.9429, loss/map/ped_crossing/focal: 0.8840, loss/map/walkway/focal: 0.9092, loss: 2.7361, grad_norm: 15.9350
2025-01-21 23:33:44,283 - mmdet3d - INFO - Epoch [1][1950/8000]	lr: 1.021e-04, eta: 5 days, 2:05:58, time: 2.787, data_time: 0.721, memory: 25947, loss/map/drivable_area/focal: 0.9630, loss/map/ped_crossing/focal: 0.8880, loss/map/walkway/focal: 0.9202, loss: 2.7712, grad_norm: 16.5151
2025-01-21 23:35:57,656 - mmdet3d - INFO - Epoch [1][2000/8000]	lr: 1.022e-04, eta: 5 days, 1:56:10, time: 2.667, data_time: 0.562, memory: 25947, loss/map/drivable_area/focal: 0.9040, loss/map/ped_crossing/focal: 0.8373, loss/map/walkway/focal: 0.8636, loss: 2.6048, grad_norm: 18.1529
2025-01-21 23:38:01,443 - mmdet3d - INFO - Epoch [1][2050/8000]	lr: 1.023e-04, eta: 5 days, 1:34:25, time: 2.476, data_time: 0.428, memory: 25947, loss/map/drivable_area/focal: 0.8715, loss/map/ped_crossing/focal: 0.8070, loss/map/walkway/focal: 0.8336, loss: 2.5121, grad_norm: 15.8162
2025-01-21 23:40:07,191 - mmdet3d - INFO - Epoch [1][2100/8000]	lr: 1.024e-04, eta: 5 days, 1:16:04, time: 2.515, data_time: 0.436, memory: 25947, loss/map/drivable_area/focal: 0.9065, loss/map/ped_crossing/focal: 0.8487, loss/map/walkway/focal: 0.8740, loss: 2.6292, grad_norm: 17.5450
2025-01-21 23:42:15,813 - mmdet3d - INFO - Epoch [1][2150/8000]	lr: 1.025e-04, eta: 5 days, 1:02:00, time: 2.572, data_time: 0.476, memory: 25947, loss/map/drivable_area/focal: 0.9550, loss/map/ped_crossing/focal: 0.8951, loss/map/walkway/focal: 0.9166, loss: 2.7667, grad_norm: 17.5694
2025-01-21 23:44:32,426 - mmdet3d - INFO - Epoch [1][2200/8000]	lr: 1.026e-04, eta: 5 days, 0:58:01, time: 2.732, data_time: 0.657, memory: 25947, loss/map/drivable_area/focal: 0.8630, loss/map/ped_crossing/focal: 0.7842, loss/map/walkway/focal: 0.8163, loss: 2.4634, grad_norm: 16.5972
2025-01-21 23:46:42,925 - mmdet3d - INFO - Epoch [1][2250/8000]	lr: 1.027e-04, eta: 5 days, 0:46:58, time: 2.610, data_time: 0.545, memory: 25949, loss/map/drivable_area/focal: 0.8946, loss/map/ped_crossing/focal: 0.8335, loss/map/walkway/focal: 0.8609, loss: 2.5889, grad_norm: 15.9646
2025-01-21 23:48:49,191 - mmdet3d - INFO - Epoch [1][2300/8000]	lr: 1.029e-04, eta: 5 days, 0:31:28, time: 2.525, data_time: 0.453, memory: 25949, loss/map/drivable_area/focal: 0.9184, loss/map/ped_crossing/focal: 0.8580, loss/map/walkway/focal: 0.8815, loss: 2.6579, grad_norm: 17.0665
2025-01-21 23:50:52,071 - mmdet3d - INFO - Epoch [1][2350/8000]	lr: 1.030e-04, eta: 5 days, 0:12:45, time: 2.458, data_time: 0.386, memory: 25949, loss/map/drivable_area/focal: 0.9578, loss/map/ped_crossing/focal: 0.8936, loss/map/walkway/focal: 0.9225, loss: 2.7740, grad_norm: 16.6534
2025-01-21 23:52:52,930 - mmdet3d - INFO - Epoch [1][2400/8000]	lr: 1.031e-04, eta: 4 days, 23:52:31, time: 2.417, data_time: 0.292, memory: 25949, loss/map/drivable_area/focal: 0.9457, loss/map/ped_crossing/focal: 0.8731, loss/map/walkway/focal: 0.9054, loss: 2.7242, grad_norm: 17.7599
2025-01-21 23:55:03,686 - mmdet3d - INFO - Epoch [1][2450/8000]	lr: 1.032e-04, eta: 4 days, 23:43:38, time: 2.615, data_time: 0.536, memory: 25949, loss/map/drivable_area/focal: 0.8915, loss/map/ped_crossing/focal: 0.8161, loss/map/walkway/focal: 0.8487, loss: 2.5563, grad_norm: 16.5340
2025-01-21 23:57:05,107 - mmdet3d - INFO - Epoch [1][2500/8000]	lr: 1.034e-04, eta: 4 days, 23:25:14, time: 2.428, data_time: 0.389, memory: 25949, loss/map/drivable_area/focal: 0.8772, loss/map/ped_crossing/focal: 0.8050, loss/map/walkway/focal: 0.8330, loss: 2.5153, grad_norm: 16.7312
2025-01-21 23:59:10,239 - mmdet3d - INFO - Epoch [1][2550/8000]	lr: 1.035e-04, eta: 4 days, 23:11:16, time: 2.503, data_time: 0.434, memory: 25949, loss/map/drivable_area/focal: 0.9779, loss/map/ped_crossing/focal: 0.9101, loss/map/walkway/focal: 0.9390, loss: 2.8270, grad_norm: 19.1729
2025-01-22 00:01:17,747 - mmdet3d - INFO - Epoch [1][2600/8000]	lr: 1.037e-04, eta: 4 days, 23:00:10, time: 2.550, data_time: 0.440, memory: 25949, loss/map/drivable_area/focal: 0.9910, loss/map/ped_crossing/focal: 0.9210, loss/map/walkway/focal: 0.9513, loss: 2.8632, grad_norm: 16.0012
2025-01-22 00:03:23,921 - mmdet3d - INFO - Epoch [1][2650/8000]	lr: 1.038e-04, eta: 4 days, 22:48:05, time: 2.523, data_time: 0.409, memory: 25949, loss/map/drivable_area/focal: 0.9623, loss/map/ped_crossing/focal: 0.9025, loss/map/walkway/focal: 0.9267, loss: 2.7915, grad_norm: 16.2323
2025-01-22 00:05:27,731 - mmdet3d - INFO - Epoch [1][2700/8000]	lr: 1.039e-04, eta: 4 days, 22:34:05, time: 2.476, data_time: 0.410, memory: 25949, loss/map/drivable_area/focal: 0.8778, loss/map/ped_crossing/focal: 0.8141, loss/map/walkway/focal: 0.8409, loss: 2.5327, grad_norm: 15.9945
2025-01-22 00:07:35,647 - mmdet3d - INFO - Epoch [1][2750/8000]	lr: 1.041e-04, eta: 4 days, 22:24:25, time: 2.558, data_time: 0.441, memory: 25949, loss/map/drivable_area/focal: 0.7873, loss/map/ped_crossing/focal: 0.7273, loss/map/walkway/focal: 0.7557, loss: 2.2703, grad_norm: 14.8974
2025-01-22 00:09:39,487 - mmdet3d - INFO - Epoch [1][2800/8000]	lr: 1.042e-04, eta: 4 days, 22:11:13, time: 2.477, data_time: 0.393, memory: 25949, loss/map/drivable_area/focal: 0.8455, loss/map/ped_crossing/focal: 0.7815, loss/map/walkway/focal: 0.8109, loss: 2.4378, grad_norm: 15.3738
2025-01-22 00:11:45,651 - mmdet3d - INFO - Epoch [1][2850/8000]	lr: 1.044e-04, eta: 4 days, 22:00:32, time: 2.523, data_time: 0.397, memory: 25949, loss/map/drivable_area/focal: 0.8119, loss/map/ped_crossing/focal: 0.7492, loss/map/walkway/focal: 0.7801, loss: 2.3412, grad_norm: 14.1140
2025-01-22 00:13:55,111 - mmdet3d - INFO - Epoch [1][2900/8000]	lr: 1.045e-04, eta: 4 days, 21:53:08, time: 2.589, data_time: 0.486, memory: 25949, loss/map/drivable_area/focal: 0.8036, loss/map/ped_crossing/focal: 0.7199, loss/map/walkway/focal: 0.7553, loss: 2.2789, grad_norm: 14.2715
2025-01-22 00:16:00,819 - mmdet3d - INFO - Epoch [1][2950/8000]	lr: 1.047e-04, eta: 4 days, 21:42:34, time: 2.514, data_time: 0.426, memory: 25949, loss/map/drivable_area/focal: 0.8131, loss/map/ped_crossing/focal: 0.7629, loss/map/walkway/focal: 0.7859, loss: 2.3619, grad_norm: 14.3701
2025-01-22 00:18:09,251 - mmdet3d - INFO - Epoch [1][3000/8000]	lr: 1.049e-04, eta: 4 days, 21:34:40, time: 2.569, data_time: 0.373, memory: 25949, loss/map/drivable_area/focal: 0.8456, loss/map/ped_crossing/focal: 0.7875, loss/map/walkway/focal: 0.8120, loss: 2.4450, grad_norm: 14.1957
2025-01-22 00:20:15,044 - mmdet3d - INFO - Epoch [1][3050/8000]	lr: 1.050e-04, eta: 4 days, 21:24:42, time: 2.516, data_time: 0.430, memory: 25949, loss/map/drivable_area/focal: 0.8831, loss/map/ped_crossing/focal: 0.8106, loss/map/walkway/focal: 0.8434, loss: 2.5371, grad_norm: 16.4451
2025-01-22 00:22:17,793 - mmdet3d - INFO - Epoch [1][3100/8000]	lr: 1.052e-04, eta: 4 days, 21:12:25, time: 2.455, data_time: 0.320, memory: 25949, loss/map/drivable_area/focal: 0.7454, loss/map/ped_crossing/focal: 0.6889, loss/map/walkway/focal: 0.7122, loss: 2.1465, grad_norm: 13.6894
2025-01-22 00:24:22,338 - mmdet3d - INFO - Epoch [1][3150/8000]	lr: 1.054e-04, eta: 4 days, 21:01:56, time: 2.491, data_time: 0.435, memory: 25949, loss/map/drivable_area/focal: 0.8774, loss/map/ped_crossing/focal: 0.8168, loss/map/walkway/focal: 0.8401, loss: 2.5343, grad_norm: 14.0941
2025-01-22 00:26:27,209 - mmdet3d - INFO - Epoch [1][3200/8000]	lr: 1.055e-04, eta: 4 days, 20:52:00, time: 2.497, data_time: 0.357, memory: 25949, loss/map/drivable_area/focal: 0.7854, loss/map/ped_crossing/focal: 0.7233, loss/map/walkway/focal: 0.7515, loss: 2.2602, grad_norm: 14.6408
2025-01-22 00:28:28,659 - mmdet3d - INFO - Epoch [1][3250/8000]	lr: 1.057e-04, eta: 4 days, 20:39:33, time: 2.429, data_time: 0.383, memory: 25949, loss/map/drivable_area/focal: 0.9046, loss/map/ped_crossing/focal: 0.8274, loss/map/walkway/focal: 0.8602, loss: 2.5922, grad_norm: 15.7516
2025-01-22 00:30:34,848 - mmdet3d - INFO - Epoch [1][3300/8000]	lr: 1.059e-04, eta: 4 days, 20:31:10, time: 2.524, data_time: 0.406, memory: 25949, loss/map/drivable_area/focal: 0.8109, loss/map/ped_crossing/focal: 0.7441, loss/map/walkway/focal: 0.7710, loss: 2.3260, grad_norm: 13.7708
2025-01-22 00:32:38,418 - mmdet3d - INFO - Epoch [1][3350/8000]	lr: 1.061e-04, eta: 4 days, 20:20:55, time: 2.471, data_time: 0.406, memory: 25949, loss/map/drivable_area/focal: 0.8566, loss/map/ped_crossing/focal: 0.7734, loss/map/walkway/focal: 0.8102, loss: 2.4403, grad_norm: 16.9430
2025-01-22 00:34:40,882 - mmdet3d - INFO - Epoch [1][3400/8000]	lr: 1.062e-04, eta: 4 days, 20:10:04, time: 2.449, data_time: 0.397, memory: 25949, loss/map/drivable_area/focal: 0.8284, loss/map/ped_crossing/focal: 0.7411, loss/map/walkway/focal: 0.7812, loss: 2.3506, grad_norm: 14.7877
2025-01-22 00:36:49,413 - mmdet3d - INFO - Epoch [1][3450/8000]	lr: 1.064e-04, eta: 4 days, 20:04:04, time: 2.571, data_time: 0.497, memory: 25949, loss/map/drivable_area/focal: 0.7219, loss/map/ped_crossing/focal: 0.6610, loss/map/walkway/focal: 0.6872, loss: 2.0701, grad_norm: 13.0970
2025-01-22 00:38:55,118 - mmdet3d - INFO - Epoch [1][3500/8000]	lr: 1.066e-04, eta: 4 days, 19:56:04, time: 2.514, data_time: 0.446, memory: 25949, loss/map/drivable_area/focal: 0.6986, loss/map/ped_crossing/focal: 0.6212, loss/map/walkway/focal: 0.6564, loss: 1.9763, grad_norm: 12.5715
2025-01-22 00:41:01,163 - mmdet3d - INFO - Epoch [1][3550/8000]	lr: 1.068e-04, eta: 4 days, 19:48:29, time: 2.521, data_time: 0.473, memory: 25949, loss/map/drivable_area/focal: 0.8142, loss/map/ped_crossing/focal: 0.7614, loss/map/walkway/focal: 0.7868, loss: 2.3624, grad_norm: 14.5403
2025-01-22 00:43:10,848 - mmdet3d - INFO - Epoch [1][3600/8000]	lr: 1.070e-04, eta: 4 days, 19:43:41, time: 2.594, data_time: 0.520, memory: 25949, loss/map/drivable_area/focal: 0.7848, loss/map/ped_crossing/focal: 0.7013, loss/map/walkway/focal: 0.7362, loss: 2.2222, grad_norm: 14.4162
2025-01-22 00:45:27,205 - mmdet3d - INFO - Epoch [1][3650/8000]	lr: 1.072e-04, eta: 4 days, 19:43:44, time: 2.727, data_time: 0.679, memory: 25949, loss/map/drivable_area/focal: 0.8227, loss/map/ped_crossing/focal: 0.7548, loss/map/walkway/focal: 0.7831, loss: 2.3606, grad_norm: 15.1100
2025-01-22 00:47:40,264 - mmdet3d - INFO - Epoch [1][3700/8000]	lr: 1.074e-04, eta: 4 days, 19:41:23, time: 2.661, data_time: 0.573, memory: 25949, loss/map/drivable_area/focal: 0.8777, loss/map/ped_crossing/focal: 0.8096, loss/map/walkway/focal: 0.8420, loss: 2.5293, grad_norm: 15.9842
2025-01-22 00:49:51,527 - mmdet3d - INFO - Epoch [1][3750/8000]	lr: 1.076e-04, eta: 4 days, 19:37:48, time: 2.625, data_time: 0.600, memory: 25949, loss/map/drivable_area/focal: 0.8127, loss/map/ped_crossing/focal: 0.7345, loss/map/walkway/focal: 0.7728, loss: 2.3200, grad_norm: 13.7930
2025-01-22 00:51:57,681 - mmdet3d - INFO - Epoch [1][3800/8000]	lr: 1.078e-04, eta: 4 days, 19:30:45, time: 2.523, data_time: 0.460, memory: 25949, loss/map/drivable_area/focal: 0.7018, loss/map/ped_crossing/focal: 0.6382, loss/map/walkway/focal: 0.6675, loss: 2.0075, grad_norm: 12.8745
2025-01-22 00:54:05,498 - mmdet3d - INFO - Epoch [1][3850/8000]	lr: 1.080e-04, eta: 4 days, 19:24:57, time: 2.556, data_time: 0.492, memory: 25949, loss/map/drivable_area/focal: 0.7851, loss/map/ped_crossing/focal: 0.7414, loss/map/walkway/focal: 0.7580, loss: 2.2845, grad_norm: 15.1714
2025-01-22 00:56:12,139 - mmdet3d - INFO - Epoch [1][3900/8000]	lr: 1.082e-04, eta: 4 days, 19:18:28, time: 2.533, data_time: 0.508, memory: 25949, loss/map/drivable_area/focal: 0.7912, loss/map/ped_crossing/focal: 0.7337, loss/map/walkway/focal: 0.7571, loss: 2.2820, grad_norm: 13.9297
2025-01-22 00:58:18,993 - mmdet3d - INFO - Epoch [1][3950/8000]	lr: 1.084e-04, eta: 4 days, 19:12:13, time: 2.537, data_time: 0.401, memory: 25949, loss/map/drivable_area/focal: 0.8269, loss/map/ped_crossing/focal: 0.7662, loss/map/walkway/focal: 0.7908, loss: 2.3839, grad_norm: 15.4607
2025-01-22 01:00:30,931 - mmdet3d - INFO - Epoch [1][4000/8000]	lr: 1.086e-04, eta: 4 days, 19:09:23, time: 2.639, data_time: 0.583, memory: 25949, loss/map/drivable_area/focal: 0.7950, loss/map/ped_crossing/focal: 0.7267, loss/map/walkway/focal: 0.7594, loss: 2.2812, grad_norm: nan
2025-01-22 01:02:45,984 - mmdet3d - INFO - Epoch [1][4050/8000]	lr: 1.089e-04, eta: 4 days, 19:08:34, time: 2.701, data_time: 0.605, memory: 25949, loss/map/drivable_area/focal: 0.7634, loss/map/ped_crossing/focal: 0.6905, loss/map/walkway/focal: 0.7225, loss: 2.1764, grad_norm: 13.8212
2025-01-22 01:05:03,680 - mmdet3d - INFO - Epoch [1][4100/8000]	lr: 1.091e-04, eta: 4 days, 19:09:24, time: 2.754, data_time: 0.650, memory: 25949, loss/map/drivable_area/focal: 0.7940, loss/map/ped_crossing/focal: 0.7115, loss/map/walkway/focal: 0.7434, loss: 2.2490, grad_norm: 13.4653
2025-01-22 01:07:14,467 - mmdet3d - INFO - Epoch [1][4150/8000]	lr: 1.093e-04, eta: 4 days, 19:05:49, time: 2.616, data_time: 0.517, memory: 25949, loss/map/drivable_area/focal: 0.8307, loss/map/ped_crossing/focal: 0.7685, loss/map/walkway/focal: 0.7916, loss: 2.3908, grad_norm: 15.3178
2025-01-22 01:09:26,592 - mmdet3d - INFO - Epoch [1][4200/8000]	lr: 1.095e-04, eta: 4 days, 19:03:06, time: 2.642, data_time: 0.492, memory: 25949, loss/map/drivable_area/focal: 0.8211, loss/map/ped_crossing/focal: 0.7365, loss/map/walkway/focal: 0.7754, loss: 2.3330, grad_norm: 13.5865
2025-01-22 01:11:38,343 - mmdet3d - INFO - Epoch [1][4250/8000]	lr: 1.098e-04, eta: 4 days, 19:00:11, time: 2.635, data_time: 0.549, memory: 25949, loss/map/drivable_area/focal: 0.7434, loss/map/ped_crossing/focal: 0.6678, loss/map/walkway/focal: 0.7059, loss: 2.1172, grad_norm: 13.5982
2025-01-22 01:13:52,104 - mmdet3d - INFO - Epoch [1][4300/8000]	lr: 1.100e-04, eta: 4 days, 18:58:29, time: 2.675, data_time: 0.648, memory: 25949, loss/map/drivable_area/focal: 0.8418, loss/map/ped_crossing/focal: 0.7968, loss/map/walkway/focal: 0.8165, loss: 2.4552, grad_norm: 13.7286
2025-01-22 01:16:04,847 - mmdet3d - INFO - Epoch [1][4350/8000]	lr: 1.102e-04, eta: 4 days, 18:56:09, time: 2.655, data_time: 0.604, memory: 25949, loss/map/drivable_area/focal: 0.7767, loss/map/ped_crossing/focal: 0.7003, loss/map/walkway/focal: 0.7363, loss: 2.2132, grad_norm: 15.0215
2025-01-22 01:18:27,076 - mmdet3d - INFO - Epoch [1][4400/8000]	lr: 1.105e-04, eta: 4 days, 18:59:26, time: 2.845, data_time: 0.743, memory: 25949, loss/map/drivable_area/focal: 0.7470, loss/map/ped_crossing/focal: 0.6792, loss/map/walkway/focal: 0.7070, loss: 2.1333, grad_norm: 13.5930
2025-01-22 01:20:44,449 - mmdet3d - INFO - Epoch [1][4450/8000]	lr: 1.107e-04, eta: 4 days, 18:59:45, time: 2.747, data_time: 0.726, memory: 25949, loss/map/drivable_area/focal: 0.8080, loss/map/ped_crossing/focal: 0.7295, loss/map/walkway/focal: 0.7624, loss: 2.2998, grad_norm: 13.6448
2025-01-22 01:22:55,934 - mmdet3d - INFO - Epoch [1][4500/8000]	lr: 1.109e-04, eta: 4 days, 18:56:37, time: 2.630, data_time: 0.552, memory: 25949, loss/map/drivable_area/focal: 0.7817, loss/map/ped_crossing/focal: 0.7277, loss/map/walkway/focal: 0.7510, loss: 2.2605, grad_norm: 14.9830
2025-01-22 01:25:08,033 - mmdet3d - INFO - Epoch [1][4550/8000]	lr: 1.112e-04, eta: 4 days, 18:53:51, time: 2.642, data_time: 0.605, memory: 25949, loss/map/drivable_area/focal: 0.7976, loss/map/ped_crossing/focal: 0.7462, loss/map/walkway/focal: 0.7636, loss: 2.3073, grad_norm: 14.6576
2025-01-22 01:27:24,988 - mmdet3d - INFO - Epoch [1][4600/8000]	lr: 1.114e-04, eta: 4 days, 18:53:50, time: 2.739, data_time: 0.660, memory: 25949, loss/map/drivable_area/focal: 0.8300, loss/map/ped_crossing/focal: 0.7687, loss/map/walkway/focal: 0.7972, loss: 2.3958, grad_norm: 14.9675
2025-01-22 01:29:43,358 - mmdet3d - INFO - Epoch [1][4650/8000]	lr: 1.117e-04, eta: 4 days, 18:54:34, time: 2.767, data_time: 0.722, memory: 25949, loss/map/drivable_area/focal: 0.6891, loss/map/ped_crossing/focal: 0.6197, loss/map/walkway/focal: 0.6525, loss: 1.9613, grad_norm: 13.8741
2025-01-22 01:32:01,956 - mmdet3d - INFO - Epoch [1][4700/8000]	lr: 1.119e-04, eta: 4 days, 18:55:21, time: 2.772, data_time: 0.702, memory: 25949, loss/map/drivable_area/focal: 0.7810, loss/map/ped_crossing/focal: 0.7309, loss/map/walkway/focal: 0.7501, loss: 2.2620, grad_norm: 13.7121
2025-01-22 01:34:16,428 - mmdet3d - INFO - Epoch [1][4750/8000]	lr: 1.122e-04, eta: 4 days, 18:53:49, time: 2.689, data_time: 0.606, memory: 25949, loss/map/drivable_area/focal: 0.8074, loss/map/ped_crossing/focal: 0.7542, loss/map/walkway/focal: 0.7774, loss: 2.3389, grad_norm: 14.3636
2025-01-22 01:36:30,424 - mmdet3d - INFO - Epoch [1][4800/8000]	lr: 1.124e-04, eta: 4 days, 18:52:01, time: 2.680, data_time: 0.627, memory: 25949, loss/map/drivable_area/focal: 0.7786, loss/map/ped_crossing/focal: 0.7148, loss/map/walkway/focal: 0.7406, loss: 2.2340, grad_norm: 14.3162
2025-01-22 01:38:38,817 - mmdet3d - INFO - Epoch [1][4850/8000]	lr: 1.127e-04, eta: 4 days, 18:47:13, time: 2.568, data_time: 0.489, memory: 25949, loss/map/drivable_area/focal: 0.7351, loss/map/ped_crossing/focal: 0.6674, loss/map/walkway/focal: 0.6996, loss: 2.1020, grad_norm: 14.3321
2025-01-22 01:40:44,154 - mmdet3d - INFO - Epoch [1][4900/8000]	lr: 1.129e-04, eta: 4 days, 18:40:52, time: 2.507, data_time: 0.438, memory: 25949, loss/map/drivable_area/focal: 0.7754, loss/map/ped_crossing/focal: 0.7224, loss/map/walkway/focal: 0.7432, loss: 2.2410, grad_norm: 13.3513
2025-01-22 01:42:59,803 - mmdet3d - INFO - Epoch [1][4950/8000]	lr: 1.132e-04, eta: 4 days, 18:39:59, time: 2.713, data_time: 0.604, memory: 25949, loss/map/drivable_area/focal: 0.8019, loss/map/ped_crossing/focal: 0.7440, loss/map/walkway/focal: 0.7694, loss: 2.3153, grad_norm: 14.1961
2025-01-22 01:45:09,710 - mmdet3d - INFO - Epoch [1][5000/8000]	lr: 1.135e-04, eta: 4 days, 18:36:07, time: 2.598, data_time: 0.565, memory: 25949, loss/map/drivable_area/focal: 0.8480, loss/map/ped_crossing/focal: 0.7857, loss/map/walkway/focal: 0.8142, loss: 2.4479, grad_norm: 15.8326
2025-01-22 01:47:27,382 - mmdet3d - INFO - Epoch [1][5050/8000]	lr: 1.138e-04, eta: 4 days, 18:36:14, time: 2.753, data_time: 0.699, memory: 25949, loss/map/drivable_area/focal: 0.8636, loss/map/ped_crossing/focal: 0.7992, loss/map/walkway/focal: 0.8268, loss: 2.4896, grad_norm: 14.6841
2025-01-22 01:49:49,421 - mmdet3d - INFO - Epoch [1][5100/8000]	lr: 1.140e-04, eta: 4 days, 18:38:31, time: 2.841, data_time: 0.793, memory: 25949, loss/map/drivable_area/focal: 0.6975, loss/map/ped_crossing/focal: 0.6341, loss/map/walkway/focal: 0.6599, loss: 1.9914, grad_norm: 12.5770
2025-01-22 01:52:08,804 - mmdet3d - INFO - Epoch [1][5150/8000]	lr: 1.143e-04, eta: 4 days, 18:39:24, time: 2.788, data_time: 0.722, memory: 25949, loss/map/drivable_area/focal: 0.7458, loss/map/ped_crossing/focal: 0.6852, loss/map/walkway/focal: 0.7123, loss: 2.1433, grad_norm: 12.9139
2025-01-22 01:54:20,830 - mmdet3d - INFO - Epoch [1][5200/8000]	lr: 1.146e-04, eta: 4 days, 18:36:33, time: 2.641, data_time: 0.563, memory: 25949, loss/map/drivable_area/focal: 0.7793, loss/map/ped_crossing/focal: 0.6956, loss/map/walkway/focal: 0.7344, loss: 2.2092, grad_norm: 12.5256
2025-01-22 01:56:38,087 - mmdet3d - INFO - Epoch [1][5250/8000]	lr: 1.149e-04, eta: 4 days, 18:36:17, time: 2.745, data_time: 0.733, memory: 25949, loss/map/drivable_area/focal: 0.7827, loss/map/ped_crossing/focal: 0.7069, loss/map/walkway/focal: 0.7439, loss: 2.2334, grad_norm: 14.7121
2025-01-22 01:58:51,693 - mmdet3d - INFO - Epoch [1][5300/8000]	lr: 1.151e-04, eta: 4 days, 18:34:13, time: 2.672, data_time: 0.577, memory: 25949, loss/map/drivable_area/focal: 0.7554, loss/map/ped_crossing/focal: 0.6948, loss/map/walkway/focal: 0.7198, loss: 2.1700, grad_norm: 13.3603
2025-01-22 02:01:06,822 - mmdet3d - INFO - Epoch [1][5350/8000]	lr: 1.154e-04, eta: 4 days, 18:32:52, time: 2.703, data_time: 0.679, memory: 25949, loss/map/drivable_area/focal: 0.8676, loss/map/ped_crossing/focal: 0.7936, loss/map/walkway/focal: 0.8236, loss: 2.4847, grad_norm: 15.7703
2025-01-22 02:03:19,212 - mmdet3d - INFO - Epoch [1][5400/8000]	lr: 1.157e-04, eta: 4 days, 18:30:12, time: 2.648, data_time: 0.502, memory: 25949, loss/map/drivable_area/focal: 0.7891, loss/map/ped_crossing/focal: 0.7188, loss/map/walkway/focal: 0.7519, loss: 2.2599, grad_norm: 13.7112
2025-01-22 02:05:30,519 - mmdet3d - INFO - Epoch [1][5450/8000]	lr: 1.160e-04, eta: 4 days, 18:27:02, time: 2.626, data_time: 0.491, memory: 25949, loss/map/drivable_area/focal: 0.7017, loss/map/ped_crossing/focal: 0.6291, loss/map/walkway/focal: 0.6585, loss: 1.9894, grad_norm: 13.0227
2025-01-22 02:07:45,568 - mmdet3d - INFO - Epoch [1][5500/8000]	lr: 1.163e-04, eta: 4 days, 18:25:38, time: 2.701, data_time: 0.581, memory: 25949, loss/map/drivable_area/focal: 0.8184, loss/map/ped_crossing/focal: 0.7325, loss/map/walkway/focal: 0.7685, loss: 2.3193, grad_norm: 12.1989
2025-01-22 02:09:56,243 - mmdet3d - INFO - Epoch [1][5550/8000]	lr: 1.166e-04, eta: 4 days, 18:22:11, time: 2.613, data_time: 0.560, memory: 25949, loss/map/drivable_area/focal: 0.7590, loss/map/ped_crossing/focal: 0.6842, loss/map/walkway/focal: 0.7182, loss: 2.1614, grad_norm: 14.3205
2025-01-22 02:12:15,724 - mmdet3d - INFO - Epoch [1][5600/8000]	lr: 1.169e-04, eta: 4 days, 18:22:48, time: 2.790, data_time: 0.632, memory: 25949, loss/map/drivable_area/focal: 0.8185, loss/map/ped_crossing/focal: 0.7407, loss/map/walkway/focal: 0.7749, loss: 2.3341, grad_norm: 14.5773
2025-01-22 02:14:32,261 - mmdet3d - INFO - Epoch [1][5650/8000]	lr: 1.172e-04, eta: 4 days, 18:22:02, time: 2.731, data_time: 0.623, memory: 25949, loss/map/drivable_area/focal: 0.6481, loss/map/ped_crossing/focal: 0.5718, loss/map/walkway/focal: 0.6054, loss: 1.8253, grad_norm: 11.7818
2025-01-22 02:16:47,893 - mmdet3d - INFO - Epoch [1][5700/8000]	lr: 1.175e-04, eta: 4 days, 18:20:50, time: 2.713, data_time: 0.577, memory: 25949, loss/map/drivable_area/focal: 0.8068, loss/map/ped_crossing/focal: 0.7415, loss/map/walkway/focal: 0.7694, loss: 2.3177, grad_norm: 14.5788
2025-01-22 02:19:06,977 - mmdet3d - INFO - Epoch [1][5750/8000]	lr: 1.178e-04, eta: 4 days, 18:21:09, time: 2.782, data_time: 0.685, memory: 25949, loss/map/drivable_area/focal: 0.7656, loss/map/ped_crossing/focal: 0.6986, loss/map/walkway/focal: 0.7276, loss: 2.1918, grad_norm: 13.3461
2025-01-22 02:21:20,404 - mmdet3d - INFO - Epoch [1][5800/8000]	lr: 1.181e-04, eta: 4 days, 18:18:55, time: 2.669, data_time: 0.586, memory: 25949, loss/map/drivable_area/focal: 0.8603, loss/map/ped_crossing/focal: 0.7971, loss/map/walkway/focal: 0.8270, loss: 2.4844, grad_norm: 15.3958
2025-01-22 02:23:35,915 - mmdet3d - INFO - Epoch [1][5850/8000]	lr: 1.184e-04, eta: 4 days, 18:17:36, time: 2.710, data_time: 0.632, memory: 25949, loss/map/drivable_area/focal: 0.7973, loss/map/ped_crossing/focal: 0.7303, loss/map/walkway/focal: 0.7622, loss: 2.2897, grad_norm: nan
2025-01-22 02:25:53,338 - mmdet3d - INFO - Epoch [1][5900/8000]	lr: 1.187e-04, eta: 4 days, 18:17:07, time: 2.748, data_time: 0.701, memory: 25949, loss/map/drivable_area/focal: 0.6491, loss/map/ped_crossing/focal: 0.6051, loss/map/walkway/focal: 0.6218, loss: 1.8760, grad_norm: 13.5329
2025-01-22 02:28:12,817 - mmdet3d - INFO - Epoch [1][5950/8000]	lr: 1.191e-04, eta: 4 days, 18:17:28, time: 2.790, data_time: 0.640, memory: 25949, loss/map/drivable_area/focal: 0.7718, loss/map/ped_crossing/focal: 0.6919, loss/map/walkway/focal: 0.7284, loss: 2.1922, grad_norm: 13.7192
2025-01-22 02:30:32,080 - mmdet3d - INFO - Epoch [1][6000/8000]	lr: 1.194e-04, eta: 4 days, 18:17:41, time: 2.785, data_time: 0.718, memory: 25949, loss/map/drivable_area/focal: 0.6422, loss/map/ped_crossing/focal: 0.5809, loss/map/walkway/focal: 0.6090, loss: 1.8321, grad_norm: 12.4048
2025-01-22 02:32:54,324 - mmdet3d - INFO - Epoch [1][6050/8000]	lr: 1.197e-04, eta: 4 days, 18:19:08, time: 2.845, data_time: 0.710, memory: 25949, loss/map/drivable_area/focal: 0.8097, loss/map/ped_crossing/focal: 0.7491, loss/map/walkway/focal: 0.7725, loss: 2.3313, grad_norm: 13.9407
2025-01-22 02:35:17,130 - mmdet3d - INFO - Epoch [1][6100/8000]	lr: 1.200e-04, eta: 4 days, 18:20:45, time: 2.856, data_time: 0.792, memory: 25949, loss/map/drivable_area/focal: 0.7940, loss/map/ped_crossing/focal: 0.7324, loss/map/walkway/focal: 0.7565, loss: 2.2829, grad_norm: 12.8107
2025-01-22 02:37:26,828 - mmdet3d - INFO - Epoch [1][6150/8000]	lr: 1.203e-04, eta: 4 days, 18:16:50, time: 2.594, data_time: 0.457, memory: 25949, loss/map/drivable_area/focal: 0.8733, loss/map/ped_crossing/focal: 0.7806, loss/map/walkway/focal: 0.8241, loss: 2.4781, grad_norm: 13.7025
2025-01-22 02:39:37,061 - mmdet3d - INFO - Epoch [1][6200/8000]	lr: 1.207e-04, eta: 4 days, 18:13:10, time: 2.605, data_time: 0.517, memory: 25949, loss/map/drivable_area/focal: 0.7780, loss/map/ped_crossing/focal: 0.7163, loss/map/walkway/focal: 0.7414, loss: 2.2358, grad_norm: 14.7740
2025-01-22 02:41:44,123 - mmdet3d - INFO - Epoch [1][6250/8000]	lr: 1.210e-04, eta: 4 days, 18:08:14, time: 2.541, data_time: 0.456, memory: 25949, loss/map/drivable_area/focal: 0.7740, loss/map/ped_crossing/focal: 0.7245, loss/map/walkway/focal: 0.7451, loss: 2.2436, grad_norm: 14.4196
2025-01-22 02:43:52,351 - mmdet3d - INFO - Epoch [1][6300/8000]	lr: 1.213e-04, eta: 4 days, 18:03:48, time: 2.565, data_time: 0.455, memory: 25949, loss/map/drivable_area/focal: 0.7317, loss/map/ped_crossing/focal: 0.6737, loss/map/walkway/focal: 0.7002, loss: 2.1056, grad_norm: 12.7698
2025-01-22 02:46:01,570 - mmdet3d - INFO - Epoch [1][6350/8000]	lr: 1.217e-04, eta: 4 days, 17:59:49, time: 2.584, data_time: 0.516, memory: 25949, loss/map/drivable_area/focal: 0.8452, loss/map/ped_crossing/focal: 0.7654, loss/map/walkway/focal: 0.7995, loss: 2.4101, grad_norm: 13.6844
2025-01-22 02:48:02,780 - mmdet3d - INFO - Epoch [1][6400/8000]	lr: 1.220e-04, eta: 4 days, 17:52:40, time: 2.424, data_time: 0.339, memory: 25949, loss/map/drivable_area/focal: 0.7339, loss/map/ped_crossing/focal: 0.6845, loss/map/walkway/focal: 0.7044, loss: 2.1228, grad_norm: 12.7707
2025-01-22 02:50:09,391 - mmdet3d - INFO - Epoch [1][6450/8000]	lr: 1.224e-04, eta: 4 days, 17:47:43, time: 2.532, data_time: 0.482, memory: 25949, loss/map/drivable_area/focal: 0.7346, loss/map/ped_crossing/focal: 0.6718, loss/map/walkway/focal: 0.6962, loss: 2.1026, grad_norm: 14.5080
2025-01-22 02:52:17,662 - mmdet3d - INFO - Epoch [1][6500/8000]	lr: 1.227e-04, eta: 4 days, 17:43:29, time: 2.565, data_time: 0.479, memory: 25949, loss/map/drivable_area/focal: 0.7409, loss/map/ped_crossing/focal: 0.6879, loss/map/walkway/focal: 0.7100, loss: 2.1388, grad_norm: 14.0011
2025-01-22 02:54:17,253 - mmdet3d - INFO - Epoch [1][6550/8000]	lr: 1.231e-04, eta: 4 days, 17:35:53, time: 2.392, data_time: 0.286, memory: 25949, loss/map/drivable_area/focal: 0.6793, loss/map/ped_crossing/focal: 0.6089, loss/map/walkway/focal: 0.6369, loss: 1.9250, grad_norm: 12.5359
2025-01-22 02:56:16,462 - mmdet3d - INFO - Epoch [1][6600/8000]	lr: 1.234e-04, eta: 4 days, 17:28:13, time: 2.384, data_time: 0.296, memory: 25949, loss/map/drivable_area/focal: 0.6646, loss/map/ped_crossing/focal: 0.5965, loss/map/walkway/focal: 0.6231, loss: 1.8842, grad_norm: 12.6792
2025-01-22 02:58:17,166 - mmdet3d - INFO - Epoch [1][6650/8000]	lr: 1.238e-04, eta: 4 days, 17:21:13, time: 2.414, data_time: 0.301, memory: 25949, loss/map/drivable_area/focal: 0.6913, loss/map/ped_crossing/focal: 0.6236, loss/map/walkway/focal: 0.6540, loss: 1.9689, grad_norm: 12.8285
2025-01-22 03:00:15,159 - mmdet3d - INFO - Epoch [1][6700/8000]	lr: 1.241e-04, eta: 4 days, 17:13:16, time: 2.360, data_time: 0.291, memory: 25949, loss/map/drivable_area/focal: 0.7925, loss/map/ped_crossing/focal: 0.7187, loss/map/walkway/focal: 0.7502, loss: 2.2614, grad_norm: 14.2452
2025-01-22 03:02:15,320 - mmdet3d - INFO - Epoch [1][6750/8000]	lr: 1.245e-04, eta: 4 days, 17:06:12, time: 2.403, data_time: 0.314, memory: 25949, loss/map/drivable_area/focal: 0.7850, loss/map/ped_crossing/focal: 0.7250, loss/map/walkway/focal: 0.7512, loss: 2.2612, grad_norm: 12.1701
2025-01-22 03:04:08,155 - mmdet3d - INFO - Epoch [1][6800/8000]	lr: 1.248e-04, eta: 4 days, 16:56:29, time: 2.257, data_time: 0.196, memory: 25949, loss/map/drivable_area/focal: 0.7873, loss/map/ped_crossing/focal: 0.7049, loss/map/walkway/focal: 0.7400, loss: 2.2323, grad_norm: 13.1676
2025-01-22 03:06:02,794 - mmdet3d - INFO - Epoch [1][6850/8000]	lr: 1.252e-04, eta: 4 days, 16:47:32, time: 2.293, data_time: 0.215, memory: 25949, loss/map/drivable_area/focal: 0.6563, loss/map/ped_crossing/focal: 0.5806, loss/map/walkway/focal: 0.6113, loss: 1.8482, grad_norm: 11.9344
2025-01-22 03:08:05,008 - mmdet3d - INFO - Epoch [1][6900/8000]	lr: 1.256e-04, eta: 4 days, 16:41:30, time: 2.444, data_time: 0.314, memory: 25949, loss/map/drivable_area/focal: 0.7338, loss/map/ped_crossing/focal: 0.6614, loss/map/walkway/focal: 0.6941, loss: 2.0892, grad_norm: 12.4391
2025-01-22 03:09:59,242 - mmdet3d - INFO - Epoch [1][6950/8000]	lr: 1.259e-04, eta: 4 days, 16:32:35, time: 2.285, data_time: 0.217, memory: 25949, loss/map/drivable_area/focal: 0.7716, loss/map/ped_crossing/focal: 0.6833, loss/map/walkway/focal: 0.7181, loss: 2.1730, grad_norm: 13.8373
2025-01-22 03:11:57,080 - mmdet3d - INFO - Epoch [1][7000/8000]	lr: 1.263e-04, eta: 4 days, 16:25:06, time: 2.357, data_time: 0.320, memory: 25949, loss/map/drivable_area/focal: 0.7361, loss/map/ped_crossing/focal: 0.6791, loss/map/walkway/focal: 0.7055, loss: 2.1207, grad_norm: 15.4477
2025-01-22 03:13:55,811 - mmdet3d - INFO - Epoch [1][7050/8000]	lr: 1.267e-04, eta: 4 days, 16:18:00, time: 2.375, data_time: 0.297, memory: 25949, loss/map/drivable_area/focal: 0.7253, loss/map/ped_crossing/focal: 0.6645, loss/map/walkway/focal: 0.6970, loss: 2.0868, grad_norm: 14.5630
2025-01-22 03:15:47,988 - mmdet3d - INFO - Epoch [1][7100/8000]	lr: 1.270e-04, eta: 4 days, 16:08:37, time: 2.244, data_time: 0.139, memory: 25949, loss/map/drivable_area/focal: 0.8440, loss/map/ped_crossing/focal: 0.7706, loss/map/walkway/focal: 0.8043, loss: 2.4190, grad_norm: 13.0258
2025-01-22 03:17:41,830 - mmdet3d - INFO - Epoch [1][7150/8000]	lr: 1.274e-04, eta: 4 days, 15:59:57, time: 2.277, data_time: 0.100, memory: 25949, loss/map/drivable_area/focal: 0.6930, loss/map/ped_crossing/focal: 0.6307, loss/map/walkway/focal: 0.6572, loss: 1.9810, grad_norm: 12.7673
2025-01-22 03:19:40,495 - mmdet3d - INFO - Epoch [1][7200/8000]	lr: 1.278e-04, eta: 4 days, 15:53:04, time: 2.373, data_time: 0.271, memory: 25949, loss/map/drivable_area/focal: 0.8010, loss/map/ped_crossing/focal: 0.7419, loss/map/walkway/focal: 0.7625, loss: 2.3054, grad_norm: 12.7462
2025-01-22 03:21:36,444 - mmdet3d - INFO - Epoch [1][7250/8000]	lr: 1.282e-04, eta: 4 days, 15:45:18, time: 2.319, data_time: 0.285, memory: 25949, loss/map/drivable_area/focal: 0.6457, loss/map/ped_crossing/focal: 0.5948, loss/map/walkway/focal: 0.6170, loss: 1.8575, grad_norm: 11.3337
2025-01-22 03:23:35,403 - mmdet3d - INFO - Epoch [1][7300/8000]	lr: 1.286e-04, eta: 4 days, 15:38:40, time: 2.379, data_time: 0.255, memory: 25949, loss/map/drivable_area/focal: 0.7991, loss/map/ped_crossing/focal: 0.7366, loss/map/walkway/focal: 0.7596, loss: 2.2954, grad_norm: 11.6885
2025-01-22 03:25:35,763 - mmdet3d - INFO - Epoch [1][7350/8000]	lr: 1.290e-04, eta: 4 days, 15:32:35, time: 2.407, data_time: 0.363, memory: 25949, loss/map/drivable_area/focal: 0.6772, loss/map/ped_crossing/focal: 0.6144, loss/map/walkway/focal: 0.6397, loss: 1.9312, grad_norm: 12.1055
2025-01-22 03:27:34,900 - mmdet3d - INFO - Epoch [1][7400/8000]	lr: 1.294e-04, eta: 4 days, 15:26:08, time: 2.383, data_time: 0.260, memory: 25949, loss/map/drivable_area/focal: 0.6861, loss/map/ped_crossing/focal: 0.6145, loss/map/walkway/focal: 0.6499, loss: 1.9505, grad_norm: 13.6794
2025-01-22 03:29:34,717 - mmdet3d - INFO - Epoch [1][7450/8000]	lr: 1.297e-04, eta: 4 days, 15:19:59, time: 2.396, data_time: 0.263, memory: 25949, loss/map/drivable_area/focal: 0.6885, loss/map/ped_crossing/focal: 0.6271, loss/map/walkway/focal: 0.6543, loss: 1.9700, grad_norm: 12.3502
2025-01-22 03:31:30,491 - mmdet3d - INFO - Epoch [1][7500/8000]	lr: 1.301e-04, eta: 4 days, 15:12:30, time: 2.315, data_time: 0.233, memory: 25949, loss/map/drivable_area/focal: 0.6779, loss/map/ped_crossing/focal: 0.6087, loss/map/walkway/focal: 0.6451, loss: 1.9317, grad_norm: 12.8869
2025-01-22 03:33:20,990 - mmdet3d - INFO - Epoch [1][7550/8000]	lr: 1.305e-04, eta: 4 days, 15:03:20, time: 2.210, data_time: 0.166, memory: 25949, loss/map/drivable_area/focal: 0.7133, loss/map/ped_crossing/focal: 0.6398, loss/map/walkway/focal: 0.6710, loss: 2.0241, grad_norm: 12.0653
2025-01-22 03:35:17,310 - mmdet3d - INFO - Epoch [1][7600/8000]	lr: 1.309e-04, eta: 4 days, 14:56:12, time: 2.326, data_time: 0.224, memory: 25949, loss/map/drivable_area/focal: 0.6501, loss/map/ped_crossing/focal: 0.6027, loss/map/walkway/focal: 0.6256, loss: 1.8785, grad_norm: 12.4845
2025-01-22 03:37:10,255 - mmdet3d - INFO - Epoch [1][7650/8000]	lr: 1.313e-04, eta: 4 days, 14:48:00, time: 2.259, data_time: 0.170, memory: 25949, loss/map/drivable_area/focal: 0.7826, loss/map/ped_crossing/focal: 0.7108, loss/map/walkway/focal: 0.7386, loss: 2.2320, grad_norm: 14.2245
2025-01-22 03:39:01,953 - mmdet3d - INFO - Epoch [1][7700/8000]	lr: 1.318e-04, eta: 4 days, 14:39:30, time: 2.234, data_time: 0.106, memory: 25949, loss/map/drivable_area/focal: 0.6323, loss/map/ped_crossing/focal: 0.5729, loss/map/walkway/focal: 0.5951, loss: 1.8003, grad_norm: 11.8577
2025-01-22 03:40:53,066 - mmdet3d - INFO - Epoch [1][7750/8000]	lr: 1.322e-04, eta: 4 days, 14:30:52, time: 2.222, data_time: 0.118, memory: 25949, loss/map/drivable_area/focal: 0.7079, loss/map/ped_crossing/focal: 0.6607, loss/map/walkway/focal: 0.6803, loss: 2.0488, grad_norm: 12.5951
2025-01-22 03:42:43,907 - mmdet3d - INFO - Epoch [1][7800/8000]	lr: 1.326e-04, eta: 4 days, 14:22:15, time: 2.217, data_time: 0.134, memory: 25949, loss/map/drivable_area/focal: 0.7886, loss/map/ped_crossing/focal: 0.7284, loss/map/walkway/focal: 0.7534, loss: 2.2703, grad_norm: 14.1488
2025-01-22 03:44:35,259 - mmdet3d - INFO - Epoch [1][7850/8000]	lr: 1.330e-04, eta: 4 days, 14:13:53, time: 2.227, data_time: 0.146, memory: 25949, loss/map/drivable_area/focal: 0.7248, loss/map/ped_crossing/focal: 0.6617, loss/map/walkway/focal: 0.6876, loss: 2.0741, grad_norm: 12.1671
2025-01-22 03:46:33,007 - mmdet3d - INFO - Epoch [1][7900/8000]	lr: 1.334e-04, eta: 4 days, 14:07:38, time: 2.355, data_time: 0.286, memory: 25949, loss/map/drivable_area/focal: 0.6921, loss/map/ped_crossing/focal: 0.6215, loss/map/walkway/focal: 0.6494, loss: 1.9629, grad_norm: 12.4391
2025-01-22 03:48:24,871 - mmdet3d - INFO - Epoch [1][7950/8000]	lr: 1.338e-04, eta: 4 days, 13:59:35, time: 2.237, data_time: 0.123, memory: 25949, loss/map/drivable_area/focal: 0.6638, loss/map/ped_crossing/focal: 0.6064, loss/map/walkway/focal: 0.6292, loss: 1.8994, grad_norm: 12.5104
2025-01-22 03:50:15,075 - mmdet3d - INFO - Epoch [1][8000/8000]	lr: 1.342e-04, eta: 4 days, 13:51:05, time: 2.204, data_time: 0.128, memory: 25949, loss/map/drivable_area/focal: 0.7002, loss/map/ped_crossing/focal: 0.6397, loss/map/walkway/focal: 0.6683, loss: 2.0082, grad_norm: 11.9135
