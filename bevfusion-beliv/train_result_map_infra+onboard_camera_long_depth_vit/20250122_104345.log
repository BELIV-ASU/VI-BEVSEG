2025-01-22 10:43:47,039 - mmdet3d - INFO - Config:
seed = 0
deterministic = False
checkpoint_config = dict(interval=1, max_keep_ckpts=1)
log_config = dict(
    interval=50,
    hooks=[dict(type='TextLoggerHook'),
           dict(type='TensorboardLoggerHook')])
load_from = None
resume_from = None
cudnn_benchmark = False
fp16 = dict(loss_scale=dict(growth_interval=2000))
max_epochs = 20
runner = dict(type='CustomEpochBasedRunner', max_epochs=20)
dataset_type = 'NuScenesDataset'
dataset_root = '/scratch/jmeng18/V2X-SIM/'
gt_paste_stop_epoch = -1
reduce_beams = 32
load_dim = 5
use_dim = 5
load_augmented = None
point_cloud_range = [-102.4, -102.4, -10.0, 102.4, 102.4, 6.0]
voxel_size = [0.2, 0.2, 0.4]
image_size = [256, 704]
augment2d = dict(
    resize=[[0.38, 0.55], [0.48, 0.48]],
    rotate=[-5.4, 5.4],
    gridmask=dict(prob=0.0, fixed_prob=True))
augment3d = dict(
    scale=[0.9, 1.1], rotate=[-0.78539816, 0.78539816], translate=0.5)
object_classes = ['car']
map_classes = ['drivable_area', 'ped_crossing', 'walkway']
input_modality = dict(
    use_lidar=True,
    use_camera=True,
    use_radar=False,
    use_map=False,
    use_external=False)
train_pipeline = [
    dict(type='LoadMultiViewImageFromFiles', to_float32=True),
    dict(
        type='LoadPointsFromFile',
        coord_type='LIDAR',
        load_dim=5,
        use_dim=5,
        reduce_beams=32,
        load_augmented=None),
    dict(
        type='LoadPointsFromMultiSweeps',
        sweeps_num=9,
        load_dim=5,
        use_dim=5,
        reduce_beams=32,
        pad_empty_sweeps=True,
        remove_close=True,
        load_augmented=None),
    dict(
        type='LoadAnnotations3D',
        with_bbox_3d=True,
        with_label_3d=True,
        with_attr_label=False),
    dict(
        type='ObjectPaste',
        stop_epoch=-1,
        db_sampler=dict(
            dataset_root='/scratch/jmeng18/V2X-SIM/',
            info_path='/scratch/jmeng18/V2X-SIM/nuscenes_dbinfos_train.pkl',
            rate=1.0,
            prepare=dict(
                filter_by_difficulty=[-1], filter_by_min_points=dict(car=5)),
            classes=['car'],
            sample_groups=dict(car=2),
            points_loader=dict(
                type='LoadPointsFromFile',
                coord_type='LIDAR',
                load_dim=5,
                use_dim=5,
                reduce_beams=32))),
    dict(
        type='ImageAug3D',
        final_dim=[256, 704],
        resize_lim=[0.45, 0.55],
        bot_pct_lim=[0.0, 0.0],
        rot_lim=[-0.5, 0.5],
        rand_flip=False,
        is_train=True),
    dict(
        type='GlobalRotScaleTrans',
        resize_lim=[0.9, 1.1],
        rot_lim=[-0.78539816, 0.78539816],
        trans_lim=0.5,
        is_train=True),
    dict(
        type='LoadBEVSegmentation',
        dataset_root='/scratch/jmeng18/V2X-SIM/',
        xbound=[-100.0, 100.0, 1.0],
        ybound=[-100.0, 100.0, 1.0],
        classes=['drivable_area', 'ped_crossing', 'walkway']),
    dict(type='RandomFlip3D'),
    dict(
        type='PointsRangeFilter',
        point_cloud_range=[-102.4, -102.4, -10.0, 102.4, 102.4, 6.0]),
    dict(
        type='ObjectRangeFilter',
        point_cloud_range=[-102.4, -102.4, -10.0, 102.4, 102.4, 6.0]),
    dict(type='ObjectNameFilter', classes=['car']),
    dict(
        type='ImageNormalize',
        mean=[0.485, 0.456, 0.406],
        std=[0.229, 0.224, 0.225]),
    dict(
        type='GridMask',
        use_h=True,
        use_w=True,
        max_epoch=20,
        rotate=1,
        offset=False,
        ratio=0.5,
        mode=1,
        prob=0.0,
        fixed_prob=True),
    dict(type='PointShuffle'),
    dict(type='DefaultFormatBundle3D', classes=['car']),
    dict(
        type='Collect3D',
        keys=['img', 'points', 'gt_bboxes_3d', 'gt_labels_3d', 'gt_masks_bev'],
        meta_keys=[
            'camera_intrinsics', 'camera2ego', 'lidar2ego', 'lidar2camera',
            'camera2lidar', 'lidar2image', 'img_aug_matrix', 'lidar_aug_matrix'
        ]),
    dict(type='GTDepth', keyframe_only=True)
]
test_pipeline = [
    dict(type='LoadMultiViewImageFromFiles', to_float32=True),
    dict(
        type='LoadPointsFromFile',
        coord_type='LIDAR',
        load_dim=5,
        use_dim=5,
        reduce_beams=32,
        load_augmented=None),
    dict(
        type='LoadPointsFromMultiSweeps',
        sweeps_num=9,
        load_dim=5,
        use_dim=5,
        reduce_beams=32,
        pad_empty_sweeps=True,
        remove_close=True,
        load_augmented=None),
    dict(
        type='LoadAnnotations3D',
        with_bbox_3d=True,
        with_label_3d=True,
        with_attr_label=False),
    dict(
        type='ImageAug3D',
        final_dim=[256, 704],
        resize_lim=[0.48, 0.48],
        bot_pct_lim=[0.0, 0.0],
        rot_lim=[0.0, 0.0],
        rand_flip=False,
        is_train=False),
    dict(
        type='GlobalRotScaleTrans',
        resize_lim=[1.0, 1.0],
        rot_lim=[0.0, 0.0],
        trans_lim=0.0,
        is_train=False),
    dict(
        type='LoadBEVSegmentation',
        dataset_root='/scratch/jmeng18/V2X-SIM/',
        xbound=[-100.0, 100.0, 1.0],
        ybound=[-100.0, 100.0, 1.0],
        classes=['drivable_area', 'ped_crossing', 'walkway']),
    dict(
        type='PointsRangeFilter',
        point_cloud_range=[-102.4, -102.4, -10.0, 102.4, 102.4, 6.0]),
    dict(
        type='ImageNormalize',
        mean=[0.485, 0.456, 0.406],
        std=[0.229, 0.224, 0.225]),
    dict(type='DefaultFormatBundle3D', classes=['car']),
    dict(
        type='Collect3D',
        keys=['img', 'points', 'gt_bboxes_3d', 'gt_labels_3d', 'gt_masks_bev'],
        meta_keys=[
            'camera_intrinsics', 'camera2ego', 'lidar2ego', 'lidar2camera',
            'camera2lidar', 'lidar2image', 'img_aug_matrix', 'lidar_aug_matrix'
        ]),
    dict(type='GTDepth', keyframe_only=True)
]
data = dict(
    samples_per_gpu=1,
    workers_per_gpu=1,
    train=dict(
        type='CBGSDataset',
        dataset=dict(
            type='NuScenesDataset',
            dataset_root='/scratch/jmeng18/V2X-SIM/',
            ann_file='/scratch/jmeng18/V2X-SIM/nuscenes_infos_train.pkl',
            pipeline=[
                dict(type='LoadMultiViewImageFromFiles', to_float32=True),
                dict(
                    type='LoadPointsFromFile',
                    coord_type='LIDAR',
                    load_dim=5,
                    use_dim=5,
                    reduce_beams=32,
                    load_augmented=None),
                dict(
                    type='LoadPointsFromMultiSweeps',
                    sweeps_num=9,
                    load_dim=5,
                    use_dim=5,
                    reduce_beams=32,
                    pad_empty_sweeps=True,
                    remove_close=True,
                    load_augmented=None),
                dict(
                    type='LoadAnnotations3D',
                    with_bbox_3d=True,
                    with_label_3d=True,
                    with_attr_label=False),
                dict(
                    type='ObjectPaste',
                    stop_epoch=-1,
                    db_sampler=dict(
                        dataset_root='/scratch/jmeng18/V2X-SIM/',
                        info_path=
                        '/scratch/jmeng18/V2X-SIM/nuscenes_dbinfos_train.pkl',
                        rate=1.0,
                        prepare=dict(
                            filter_by_difficulty=[-1],
                            filter_by_min_points=dict(car=5)),
                        classes=['car'],
                        sample_groups=dict(car=2),
                        points_loader=dict(
                            type='LoadPointsFromFile',
                            coord_type='LIDAR',
                            load_dim=5,
                            use_dim=5,
                            reduce_beams=32))),
                dict(
                    type='ImageAug3D',
                    final_dim=[256, 704],
                    resize_lim=[0.45, 0.55],
                    bot_pct_lim=[0.0, 0.0],
                    rot_lim=[-0.5, 0.5],
                    rand_flip=False,
                    is_train=True),
                dict(
                    type='GlobalRotScaleTrans',
                    resize_lim=[0.9, 1.1],
                    rot_lim=[-0.78539816, 0.78539816],
                    trans_lim=0.5,
                    is_train=True),
                dict(
                    type='LoadBEVSegmentation',
                    dataset_root='/scratch/jmeng18/V2X-SIM/',
                    xbound=[-100.0, 100.0, 1.0],
                    ybound=[-100.0, 100.0, 1.0],
                    classes=['drivable_area', 'ped_crossing', 'walkway']),
                dict(type='RandomFlip3D'),
                dict(
                    type='PointsRangeFilter',
                    point_cloud_range=[
                        -102.4, -102.4, -10.0, 102.4, 102.4, 6.0
                    ]),
                dict(
                    type='ObjectRangeFilter',
                    point_cloud_range=[
                        -102.4, -102.4, -10.0, 102.4, 102.4, 6.0
                    ]),
                dict(type='ObjectNameFilter', classes=['car']),
                dict(
                    type='ImageNormalize',
                    mean=[0.485, 0.456, 0.406],
                    std=[0.229, 0.224, 0.225]),
                dict(
                    type='GridMask',
                    use_h=True,
                    use_w=True,
                    max_epoch=20,
                    rotate=1,
                    offset=False,
                    ratio=0.5,
                    mode=1,
                    prob=0.0,
                    fixed_prob=True),
                dict(type='PointShuffle'),
                dict(type='DefaultFormatBundle3D', classes=['car']),
                dict(
                    type='Collect3D',
                    keys=[
                        'img', 'points', 'gt_bboxes_3d', 'gt_labels_3d',
                        'gt_masks_bev'
                    ],
                    meta_keys=[
                        'camera_intrinsics', 'camera2ego', 'lidar2ego',
                        'lidar2camera', 'camera2lidar', 'lidar2image',
                        'img_aug_matrix', 'lidar_aug_matrix'
                    ]),
                dict(type='GTDepth', keyframe_only=True)
            ],
            object_classes=['car'],
            map_classes=['drivable_area', 'ped_crossing', 'walkway'],
            modality=dict(
                use_lidar=True,
                use_camera=True,
                use_radar=False,
                use_map=False,
                use_external=False),
            test_mode=False,
            use_valid_flag=True,
            box_type_3d='LiDAR')),
    val=dict(
        type='NuScenesDataset',
        dataset_root='/scratch/jmeng18/V2X-SIM/',
        ann_file='/scratch/jmeng18/V2X-SIM/nuscenes_infos_val.pkl',
        pipeline=[
            dict(type='LoadMultiViewImageFromFiles', to_float32=True),
            dict(
                type='LoadPointsFromFile',
                coord_type='LIDAR',
                load_dim=5,
                use_dim=5,
                reduce_beams=32,
                load_augmented=None),
            dict(
                type='LoadPointsFromMultiSweeps',
                sweeps_num=9,
                load_dim=5,
                use_dim=5,
                reduce_beams=32,
                pad_empty_sweeps=True,
                remove_close=True,
                load_augmented=None),
            dict(
                type='LoadAnnotations3D',
                with_bbox_3d=True,
                with_label_3d=True,
                with_attr_label=False),
            dict(
                type='ImageAug3D',
                final_dim=[256, 704],
                resize_lim=[0.48, 0.48],
                bot_pct_lim=[0.0, 0.0],
                rot_lim=[0.0, 0.0],
                rand_flip=False,
                is_train=False),
            dict(
                type='GlobalRotScaleTrans',
                resize_lim=[1.0, 1.0],
                rot_lim=[0.0, 0.0],
                trans_lim=0.0,
                is_train=False),
            dict(
                type='LoadBEVSegmentation',
                dataset_root='/scratch/jmeng18/V2X-SIM/',
                xbound=[-100.0, 100.0, 1.0],
                ybound=[-100.0, 100.0, 1.0],
                classes=['drivable_area', 'ped_crossing', 'walkway']),
            dict(
                type='PointsRangeFilter',
                point_cloud_range=[-102.4, -102.4, -10.0, 102.4, 102.4, 6.0]),
            dict(
                type='ImageNormalize',
                mean=[0.485, 0.456, 0.406],
                std=[0.229, 0.224, 0.225]),
            dict(type='DefaultFormatBundle3D', classes=['car']),
            dict(
                type='Collect3D',
                keys=[
                    'img', 'points', 'gt_bboxes_3d', 'gt_labels_3d',
                    'gt_masks_bev'
                ],
                meta_keys=[
                    'camera_intrinsics', 'camera2ego', 'lidar2ego',
                    'lidar2camera', 'camera2lidar', 'lidar2image',
                    'img_aug_matrix', 'lidar_aug_matrix'
                ]),
            dict(type='GTDepth', keyframe_only=True)
        ],
        object_classes=['car'],
        map_classes=['drivable_area', 'ped_crossing', 'walkway'],
        modality=dict(
            use_lidar=True,
            use_camera=True,
            use_radar=False,
            use_map=False,
            use_external=False),
        test_mode=False,
        box_type_3d='LiDAR'),
    test=dict(
        type='NuScenesDataset',
        dataset_root='/scratch/jmeng18/V2X-SIM/',
        ann_file='/scratch/jmeng18/V2X-SIM/nuscenes_infos_val.pkl',
        pipeline=[
            dict(type='LoadMultiViewImageFromFiles', to_float32=True),
            dict(
                type='LoadPointsFromFile',
                coord_type='LIDAR',
                load_dim=5,
                use_dim=5,
                reduce_beams=32,
                load_augmented=None),
            dict(
                type='LoadPointsFromMultiSweeps',
                sweeps_num=9,
                load_dim=5,
                use_dim=5,
                reduce_beams=32,
                pad_empty_sweeps=True,
                remove_close=True,
                load_augmented=None),
            dict(
                type='LoadAnnotations3D',
                with_bbox_3d=True,
                with_label_3d=True,
                with_attr_label=False),
            dict(
                type='ImageAug3D',
                final_dim=[256, 704],
                resize_lim=[0.48, 0.48],
                bot_pct_lim=[0.0, 0.0],
                rot_lim=[0.0, 0.0],
                rand_flip=False,
                is_train=False),
            dict(
                type='GlobalRotScaleTrans',
                resize_lim=[1.0, 1.0],
                rot_lim=[0.0, 0.0],
                trans_lim=0.0,
                is_train=False),
            dict(
                type='LoadBEVSegmentation',
                dataset_root='/scratch/jmeng18/V2X-SIM/',
                xbound=[-100.0, 100.0, 1.0],
                ybound=[-100.0, 100.0, 1.0],
                classes=['drivable_area', 'ped_crossing', 'walkway']),
            dict(
                type='PointsRangeFilter',
                point_cloud_range=[-102.4, -102.4, -10.0, 102.4, 102.4, 6.0]),
            dict(
                type='ImageNormalize',
                mean=[0.485, 0.456, 0.406],
                std=[0.229, 0.224, 0.225]),
            dict(type='DefaultFormatBundle3D', classes=['car']),
            dict(
                type='Collect3D',
                keys=[
                    'img', 'points', 'gt_bboxes_3d', 'gt_labels_3d',
                    'gt_masks_bev'
                ],
                meta_keys=[
                    'camera_intrinsics', 'camera2ego', 'lidar2ego',
                    'lidar2camera', 'camera2lidar', 'lidar2image',
                    'img_aug_matrix', 'lidar_aug_matrix'
                ]),
            dict(type='GTDepth', keyframe_only=True)
        ],
        object_classes=['car'],
        map_classes=['drivable_area', 'ped_crossing', 'walkway'],
        modality=dict(
            use_lidar=True,
            use_camera=True,
            use_radar=False,
            use_map=False,
            use_external=False),
        test_mode=True,
        box_type_3d='LiDAR'))
evaluation = dict(
    interval=1,
    pipeline=[
        dict(type='LoadMultiViewImageFromFiles', to_float32=True),
        dict(
            type='LoadPointsFromFile',
            coord_type='LIDAR',
            load_dim=5,
            use_dim=5,
            reduce_beams=32,
            load_augmented=None),
        dict(
            type='LoadPointsFromMultiSweeps',
            sweeps_num=9,
            load_dim=5,
            use_dim=5,
            reduce_beams=32,
            pad_empty_sweeps=True,
            remove_close=True,
            load_augmented=None),
        dict(
            type='LoadAnnotations3D',
            with_bbox_3d=True,
            with_label_3d=True,
            with_attr_label=False),
        dict(
            type='ImageAug3D',
            final_dim=[256, 704],
            resize_lim=[0.48, 0.48],
            bot_pct_lim=[0.0, 0.0],
            rot_lim=[0.0, 0.0],
            rand_flip=False,
            is_train=False),
        dict(
            type='GlobalRotScaleTrans',
            resize_lim=[1.0, 1.0],
            rot_lim=[0.0, 0.0],
            trans_lim=0.0,
            is_train=False),
        dict(
            type='LoadBEVSegmentation',
            dataset_root='/scratch/jmeng18/V2X-SIM/',
            xbound=[-100.0, 100.0, 1.0],
            ybound=[-100.0, 100.0, 1.0],
            classes=['drivable_area', 'ped_crossing', 'walkway']),
        dict(
            type='PointsRangeFilter',
            point_cloud_range=[-102.4, -102.4, -10.0, 102.4, 102.4, 6.0]),
        dict(
            type='ImageNormalize',
            mean=[0.485, 0.456, 0.406],
            std=[0.229, 0.224, 0.225]),
        dict(type='DefaultFormatBundle3D', classes=['car']),
        dict(
            type='Collect3D',
            keys=[
                'img', 'points', 'gt_bboxes_3d', 'gt_labels_3d', 'gt_masks_bev'
            ],
            meta_keys=[
                'camera_intrinsics', 'camera2ego', 'lidar2ego', 'lidar2camera',
                'camera2lidar', 'lidar2image', 'img_aug_matrix',
                'lidar_aug_matrix'
            ]),
        dict(type='GTDepth', keyframe_only=True)
    ])
model = dict(
    type='BEVFusion',
    heads=dict(
        object=None,
        map=dict(
            type='BEVSegmentationHead',
            in_channels=256,
            grid_transform=dict(
                input_scope=[[-102.4, 102.4, 1.6], [-102.4, 102.4, 1.6]],
                output_scope=[[-100, 100, 1.0], [-100, 100, 1.0]]),
            classes=['drivable_area', 'ped_crossing', 'walkway'],
            loss='focal')),
    encoders=dict(
        lidar=None,
        camera=dict(
            backbone=dict(
                type='SwinTransformer',
                embed_dims=96,
                depths=[2, 2, 6, 2],
                num_heads=[3, 6, 12, 24],
                window_size=7,
                mlp_ratio=4,
                qkv_bias=True,
                qk_scale=None,
                drop_rate=0.0,
                attn_drop_rate=0.0,
                drop_path_rate=0.3,
                patch_norm=True,
                out_indices=[1, 2, 3],
                with_cp=False,
                convert_weights=True,
                init_cfg=dict(
                    type='Pretrained',
                    checkpoint=
                    'https://github.com/SwinTransformer/storage/releases/download/v1.0.0/swin_tiny_patch4_window7_224.pth'
                )),
            neck=dict(
                type='GeneralizedLSSFPN',
                in_channels=[192, 384, 768],
                out_channels=256,
                start_level=0,
                num_outs=3,
                norm_cfg=dict(type='BN2d', requires_grad=True),
                act_cfg=dict(type='ReLU', inplace=True),
                upsample_cfg=dict(mode='bilinear', align_corners=False)),
            vtransform=dict(
                type='LSSTransform',
                in_channels=256,
                out_channels=80,
                image_size=[256, 704],
                feature_size=[32, 88],
                xbound=[-51.2, 51.2, 0.4],
                ybound=[-51.2, 51.2, 0.4],
                zbound=[-10.0, 10.0, 20.0],
                dbound=[1.0, 60.0, 0.5],
                downsample=2)),
        infra=dict(
            backbone=dict(
                type='SwinTransformer',
                embed_dims=96,
                depths=[2, 2, 6, 2],
                num_heads=[3, 6, 12, 24],
                window_size=7,
                mlp_ratio=4,
                qkv_bias=True,
                qk_scale=None,
                drop_rate=0.0,
                attn_drop_rate=0.0,
                drop_path_rate=0.3,
                patch_norm=True,
                out_indices=[1, 2, 3],
                with_cp=False,
                convert_weights=True,
                init_cfg=dict(
                    type='Pretrained',
                    checkpoint=
                    'https://github.com/SwinTransformer/storage/releases/download/v1.0.0/swin_tiny_patch4_window7_224.pth'
                )),
            neck=dict(
                type='GeneralizedLSSFPN',
                in_channels=[192, 384, 768],
                out_channels=256,
                start_level=0,
                num_outs=3,
                norm_cfg=dict(type='BN2d', requires_grad=True),
                act_cfg=dict(type='ReLU', inplace=True),
                upsample_cfg=dict(mode='bilinear', align_corners=False)),
            vtransform=dict(
                type='LSSTransform',
                in_channels=256,
                out_channels=80,
                image_size=[256, 704],
                feature_size=[32, 88],
                xbound=[-51.2, 51.2, 0.4],
                ybound=[-51.2, 51.2, 0.4],
                zbound=[-10.0, 10.0, 20.0],
                dbound=[1.0, 60.0, 0.5],
                downsample=2))),
    fuser=dict(type='ConvFuser', in_channels=[80, 80], out_channels=80),
    decoder=dict(
        backbone=dict(
            type='GeneralizedResNet',
            in_channels=80,
            blocks=[[2, 160, 2], [2, 320, 2], [2, 640, 1]]),
        neck=dict(
            type='LSSFPN',
            in_indices=[-1, 0],
            in_channels=[640, 160],
            out_channels=256,
            scale_factor=2)))
optimizer = dict(
    type='AdamW',
    lr=0.0001,
    weight_decay=0.01,
    paramwise_cfg=dict(
        custom_keys=dict(
            absolute_pos_embed=dict(decay_mult=0),
            relative_position_bias_table=dict(decay_mult=0))))
optimizer_config = dict(grad_clip=dict(max_norm=35, norm_type=2))
lr_config = dict(policy='cyclic')
momentum_config = dict(policy='cyclic')
run_dir = 'train_result_map_infra+onboard_camera_long_depth_vit'

2025-01-22 10:43:47,040 - mmdet3d - INFO - Set random seed to 0, deterministic mode: False
2025-01-22 10:43:55,647 - mmdet3d - INFO - load 349483 car database infos
2025-01-22 10:43:55,647 - mmdet3d - INFO - load 157002 bicycle database infos
2025-01-22 10:43:55,647 - mmdet3d - INFO - load 40210 motorcycle database infos
2025-01-22 10:43:55,647 - mmdet3d - INFO - load 16943 vehicle.emergency.police database infos
2025-01-22 10:43:56,513 - mmdet3d - INFO - After filter database:
2025-01-22 10:43:56,527 - mmdet3d - INFO - load 170227 car database infos
2025-01-22 10:43:56,529 - mmdet3d - INFO - load 157002 bicycle database infos
2025-01-22 10:43:56,530 - mmdet3d - INFO - load 40210 motorcycle database infos
2025-01-22 10:43:56,531 - mmdet3d - INFO - load 16943 vehicle.emergency.police database infos
2025-01-22 10:43:59,034 - mmdet3d - INFO - Model:
BEVFusion(
  (encoders): ModuleDict(
    (camera): ModuleDict(
      (backbone): SwinTransformer(
        (patch_embed): PatchEmbed(
          (adap_padding): AdaptivePadding()
          (projection): Conv2d(3, 96, kernel_size=(4, 4), stride=(4, 4))
          (norm): LayerNorm((96,), eps=1e-05, elementwise_affine=True)
        )
        (drop_after_pos): Dropout(p=0.0, inplace=False)
        (stages): ModuleList(
          (0): SwinBlockSequence(
            (blocks): ModuleList(
              (0): SwinBlock(
                (norm1): LayerNorm((96,), eps=1e-05, elementwise_affine=True)
                (attn): ShiftWindowMSA(
                  (w_msa): WindowMSA(
                    (qkv): Linear(in_features=96, out_features=288, bias=True)
                    (attn_drop): Dropout(p=0.0, inplace=False)
                    (proj): Linear(in_features=96, out_features=96, bias=True)
                    (proj_drop): Dropout(p=0.0, inplace=False)
                    (softmax): Softmax(dim=-1)
                  )
                  (drop): DropPath()
                )
                (norm2): LayerNorm((96,), eps=1e-05, elementwise_affine=True)
                (ffn): FFN(
                  (activate): GELU()
                  (layers): Sequential(
                    (0): Sequential(
                      (0): Linear(in_features=96, out_features=384, bias=True)
                      (1): GELU()
                      (2): Dropout(p=0.0, inplace=False)
                    )
                    (1): Linear(in_features=384, out_features=96, bias=True)
                    (2): Dropout(p=0.0, inplace=False)
                  )
                  (dropout_layer): DropPath()
                )
              )
              (1): SwinBlock(
                (norm1): LayerNorm((96,), eps=1e-05, elementwise_affine=True)
                (attn): ShiftWindowMSA(
                  (w_msa): WindowMSA(
                    (qkv): Linear(in_features=96, out_features=288, bias=True)
                    (attn_drop): Dropout(p=0.0, inplace=False)
                    (proj): Linear(in_features=96, out_features=96, bias=True)
                    (proj_drop): Dropout(p=0.0, inplace=False)
                    (softmax): Softmax(dim=-1)
                  )
                  (drop): DropPath()
                )
                (norm2): LayerNorm((96,), eps=1e-05, elementwise_affine=True)
                (ffn): FFN(
                  (activate): GELU()
                  (layers): Sequential(
                    (0): Sequential(
                      (0): Linear(in_features=96, out_features=384, bias=True)
                      (1): GELU()
                      (2): Dropout(p=0.0, inplace=False)
                    )
                    (1): Linear(in_features=384, out_features=96, bias=True)
                    (2): Dropout(p=0.0, inplace=False)
                  )
                  (dropout_layer): DropPath()
                )
              )
            )
            (downsample): PatchMerging(
              (adap_padding): AdaptivePadding()
              (sampler): Unfold(kernel_size=(2, 2), dilation=(1, 1), padding=(0, 0), stride=(2, 2))
              (norm): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
              (reduction): Linear(in_features=384, out_features=192, bias=False)
            )
          )
          (1): SwinBlockSequence(
            (blocks): ModuleList(
              (0): SwinBlock(
                (norm1): LayerNorm((192,), eps=1e-05, elementwise_affine=True)
                (attn): ShiftWindowMSA(
                  (w_msa): WindowMSA(
                    (qkv): Linear(in_features=192, out_features=576, bias=True)
                    (attn_drop): Dropout(p=0.0, inplace=False)
                    (proj): Linear(in_features=192, out_features=192, bias=True)
                    (proj_drop): Dropout(p=0.0, inplace=False)
                    (softmax): Softmax(dim=-1)
                  )
                  (drop): DropPath()
                )
                (norm2): LayerNorm((192,), eps=1e-05, elementwise_affine=True)
                (ffn): FFN(
                  (activate): GELU()
                  (layers): Sequential(
                    (0): Sequential(
                      (0): Linear(in_features=192, out_features=768, bias=True)
                      (1): GELU()
                      (2): Dropout(p=0.0, inplace=False)
                    )
                    (1): Linear(in_features=768, out_features=192, bias=True)
                    (2): Dropout(p=0.0, inplace=False)
                  )
                  (dropout_layer): DropPath()
                )
              )
              (1): SwinBlock(
                (norm1): LayerNorm((192,), eps=1e-05, elementwise_affine=True)
                (attn): ShiftWindowMSA(
                  (w_msa): WindowMSA(
                    (qkv): Linear(in_features=192, out_features=576, bias=True)
                    (attn_drop): Dropout(p=0.0, inplace=False)
                    (proj): Linear(in_features=192, out_features=192, bias=True)
                    (proj_drop): Dropout(p=0.0, inplace=False)
                    (softmax): Softmax(dim=-1)
                  )
                  (drop): DropPath()
                )
                (norm2): LayerNorm((192,), eps=1e-05, elementwise_affine=True)
                (ffn): FFN(
                  (activate): GELU()
                  (layers): Sequential(
                    (0): Sequential(
                      (0): Linear(in_features=192, out_features=768, bias=True)
                      (1): GELU()
                      (2): Dropout(p=0.0, inplace=False)
                    )
                    (1): Linear(in_features=768, out_features=192, bias=True)
                    (2): Dropout(p=0.0, inplace=False)
                  )
                  (dropout_layer): DropPath()
                )
              )
            )
            (downsample): PatchMerging(
              (adap_padding): AdaptivePadding()
              (sampler): Unfold(kernel_size=(2, 2), dilation=(1, 1), padding=(0, 0), stride=(2, 2))
              (norm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
              (reduction): Linear(in_features=768, out_features=384, bias=False)
            )
          )
          (2): SwinBlockSequence(
            (blocks): ModuleList(
              (0): SwinBlock(
                (norm1): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
                (attn): ShiftWindowMSA(
                  (w_msa): WindowMSA(
                    (qkv): Linear(in_features=384, out_features=1152, bias=True)
                    (attn_drop): Dropout(p=0.0, inplace=False)
                    (proj): Linear(in_features=384, out_features=384, bias=True)
                    (proj_drop): Dropout(p=0.0, inplace=False)
                    (softmax): Softmax(dim=-1)
                  )
                  (drop): DropPath()
                )
                (norm2): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
                (ffn): FFN(
                  (activate): GELU()
                  (layers): Sequential(
                    (0): Sequential(
                      (0): Linear(in_features=384, out_features=1536, bias=True)
                      (1): GELU()
                      (2): Dropout(p=0.0, inplace=False)
                    )
                    (1): Linear(in_features=1536, out_features=384, bias=True)
                    (2): Dropout(p=0.0, inplace=False)
                  )
                  (dropout_layer): DropPath()
                )
              )
              (1): SwinBlock(
                (norm1): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
                (attn): ShiftWindowMSA(
                  (w_msa): WindowMSA(
                    (qkv): Linear(in_features=384, out_features=1152, bias=True)
                    (attn_drop): Dropout(p=0.0, inplace=False)
                    (proj): Linear(in_features=384, out_features=384, bias=True)
                    (proj_drop): Dropout(p=0.0, inplace=False)
                    (softmax): Softmax(dim=-1)
                  )
                  (drop): DropPath()
                )
                (norm2): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
                (ffn): FFN(
                  (activate): GELU()
                  (layers): Sequential(
                    (0): Sequential(
                      (0): Linear(in_features=384, out_features=1536, bias=True)
                      (1): GELU()
                      (2): Dropout(p=0.0, inplace=False)
                    )
                    (1): Linear(in_features=1536, out_features=384, bias=True)
                    (2): Dropout(p=0.0, inplace=False)
                  )
                  (dropout_layer): DropPath()
                )
              )
              (2): SwinBlock(
                (norm1): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
                (attn): ShiftWindowMSA(
                  (w_msa): WindowMSA(
                    (qkv): Linear(in_features=384, out_features=1152, bias=True)
                    (attn_drop): Dropout(p=0.0, inplace=False)
                    (proj): Linear(in_features=384, out_features=384, bias=True)
                    (proj_drop): Dropout(p=0.0, inplace=False)
                    (softmax): Softmax(dim=-1)
                  )
                  (drop): DropPath()
                )
                (norm2): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
                (ffn): FFN(
                  (activate): GELU()
                  (layers): Sequential(
                    (0): Sequential(
                      (0): Linear(in_features=384, out_features=1536, bias=True)
                      (1): GELU()
                      (2): Dropout(p=0.0, inplace=False)
                    )
                    (1): Linear(in_features=1536, out_features=384, bias=True)
                    (2): Dropout(p=0.0, inplace=False)
                  )
                  (dropout_layer): DropPath()
                )
              )
              (3): SwinBlock(
                (norm1): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
                (attn): ShiftWindowMSA(
                  (w_msa): WindowMSA(
                    (qkv): Linear(in_features=384, out_features=1152, bias=True)
                    (attn_drop): Dropout(p=0.0, inplace=False)
                    (proj): Linear(in_features=384, out_features=384, bias=True)
                    (proj_drop): Dropout(p=0.0, inplace=False)
                    (softmax): Softmax(dim=-1)
                  )
                  (drop): DropPath()
                )
                (norm2): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
                (ffn): FFN(
                  (activate): GELU()
                  (layers): Sequential(
                    (0): Sequential(
                      (0): Linear(in_features=384, out_features=1536, bias=True)
                      (1): GELU()
                      (2): Dropout(p=0.0, inplace=False)
                    )
                    (1): Linear(in_features=1536, out_features=384, bias=True)
                    (2): Dropout(p=0.0, inplace=False)
                  )
                  (dropout_layer): DropPath()
                )
              )
              (4): SwinBlock(
                (norm1): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
                (attn): ShiftWindowMSA(
                  (w_msa): WindowMSA(
                    (qkv): Linear(in_features=384, out_features=1152, bias=True)
                    (attn_drop): Dropout(p=0.0, inplace=False)
                    (proj): Linear(in_features=384, out_features=384, bias=True)
                    (proj_drop): Dropout(p=0.0, inplace=False)
                    (softmax): Softmax(dim=-1)
                  )
                  (drop): DropPath()
                )
                (norm2): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
                (ffn): FFN(
                  (activate): GELU()
                  (layers): Sequential(
                    (0): Sequential(
                      (0): Linear(in_features=384, out_features=1536, bias=True)
                      (1): GELU()
                      (2): Dropout(p=0.0, inplace=False)
                    )
                    (1): Linear(in_features=1536, out_features=384, bias=True)
                    (2): Dropout(p=0.0, inplace=False)
                  )
                  (dropout_layer): DropPath()
                )
              )
              (5): SwinBlock(
                (norm1): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
                (attn): ShiftWindowMSA(
                  (w_msa): WindowMSA(
                    (qkv): Linear(in_features=384, out_features=1152, bias=True)
                    (attn_drop): Dropout(p=0.0, inplace=False)
                    (proj): Linear(in_features=384, out_features=384, bias=True)
                    (proj_drop): Dropout(p=0.0, inplace=False)
                    (softmax): Softmax(dim=-1)
                  )
                  (drop): DropPath()
                )
                (norm2): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
                (ffn): FFN(
                  (activate): GELU()
                  (layers): Sequential(
                    (0): Sequential(
                      (0): Linear(in_features=384, out_features=1536, bias=True)
                      (1): GELU()
                      (2): Dropout(p=0.0, inplace=False)
                    )
                    (1): Linear(in_features=1536, out_features=384, bias=True)
                    (2): Dropout(p=0.0, inplace=False)
                  )
                  (dropout_layer): DropPath()
                )
              )
            )
            (downsample): PatchMerging(
              (adap_padding): AdaptivePadding()
              (sampler): Unfold(kernel_size=(2, 2), dilation=(1, 1), padding=(0, 0), stride=(2, 2))
              (norm): LayerNorm((1536,), eps=1e-05, elementwise_affine=True)
              (reduction): Linear(in_features=1536, out_features=768, bias=False)
            )
          )
          (3): SwinBlockSequence(
            (blocks): ModuleList(
              (0): SwinBlock(
                (norm1): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
                (attn): ShiftWindowMSA(
                  (w_msa): WindowMSA(
                    (qkv): Linear(in_features=768, out_features=2304, bias=True)
                    (attn_drop): Dropout(p=0.0, inplace=False)
                    (proj): Linear(in_features=768, out_features=768, bias=True)
                    (proj_drop): Dropout(p=0.0, inplace=False)
                    (softmax): Softmax(dim=-1)
                  )
                  (drop): DropPath()
                )
                (norm2): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
                (ffn): FFN(
                  (activate): GELU()
                  (layers): Sequential(
                    (0): Sequential(
                      (0): Linear(in_features=768, out_features=3072, bias=True)
                      (1): GELU()
                      (2): Dropout(p=0.0, inplace=False)
                    )
                    (1): Linear(in_features=3072, out_features=768, bias=True)
                    (2): Dropout(p=0.0, inplace=False)
                  )
                  (dropout_layer): DropPath()
                )
              )
              (1): SwinBlock(
                (norm1): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
                (attn): ShiftWindowMSA(
                  (w_msa): WindowMSA(
                    (qkv): Linear(in_features=768, out_features=2304, bias=True)
                    (attn_drop): Dropout(p=0.0, inplace=False)
                    (proj): Linear(in_features=768, out_features=768, bias=True)
                    (proj_drop): Dropout(p=0.0, inplace=False)
                    (softmax): Softmax(dim=-1)
                  )
                  (drop): DropPath()
                )
                (norm2): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
                (ffn): FFN(
                  (activate): GELU()
                  (layers): Sequential(
                    (0): Sequential(
                      (0): Linear(in_features=768, out_features=3072, bias=True)
                      (1): GELU()
                      (2): Dropout(p=0.0, inplace=False)
                    )
                    (1): Linear(in_features=3072, out_features=768, bias=True)
                    (2): Dropout(p=0.0, inplace=False)
                  )
                  (dropout_layer): DropPath()
                )
              )
            )
          )
        )
        (norm1): LayerNorm((192,), eps=1e-05, elementwise_affine=True)
        (norm2): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
        (norm3): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
      )
      init_cfg={'type': 'Pretrained', 'checkpoint': 'https://github.com/SwinTransformer/storage/releases/download/v1.0.0/swin_tiny_patch4_window7_224.pth'}
      (neck): GeneralizedLSSFPN(
        (lateral_convs): ModuleList(
          (0): ConvModule(
            (conv): Conv2d(448, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (activate): ReLU(inplace=True)
          )
          (1): ConvModule(
            (conv): Conv2d(1152, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (activate): ReLU(inplace=True)
          )
        )
        (fpn_convs): ModuleList(
          (0): ConvModule(
            (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (activate): ReLU(inplace=True)
          )
          (1): ConvModule(
            (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (activate): ReLU(inplace=True)
          )
        )
      )
      (vtransform): LSSTransform(
        (depthnet): Sequential(
          (0): Conv2d(320, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
          (3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (4): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (5): ReLU(inplace=True)
          (6): Conv2d(256, 198, kernel_size=(1, 1), stride=(1, 1))
        )
        (dtransform): Sequential(
          (0): Conv2d(1, 8, kernel_size=(1, 1), stride=(1, 1))
          (1): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
          (3): Conv2d(8, 32, kernel_size=(5, 5), stride=(4, 4), padding=(2, 2))
          (4): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (5): ReLU(inplace=True)
          (6): Conv2d(32, 64, kernel_size=(5, 5), stride=(2, 2), padding=(2, 2))
          (7): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (8): ReLU(inplace=True)
        )
        (pyramid_depth_net): FCN(
          (backbone): IntermediateLayerGetter(
            (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
            (layer1): Sequential(
              (0): Bottleneck(
                (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (relu): ReLU(inplace=True)
                (downsample): Sequential(
                  (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                )
              )
              (1): Bottleneck(
                (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (relu): ReLU(inplace=True)
              )
              (2): Bottleneck(
                (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (relu): ReLU(inplace=True)
              )
            )
            (layer2): Sequential(
              (0): Bottleneck(
                (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (relu): ReLU(inplace=True)
                (downsample): Sequential(
                  (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
                  (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                )
              )
              (1): Bottleneck(
                (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (relu): ReLU(inplace=True)
              )
              (2): Bottleneck(
                (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (relu): ReLU(inplace=True)
              )
              (3): Bottleneck(
                (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (relu): ReLU(inplace=True)
              )
            )
            (layer3): Sequential(
              (0): Bottleneck(
                (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (relu): ReLU(inplace=True)
                (downsample): Sequential(
                  (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                )
              )
              (1): Bottleneck(
                (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
                (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (relu): ReLU(inplace=True)
              )
              (2): Bottleneck(
                (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
                (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (relu): ReLU(inplace=True)
              )
              (3): Bottleneck(
                (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
                (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (relu): ReLU(inplace=True)
              )
              (4): Bottleneck(
                (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
                (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (relu): ReLU(inplace=True)
              )
              (5): Bottleneck(
                (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
                (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (relu): ReLU(inplace=True)
              )
            )
            (layer4): Sequential(
              (0): Bottleneck(
                (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
                (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (relu): ReLU(inplace=True)
                (downsample): Sequential(
                  (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                )
              )
              (1): Bottleneck(
                (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(4, 4), dilation=(4, 4), bias=False)
                (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (relu): ReLU(inplace=True)
              )
              (2): Bottleneck(
                (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(4, 4), dilation=(4, 4), bias=False)
                (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (relu): ReLU(inplace=True)
              )
            )
          )
          (classifier): FCNHead(
            (0): Conv2d(2048, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU()
            (3): Dropout(p=0.1, inplace=False)
            (4): Conv2d(512, 21, kernel_size=(1, 1), stride=(1, 1))
          )
        )
        (conv): Conv2d(21, 1, kernel_size=(1, 1), stride=(1, 1))
        (downsample): Sequential(
          (0): Conv2d(80, 80, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (1): BatchNorm2d(80, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
          (3): Conv2d(80, 80, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
          (4): BatchNorm2d(80, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (5): ReLU(inplace=True)
          (6): Conv2d(80, 80, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (7): BatchNorm2d(80, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (8): ReLU(inplace=True)
        )
      )
    )
    (infra): ModuleDict(
      (backbone): SwinTransformer(
        (patch_embed): PatchEmbed(
          (adap_padding): AdaptivePadding()
          (projection): Conv2d(3, 96, kernel_size=(4, 4), stride=(4, 4))
          (norm): LayerNorm((96,), eps=1e-05, elementwise_affine=True)
        )
        (drop_after_pos): Dropout(p=0.0, inplace=False)
        (stages): ModuleList(
          (0): SwinBlockSequence(
            (blocks): ModuleList(
              (0): SwinBlock(
                (norm1): LayerNorm((96,), eps=1e-05, elementwise_affine=True)
                (attn): ShiftWindowMSA(
                  (w_msa): WindowMSA(
                    (qkv): Linear(in_features=96, out_features=288, bias=True)
                    (attn_drop): Dropout(p=0.0, inplace=False)
                    (proj): Linear(in_features=96, out_features=96, bias=True)
                    (proj_drop): Dropout(p=0.0, inplace=False)
                    (softmax): Softmax(dim=-1)
                  )
                  (drop): DropPath()
                )
                (norm2): LayerNorm((96,), eps=1e-05, elementwise_affine=True)
                (ffn): FFN(
                  (activate): GELU()
                  (layers): Sequential(
                    (0): Sequential(
                      (0): Linear(in_features=96, out_features=384, bias=True)
                      (1): GELU()
                      (2): Dropout(p=0.0, inplace=False)
                    )
                    (1): Linear(in_features=384, out_features=96, bias=True)
                    (2): Dropout(p=0.0, inplace=False)
                  )
                  (dropout_layer): DropPath()
                )
              )
              (1): SwinBlock(
                (norm1): LayerNorm((96,), eps=1e-05, elementwise_affine=True)
                (attn): ShiftWindowMSA(
                  (w_msa): WindowMSA(
                    (qkv): Linear(in_features=96, out_features=288, bias=True)
                    (attn_drop): Dropout(p=0.0, inplace=False)
                    (proj): Linear(in_features=96, out_features=96, bias=True)
                    (proj_drop): Dropout(p=0.0, inplace=False)
                    (softmax): Softmax(dim=-1)
                  )
                  (drop): DropPath()
                )
                (norm2): LayerNorm((96,), eps=1e-05, elementwise_affine=True)
                (ffn): FFN(
                  (activate): GELU()
                  (layers): Sequential(
                    (0): Sequential(
                      (0): Linear(in_features=96, out_features=384, bias=True)
                      (1): GELU()
                      (2): Dropout(p=0.0, inplace=False)
                    )
                    (1): Linear(in_features=384, out_features=96, bias=True)
                    (2): Dropout(p=0.0, inplace=False)
                  )
                  (dropout_layer): DropPath()
                )
              )
            )
            (downsample): PatchMerging(
              (adap_padding): AdaptivePadding()
              (sampler): Unfold(kernel_size=(2, 2), dilation=(1, 1), padding=(0, 0), stride=(2, 2))
              (norm): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
              (reduction): Linear(in_features=384, out_features=192, bias=False)
            )
          )
          (1): SwinBlockSequence(
            (blocks): ModuleList(
              (0): SwinBlock(
                (norm1): LayerNorm((192,), eps=1e-05, elementwise_affine=True)
                (attn): ShiftWindowMSA(
                  (w_msa): WindowMSA(
                    (qkv): Linear(in_features=192, out_features=576, bias=True)
                    (attn_drop): Dropout(p=0.0, inplace=False)
                    (proj): Linear(in_features=192, out_features=192, bias=True)
                    (proj_drop): Dropout(p=0.0, inplace=False)
                    (softmax): Softmax(dim=-1)
                  )
                  (drop): DropPath()
                )
                (norm2): LayerNorm((192,), eps=1e-05, elementwise_affine=True)
                (ffn): FFN(
                  (activate): GELU()
                  (layers): Sequential(
                    (0): Sequential(
                      (0): Linear(in_features=192, out_features=768, bias=True)
                      (1): GELU()
                      (2): Dropout(p=0.0, inplace=False)
                    )
                    (1): Linear(in_features=768, out_features=192, bias=True)
                    (2): Dropout(p=0.0, inplace=False)
                  )
                  (dropout_layer): DropPath()
                )
              )
              (1): SwinBlock(
                (norm1): LayerNorm((192,), eps=1e-05, elementwise_affine=True)
                (attn): ShiftWindowMSA(
                  (w_msa): WindowMSA(
                    (qkv): Linear(in_features=192, out_features=576, bias=True)
                    (attn_drop): Dropout(p=0.0, inplace=False)
                    (proj): Linear(in_features=192, out_features=192, bias=True)
                    (proj_drop): Dropout(p=0.0, inplace=False)
                    (softmax): Softmax(dim=-1)
                  )
                  (drop): DropPath()
                )
                (norm2): LayerNorm((192,), eps=1e-05, elementwise_affine=True)
                (ffn): FFN(
                  (activate): GELU()
                  (layers): Sequential(
                    (0): Sequential(
                      (0): Linear(in_features=192, out_features=768, bias=True)
                      (1): GELU()
                      (2): Dropout(p=0.0, inplace=False)
                    )
                    (1): Linear(in_features=768, out_features=192, bias=True)
                    (2): Dropout(p=0.0, inplace=False)
                  )
                  (dropout_layer): DropPath()
                )
              )
            )
            (downsample): PatchMerging(
              (adap_padding): AdaptivePadding()
              (sampler): Unfold(kernel_size=(2, 2), dilation=(1, 1), padding=(0, 0), stride=(2, 2))
              (norm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
              (reduction): Linear(in_features=768, out_features=384, bias=False)
            )
          )
          (2): SwinBlockSequence(
            (blocks): ModuleList(
              (0): SwinBlock(
                (norm1): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
                (attn): ShiftWindowMSA(
                  (w_msa): WindowMSA(
                    (qkv): Linear(in_features=384, out_features=1152, bias=True)
                    (attn_drop): Dropout(p=0.0, inplace=False)
                    (proj): Linear(in_features=384, out_features=384, bias=True)
                    (proj_drop): Dropout(p=0.0, inplace=False)
                    (softmax): Softmax(dim=-1)
                  )
                  (drop): DropPath()
                )
                (norm2): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
                (ffn): FFN(
                  (activate): GELU()
                  (layers): Sequential(
                    (0): Sequential(
                      (0): Linear(in_features=384, out_features=1536, bias=True)
                      (1): GELU()
                      (2): Dropout(p=0.0, inplace=False)
                    )
                    (1): Linear(in_features=1536, out_features=384, bias=True)
                    (2): Dropout(p=0.0, inplace=False)
                  )
                  (dropout_layer): DropPath()
                )
              )
              (1): SwinBlock(
                (norm1): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
                (attn): ShiftWindowMSA(
                  (w_msa): WindowMSA(
                    (qkv): Linear(in_features=384, out_features=1152, bias=True)
                    (attn_drop): Dropout(p=0.0, inplace=False)
                    (proj): Linear(in_features=384, out_features=384, bias=True)
                    (proj_drop): Dropout(p=0.0, inplace=False)
                    (softmax): Softmax(dim=-1)
                  )
                  (drop): DropPath()
                )
                (norm2): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
                (ffn): FFN(
                  (activate): GELU()
                  (layers): Sequential(
                    (0): Sequential(
                      (0): Linear(in_features=384, out_features=1536, bias=True)
                      (1): GELU()
                      (2): Dropout(p=0.0, inplace=False)
                    )
                    (1): Linear(in_features=1536, out_features=384, bias=True)
                    (2): Dropout(p=0.0, inplace=False)
                  )
                  (dropout_layer): DropPath()
                )
              )
              (2): SwinBlock(
                (norm1): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
                (attn): ShiftWindowMSA(
                  (w_msa): WindowMSA(
                    (qkv): Linear(in_features=384, out_features=1152, bias=True)
                    (attn_drop): Dropout(p=0.0, inplace=False)
                    (proj): Linear(in_features=384, out_features=384, bias=True)
                    (proj_drop): Dropout(p=0.0, inplace=False)
                    (softmax): Softmax(dim=-1)
                  )
                  (drop): DropPath()
                )
                (norm2): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
                (ffn): FFN(
                  (activate): GELU()
                  (layers): Sequential(
                    (0): Sequential(
                      (0): Linear(in_features=384, out_features=1536, bias=True)
                      (1): GELU()
                      (2): Dropout(p=0.0, inplace=False)
                    )
                    (1): Linear(in_features=1536, out_features=384, bias=True)
                    (2): Dropout(p=0.0, inplace=False)
                  )
                  (dropout_layer): DropPath()
                )
              )
              (3): SwinBlock(
                (norm1): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
                (attn): ShiftWindowMSA(
                  (w_msa): WindowMSA(
                    (qkv): Linear(in_features=384, out_features=1152, bias=True)
                    (attn_drop): Dropout(p=0.0, inplace=False)
                    (proj): Linear(in_features=384, out_features=384, bias=True)
                    (proj_drop): Dropout(p=0.0, inplace=False)
                    (softmax): Softmax(dim=-1)
                  )
                  (drop): DropPath()
                )
                (norm2): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
                (ffn): FFN(
                  (activate): GELU()
                  (layers): Sequential(
                    (0): Sequential(
                      (0): Linear(in_features=384, out_features=1536, bias=True)
                      (1): GELU()
                      (2): Dropout(p=0.0, inplace=False)
                    )
                    (1): Linear(in_features=1536, out_features=384, bias=True)
                    (2): Dropout(p=0.0, inplace=False)
                  )
                  (dropout_layer): DropPath()
                )
              )
              (4): SwinBlock(
                (norm1): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
                (attn): ShiftWindowMSA(
                  (w_msa): WindowMSA(
                    (qkv): Linear(in_features=384, out_features=1152, bias=True)
                    (attn_drop): Dropout(p=0.0, inplace=False)
                    (proj): Linear(in_features=384, out_features=384, bias=True)
                    (proj_drop): Dropout(p=0.0, inplace=False)
                    (softmax): Softmax(dim=-1)
                  )
                  (drop): DropPath()
                )
                (norm2): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
                (ffn): FFN(
                  (activate): GELU()
                  (layers): Sequential(
                    (0): Sequential(
                      (0): Linear(in_features=384, out_features=1536, bias=True)
                      (1): GELU()
                      (2): Dropout(p=0.0, inplace=False)
                    )
                    (1): Linear(in_features=1536, out_features=384, bias=True)
                    (2): Dropout(p=0.0, inplace=False)
                  )
                  (dropout_layer): DropPath()
                )
              )
              (5): SwinBlock(
                (norm1): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
                (attn): ShiftWindowMSA(
                  (w_msa): WindowMSA(
                    (qkv): Linear(in_features=384, out_features=1152, bias=True)
                    (attn_drop): Dropout(p=0.0, inplace=False)
                    (proj): Linear(in_features=384, out_features=384, bias=True)
                    (proj_drop): Dropout(p=0.0, inplace=False)
                    (softmax): Softmax(dim=-1)
                  )
                  (drop): DropPath()
                )
                (norm2): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
                (ffn): FFN(
                  (activate): GELU()
                  (layers): Sequential(
                    (0): Sequential(
                      (0): Linear(in_features=384, out_features=1536, bias=True)
                      (1): GELU()
                      (2): Dropout(p=0.0, inplace=False)
                    )
                    (1): Linear(in_features=1536, out_features=384, bias=True)
                    (2): Dropout(p=0.0, inplace=False)
                  )
                  (dropout_layer): DropPath()
                )
              )
            )
            (downsample): PatchMerging(
              (adap_padding): AdaptivePadding()
              (sampler): Unfold(kernel_size=(2, 2), dilation=(1, 1), padding=(0, 0), stride=(2, 2))
              (norm): LayerNorm((1536,), eps=1e-05, elementwise_affine=True)
              (reduction): Linear(in_features=1536, out_features=768, bias=False)
            )
          )
          (3): SwinBlockSequence(
            (blocks): ModuleList(
              (0): SwinBlock(
                (norm1): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
                (attn): ShiftWindowMSA(
                  (w_msa): WindowMSA(
                    (qkv): Linear(in_features=768, out_features=2304, bias=True)
                    (attn_drop): Dropout(p=0.0, inplace=False)
                    (proj): Linear(in_features=768, out_features=768, bias=True)
                    (proj_drop): Dropout(p=0.0, inplace=False)
                    (softmax): Softmax(dim=-1)
                  )
                  (drop): DropPath()
                )
                (norm2): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
                (ffn): FFN(
                  (activate): GELU()
                  (layers): Sequential(
                    (0): Sequential(
                      (0): Linear(in_features=768, out_features=3072, bias=True)
                      (1): GELU()
                      (2): Dropout(p=0.0, inplace=False)
                    )
                    (1): Linear(in_features=3072, out_features=768, bias=True)
                    (2): Dropout(p=0.0, inplace=False)
                  )
                  (dropout_layer): DropPath()
                )
              )
              (1): SwinBlock(
                (norm1): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
                (attn): ShiftWindowMSA(
                  (w_msa): WindowMSA(
                    (qkv): Linear(in_features=768, out_features=2304, bias=True)
                    (attn_drop): Dropout(p=0.0, inplace=False)
                    (proj): Linear(in_features=768, out_features=768, bias=True)
                    (proj_drop): Dropout(p=0.0, inplace=False)
                    (softmax): Softmax(dim=-1)
                  )
                  (drop): DropPath()
                )
                (norm2): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
                (ffn): FFN(
                  (activate): GELU()
                  (layers): Sequential(
                    (0): Sequential(
                      (0): Linear(in_features=768, out_features=3072, bias=True)
                      (1): GELU()
                      (2): Dropout(p=0.0, inplace=False)
                    )
                    (1): Linear(in_features=3072, out_features=768, bias=True)
                    (2): Dropout(p=0.0, inplace=False)
                  )
                  (dropout_layer): DropPath()
                )
              )
            )
          )
        )
        (norm1): LayerNorm((192,), eps=1e-05, elementwise_affine=True)
        (norm2): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
        (norm3): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
      )
      init_cfg={'type': 'Pretrained', 'checkpoint': 'https://github.com/SwinTransformer/storage/releases/download/v1.0.0/swin_tiny_patch4_window7_224.pth'}
      (neck): GeneralizedLSSFPN(
        (lateral_convs): ModuleList(
          (0): ConvModule(
            (conv): Conv2d(448, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (activate): ReLU(inplace=True)
          )
          (1): ConvModule(
            (conv): Conv2d(1152, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (activate): ReLU(inplace=True)
          )
        )
        (fpn_convs): ModuleList(
          (0): ConvModule(
            (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (activate): ReLU(inplace=True)
          )
          (1): ConvModule(
            (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (activate): ReLU(inplace=True)
          )
        )
      )
      (vtransform): LSSTransform(
        (depthnet): Sequential(
          (0): Conv2d(320, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
          (3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (4): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (5): ReLU(inplace=True)
          (6): Conv2d(256, 198, kernel_size=(1, 1), stride=(1, 1))
        )
        (dtransform): Sequential(
          (0): Conv2d(1, 8, kernel_size=(1, 1), stride=(1, 1))
          (1): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
          (3): Conv2d(8, 32, kernel_size=(5, 5), stride=(4, 4), padding=(2, 2))
          (4): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (5): ReLU(inplace=True)
          (6): Conv2d(32, 64, kernel_size=(5, 5), stride=(2, 2), padding=(2, 2))
          (7): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (8): ReLU(inplace=True)
        )
        (pyramid_depth_net): FCN(
          (backbone): IntermediateLayerGetter(
            (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
            (layer1): Sequential(
              (0): Bottleneck(
                (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (relu): ReLU(inplace=True)
                (downsample): Sequential(
                  (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                )
              )
              (1): Bottleneck(
                (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (relu): ReLU(inplace=True)
              )
              (2): Bottleneck(
                (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (relu): ReLU(inplace=True)
              )
            )
            (layer2): Sequential(
              (0): Bottleneck(
                (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (relu): ReLU(inplace=True)
                (downsample): Sequential(
                  (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
                  (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                )
              )
              (1): Bottleneck(
                (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (relu): ReLU(inplace=True)
              )
              (2): Bottleneck(
                (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (relu): ReLU(inplace=True)
              )
              (3): Bottleneck(
                (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (relu): ReLU(inplace=True)
              )
            )
            (layer3): Sequential(
              (0): Bottleneck(
                (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (relu): ReLU(inplace=True)
                (downsample): Sequential(
                  (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                )
              )
              (1): Bottleneck(
                (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
                (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (relu): ReLU(inplace=True)
              )
              (2): Bottleneck(
                (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
                (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (relu): ReLU(inplace=True)
              )
              (3): Bottleneck(
                (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
                (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (relu): ReLU(inplace=True)
              )
              (4): Bottleneck(
                (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
                (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (relu): ReLU(inplace=True)
              )
              (5): Bottleneck(
                (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
                (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (relu): ReLU(inplace=True)
              )
            )
            (layer4): Sequential(
              (0): Bottleneck(
                (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
                (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (relu): ReLU(inplace=True)
                (downsample): Sequential(
                  (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                )
              )
              (1): Bottleneck(
                (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(4, 4), dilation=(4, 4), bias=False)
                (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (relu): ReLU(inplace=True)
              )
              (2): Bottleneck(
                (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(4, 4), dilation=(4, 4), bias=False)
                (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (relu): ReLU(inplace=True)
              )
            )
          )
          (classifier): FCNHead(
            (0): Conv2d(2048, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU()
            (3): Dropout(p=0.1, inplace=False)
            (4): Conv2d(512, 21, kernel_size=(1, 1), stride=(1, 1))
          )
        )
        (conv): Conv2d(21, 1, kernel_size=(1, 1), stride=(1, 1))
        (downsample): Sequential(
          (0): Conv2d(80, 80, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (1): BatchNorm2d(80, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
          (3): Conv2d(80, 80, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
          (4): BatchNorm2d(80, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (5): ReLU(inplace=True)
          (6): Conv2d(80, 80, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (7): BatchNorm2d(80, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (8): ReLU(inplace=True)
        )
      )
    )
  )
  (input_cross_transformer): TransformerEncoder(
    (layers): ModuleList(
      (0): EncoderBlock(
        (self_attn): MultiheadAttention(
          (qkv_proj): Linear(in_features=128, out_features=384, bias=True)
          (o_proj): Linear(in_features=128, out_features=128, bias=True)
          (patch_in): PatchEmbedding(
            (proj): Conv2d(3, 128, kernel_size=(8, 8), stride=(8, 8))
          )
          (patch_pe): PatchEmbedding(
            (proj): Conv2d(256, 128, kernel_size=(8, 8), stride=(8, 8))
          )
        )
        (linear_net): Sequential(
          (0): Linear(in_features=128, out_features=384, bias=True)
          (1): ReLU()
          (2): Linear(in_features=384, out_features=384, bias=True)
          (3): ReLU()
          (4): Linear(in_features=384, out_features=128, bias=True)
        )
        (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
        (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
        (dropout): Dropout(p=0.0, inplace=False)
        (patch): PatchEmbedding(
          (proj): Conv2d(3, 128, kernel_size=(8, 8), stride=(8, 8))
        )
      )
    )
  )
  (input_cross_transformer_infra): TransformerEncoder(
    (layers): ModuleList(
      (0): EncoderBlock(
        (self_attn): MultiheadAttention(
          (qkv_proj): Linear(in_features=128, out_features=384, bias=True)
          (o_proj): Linear(in_features=128, out_features=128, bias=True)
          (patch_in): PatchEmbedding(
            (proj): Conv2d(3, 128, kernel_size=(8, 8), stride=(8, 8))
          )
          (patch_pe): PatchEmbedding(
            (proj): Conv2d(256, 128, kernel_size=(8, 8), stride=(8, 8))
          )
        )
        (linear_net): Sequential(
          (0): Linear(in_features=128, out_features=384, bias=True)
          (1): ReLU()
          (2): Linear(in_features=384, out_features=384, bias=True)
          (3): ReLU()
          (4): Linear(in_features=384, out_features=128, bias=True)
        )
        (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
        (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
        (dropout): Dropout(p=0.0, inplace=False)
        (patch): PatchEmbedding(
          (proj): Conv2d(3, 128, kernel_size=(8, 8), stride=(8, 8))
        )
      )
    )
  )
  (seg_model): MCnet(
    (model): Sequential(
      (0): Focus(
        (conv): Conv(
          (conv): Conv2d(12, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): Hardswish()
        )
      )
      (1): Conv(
        (conv): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): Hardswish()
      )
      (2): BottleneckCSP(
        (cv1): Conv(
          (conv): Conv2d(64, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): Hardswish()
        )
        (cv2): Conv2d(64, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (cv3): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (cv4): Conv(
          (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): Hardswish()
        )
        (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): LeakyReLU(negative_slope=0.1, inplace=True)
        (m): Sequential(
          (0): Bottleneck(
            (cv1): Conv(
              (conv): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): Hardswish()
            )
            (cv2): Conv(
              (conv): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): Hardswish()
            )
          )
        )
      )
      (3): Conv(
        (conv): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): Hardswish()
      )
      (4): BottleneckCSP(
        (cv1): Conv(
          (conv): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): Hardswish()
        )
        (cv2): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (cv3): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (cv4): Conv(
          (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): Hardswish()
        )
        (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): LeakyReLU(negative_slope=0.1, inplace=True)
        (m): Sequential(
          (0): Bottleneck(
            (cv1): Conv(
              (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): Hardswish()
            )
            (cv2): Conv(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): Hardswish()
            )
          )
          (1): Bottleneck(
            (cv1): Conv(
              (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): Hardswish()
            )
            (cv2): Conv(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): Hardswish()
            )
          )
          (2): Bottleneck(
            (cv1): Conv(
              (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): Hardswish()
            )
            (cv2): Conv(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): Hardswish()
            )
          )
        )
      )
      (5): Conv(
        (conv): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): Hardswish()
      )
      (6): BottleneckCSP(
        (cv1): Conv(
          (conv): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): Hardswish()
        )
        (cv2): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (cv3): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (cv4): Conv(
          (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): Hardswish()
        )
        (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): LeakyReLU(negative_slope=0.1, inplace=True)
        (m): Sequential(
          (0): Bottleneck(
            (cv1): Conv(
              (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): Hardswish()
            )
            (cv2): Conv(
              (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): Hardswish()
            )
          )
          (1): Bottleneck(
            (cv1): Conv(
              (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): Hardswish()
            )
            (cv2): Conv(
              (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): Hardswish()
            )
          )
          (2): Bottleneck(
            (cv1): Conv(
              (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): Hardswish()
            )
            (cv2): Conv(
              (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): Hardswish()
            )
          )
        )
      )
      (7): Conv(
        (conv): Conv2d(256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn): BatchNorm2d(512, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): Hardswish()
      )
      (8): SPP(
        (cv1): Conv(
          (conv): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): Hardswish()
        )
        (cv2): Conv(
          (conv): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(512, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): Hardswish()
        )
        (m): ModuleList(
          (0): MaxPool2d(kernel_size=5, stride=1, padding=2, dilation=1, ceil_mode=False)
          (1): MaxPool2d(kernel_size=9, stride=1, padding=4, dilation=1, ceil_mode=False)
          (2): MaxPool2d(kernel_size=13, stride=1, padding=6, dilation=1, ceil_mode=False)
        )
      )
      (9): BottleneckCSP(
        (cv1): Conv(
          (conv): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): Hardswish()
        )
        (cv2): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (cv3): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (cv4): Conv(
          (conv): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(512, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): Hardswish()
        )
        (bn): BatchNorm2d(512, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): LeakyReLU(negative_slope=0.1, inplace=True)
        (m): Sequential(
          (0): Bottleneck(
            (cv1): Conv(
              (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): Hardswish()
            )
            (cv2): Conv(
              (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): Hardswish()
            )
          )
        )
      )
      (10): Conv(
        (conv): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): Hardswish()
      )
      (11): Upsample(scale_factor=2.0, mode=nearest)
      (12): Concat()
      (13): BottleneckCSP(
        (cv1): Conv(
          (conv): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): Hardswish()
        )
        (cv2): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (cv3): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (cv4): Conv(
          (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): Hardswish()
        )
        (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): LeakyReLU(negative_slope=0.1, inplace=True)
        (m): Sequential(
          (0): Bottleneck(
            (cv1): Conv(
              (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): Hardswish()
            )
            (cv2): Conv(
              (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): Hardswish()
            )
          )
        )
      )
      (14): Conv(
        (conv): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): Hardswish()
      )
      (15): Upsample(scale_factor=2.0, mode=nearest)
      (16): Concat()
      (17): BottleneckCSP(
        (cv1): Conv(
          (conv): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): Hardswish()
        )
        (cv2): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (cv3): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (cv4): Conv(
          (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): Hardswish()
        )
        (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): LeakyReLU(negative_slope=0.1, inplace=True)
        (m): Sequential(
          (0): Bottleneck(
            (cv1): Conv(
              (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): Hardswish()
            )
            (cv2): Conv(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): Hardswish()
            )
          )
        )
      )
      (18): Conv(
        (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): Hardswish()
      )
      (19): Concat()
      (20): BottleneckCSP(
        (cv1): Conv(
          (conv): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): Hardswish()
        )
        (cv2): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (cv3): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (cv4): Conv(
          (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): Hardswish()
        )
        (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): LeakyReLU(negative_slope=0.1, inplace=True)
        (m): Sequential(
          (0): Bottleneck(
            (cv1): Conv(
              (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): Hardswish()
            )
            (cv2): Conv(
              (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): Hardswish()
            )
          )
        )
      )
      (21): Conv(
        (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): Hardswish()
      )
      (22): Concat()
      (23): BottleneckCSP(
        (cv1): Conv(
          (conv): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): Hardswish()
        )
        (cv2): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (cv3): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (cv4): Conv(
          (conv): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(512, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): Hardswish()
        )
        (bn): BatchNorm2d(512, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): LeakyReLU(negative_slope=0.1, inplace=True)
        (m): Sequential(
          (0): Bottleneck(
            (cv1): Conv(
              (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): Hardswish()
            )
            (cv2): Conv(
              (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): Hardswish()
            )
          )
        )
      )
      (24): Detect(
        (m): ModuleList(
          (0): Conv2d(128, 18, kernel_size=(1, 1), stride=(1, 1))
          (1): Conv2d(256, 18, kernel_size=(1, 1), stride=(1, 1))
          (2): Conv2d(512, 18, kernel_size=(1, 1), stride=(1, 1))
        )
      )
      (25): Conv(
        (conv): Conv2d(256, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): Hardswish()
      )
      (26): Upsample(scale_factor=2.0, mode=nearest)
      (27): BottleneckCSP(
        (cv1): Conv(
          (conv): Conv2d(128, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): Hardswish()
        )
        (cv2): Conv2d(128, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (cv3): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (cv4): Conv(
          (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): Hardswish()
        )
        (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): LeakyReLU(negative_slope=0.1, inplace=True)
        (m): Sequential(
          (0): Bottleneck(
            (cv1): Conv(
              (conv): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): Hardswish()
            )
            (cv2): Conv(
              (conv): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): Hardswish()
            )
          )
        )
      )
      (28): Conv(
        (conv): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): Hardswish()
      )
      (29): Upsample(scale_factor=2.0, mode=nearest)
      (30): Conv(
        (conv): Conv2d(32, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn): BatchNorm2d(16, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): Hardswish()
      )
      (31): BottleneckCSP(
        (cv1): Conv(
          (conv): Conv2d(16, 4, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(4, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): Hardswish()
        )
        (cv2): Conv2d(16, 4, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (cv3): Conv2d(4, 4, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (cv4): Conv(
          (conv): Conv2d(8, 8, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(8, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): Hardswish()
        )
        (bn): BatchNorm2d(8, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): LeakyReLU(negative_slope=0.1, inplace=True)
        (m): Sequential(
          (0): Bottleneck(
            (cv1): Conv(
              (conv): Conv2d(4, 4, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(4, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): Hardswish()
            )
            (cv2): Conv(
              (conv): Conv2d(4, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn): BatchNorm2d(4, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): Hardswish()
            )
          )
        )
      )
      (32): Upsample(scale_factor=2.0, mode=nearest)
      (33): Conv(
        (conv): Conv2d(8, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn): BatchNorm2d(2, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): Hardswish()
      )
      (34): Conv(
        (conv): Conv2d(256, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): Hardswish()
      )
      (35): Upsample(scale_factor=2.0, mode=nearest)
      (36): BottleneckCSP(
        (cv1): Conv(
          (conv): Conv2d(128, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): Hardswish()
        )
        (cv2): Conv2d(128, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (cv3): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (cv4): Conv(
          (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): Hardswish()
        )
        (bn): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): LeakyReLU(negative_slope=0.1, inplace=True)
        (m): Sequential(
          (0): Bottleneck(
            (cv1): Conv(
              (conv): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): Hardswish()
            )
            (cv2): Conv(
              (conv): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): Hardswish()
            )
          )
        )
      )
      (37): Conv(
        (conv): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn): BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): Hardswish()
      )
      (38): Upsample(scale_factor=2.0, mode=nearest)
      (39): Conv(
        (conv): Conv2d(32, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn): BatchNorm2d(16, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): Hardswish()
      )
      (40): BottleneckCSP(
        (cv1): Conv(
          (conv): Conv2d(16, 4, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(4, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): Hardswish()
        )
        (cv2): Conv2d(16, 4, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (cv3): Conv2d(4, 4, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (cv4): Conv(
          (conv): Conv2d(8, 8, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(8, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
          (act): Hardswish()
        )
        (bn): BatchNorm2d(8, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): LeakyReLU(negative_slope=0.1, inplace=True)
        (m): Sequential(
          (0): Bottleneck(
            (cv1): Conv(
              (conv): Conv2d(4, 4, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(4, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): Hardswish()
            )
            (cv2): Conv(
              (conv): Conv2d(4, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn): BatchNorm2d(4, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (act): Hardswish()
            )
          )
        )
      )
      (41): Upsample(scale_factor=2.0, mode=nearest)
      (42): Conv(
        (conv): Conv2d(8, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn): BatchNorm2d(2, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
        (act): Hardswish()
      )
    )
  )
  (fuser): ConvFuser(
    (0): Conv2d(160, 80, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(80, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): ReLU(inplace=True)
  )
  (decoder): ModuleDict(
    (backbone): GeneralizedResNet(
      (0): Sequential(
        (0): BasicBlock(
          (conv1): Conv2d(80, 160, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
          (bn1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (conv2): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (downsample): Sequential(
            (0): Conv2d(80, 160, kernel_size=(1, 1), stride=(2, 2), bias=False)
            (1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): BasicBlock(
          (conv1): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (conv2): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): Sequential(
        (0): BasicBlock(
          (conv1): Conv2d(160, 320, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
          (bn1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (conv2): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (downsample): Sequential(
            (0): Conv2d(160, 320, kernel_size=(1, 1), stride=(2, 2), bias=False)
            (1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): BasicBlock(
          (conv1): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (conv2): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (2): Sequential(
        (0): BasicBlock(
          (conv1): Conv2d(320, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (conv2): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (downsample): Sequential(
            (0): Conv2d(320, 640, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): BasicBlock(
          (conv1): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (conv2): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (neck): LSSFPN(
      (fuse): Sequential(
        (0): Conv2d(800, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
        (3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (4): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (5): ReLU(inplace=True)
      )
      (upsample): Sequential(
        (0): Upsample(scale_factor=2.0, mode=bilinear)
        (1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (3): ReLU(inplace=True)
      )
    )
  )
  (heads): ModuleDict(
    (map): BEVSegmentationHead(
      (transform): BEVGridTransform()
      (classifier): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
        (3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (4): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (5): ReLU(inplace=True)
        (6): Conv2d(256, 3, kernel_size=(1, 1), stride=(1, 1))
      )
    )
  )
)
2025-01-22 10:44:03,238 - mmdet3d - INFO - Start running, host: jmeng18@sg015, work_dir: /home/jmeng18/bev_fusion/bevfusion-beliv/train_result_map_infra+onboard_camera_long_depth_vit
2025-01-22 10:44:03,239 - mmdet3d - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) CyclicLrUpdaterHook                
(HIGH        ) CyclicMomentumUpdaterHook          
(ABOVE_NORMAL) Fp16OptimizerHook                  
(NORMAL      ) CheckpointHook                     
(NORMAL      ) DistEvalHook                       
(VERY_LOW    ) TextLoggerHook                     
(VERY_LOW    ) TensorboardLoggerHook              
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) CyclicLrUpdaterHook                
(HIGH        ) CyclicMomentumUpdaterHook          
(NORMAL      ) DistSamplerSeedHook                
(NORMAL      ) DistEvalHook                       
(LOW         ) IterTimerHook                      
(VERY_LOW    ) TextLoggerHook                     
(VERY_LOW    ) TensorboardLoggerHook              
 -------------------- 
before_train_iter:
(VERY_HIGH   ) CyclicLrUpdaterHook                
(HIGH        ) CyclicMomentumUpdaterHook          
(NORMAL      ) DistEvalHook                       
(LOW         ) IterTimerHook                      
 -------------------- 
after_train_iter:
(ABOVE_NORMAL) Fp16OptimizerHook                  
(NORMAL      ) CheckpointHook                     
(NORMAL      ) DistEvalHook                       
(LOW         ) IterTimerHook                      
(VERY_LOW    ) TextLoggerHook                     
(VERY_LOW    ) TensorboardLoggerHook              
 -------------------- 
after_train_epoch:
(NORMAL      ) CheckpointHook                     
(NORMAL      ) DistEvalHook                       
(VERY_LOW    ) TextLoggerHook                     
(VERY_LOW    ) TensorboardLoggerHook              
 -------------------- 
before_val_epoch:
(NORMAL      ) DistSamplerSeedHook                
(LOW         ) IterTimerHook                      
(VERY_LOW    ) TextLoggerHook                     
(VERY_LOW    ) TensorboardLoggerHook              
 -------------------- 
before_val_iter:
(LOW         ) IterTimerHook                      
 -------------------- 
after_val_iter:
(LOW         ) IterTimerHook                      
 -------------------- 
after_val_epoch:
(VERY_LOW    ) TextLoggerHook                     
(VERY_LOW    ) TensorboardLoggerHook              
 -------------------- 
after_run:
(VERY_LOW    ) TextLoggerHook                     
(VERY_LOW    ) TensorboardLoggerHook              
 -------------------- 
2025-01-22 10:44:03,239 - mmdet3d - INFO - workflow: [('train', 1)], max: 20 epochs
2025-01-22 10:44:03,244 - mmdet3d - INFO - Checkpoints will be saved to /home/jmeng18/bev_fusion/bevfusion-beliv/train_result_map_infra+onboard_camera_long_depth_vit by HardDiskBackend.
2025-01-22 10:47:08,565 - mmdet3d - INFO - Epoch [1][50/8000]	lr: 1.000e-04, eta: 6 days, 20:34:31, time: 3.704, data_time: 1.573, memory: 25789, loss/map/drivable_area/focal: 9.5831, loss/map/ped_crossing/focal: 9.5680, loss/map/walkway/focal: 9.5789, loss: 28.7299, grad_norm: 102.5885
2025-01-22 10:49:43,813 - mmdet3d - INFO - Epoch [1][100/8000]	lr: 1.000e-04, eta: 6 days, 7:13:05, time: 3.105, data_time: 1.055, memory: 25789, loss/map/drivable_area/focal: 2.3721, loss/map/ped_crossing/focal: 2.3173, loss/map/walkway/focal: 2.3394, loss: 7.0288, grad_norm: nan
2025-01-22 10:52:18,192 - mmdet3d - INFO - Epoch [1][150/8000]	lr: 1.000e-04, eta: 6 days, 2:28:45, time: 3.088, data_time: 1.115, memory: 25810, loss/map/drivable_area/focal: 1.7075, loss/map/ped_crossing/focal: 1.6576, loss/map/walkway/focal: 1.6802, loss: 5.0454, grad_norm: 28.1091
2025-01-22 10:54:43,914 - mmdet3d - INFO - Epoch [1][200/8000]	lr: 1.000e-04, eta: 5 days, 22:10:01, time: 2.914, data_time: 0.875, memory: 25810, loss/map/drivable_area/focal: 1.5689, loss/map/ped_crossing/focal: 1.4895, loss/map/walkway/focal: 1.5225, loss: 4.5809, grad_norm: 26.2130
2025-01-22 10:57:06,217 - mmdet3d - INFO - Epoch [1][250/8000]	lr: 1.000e-04, eta: 5 days, 18:57:23, time: 2.846, data_time: 0.816, memory: 25810, loss/map/drivable_area/focal: 1.4577, loss/map/ped_crossing/focal: 1.3929, loss/map/walkway/focal: 1.4223, loss: 4.2728, grad_norm: 25.1200
2025-01-22 10:59:50,621 - mmdet3d - INFO - Epoch [1][300/8000]	lr: 1.000e-04, eta: 5 days, 20:04:17, time: 3.288, data_time: 1.174, memory: 25810, loss/map/drivable_area/focal: 1.4748, loss/map/ped_crossing/focal: 1.4171, loss/map/walkway/focal: 1.4408, loss: 4.3327, grad_norm: 23.4796
2025-01-22 11:03:14,075 - mmdet3d - INFO - Epoch [1][350/8000]	lr: 1.001e-04, eta: 6 days, 1:48:09, time: 4.069, data_time: 2.067, memory: 25810, loss/map/drivable_area/focal: 1.3722, loss/map/ped_crossing/focal: 1.3049, loss/map/walkway/focal: 1.3351, loss: 4.0122, grad_norm: 25.1413
2025-01-22 11:06:25,023 - mmdet3d - INFO - Epoch [1][400/8000]	lr: 1.001e-04, eta: 6 days, 4:42:02, time: 3.819, data_time: 1.750, memory: 25810, loss/map/drivable_area/focal: 1.4061, loss/map/ped_crossing/focal: 1.3330, loss/map/walkway/focal: 1.3642, loss: 4.1033, grad_norm: 24.0426
2025-01-22 11:09:50,540 - mmdet3d - INFO - Epoch [1][450/8000]	lr: 1.001e-04, eta: 6 days, 8:22:39, time: 4.110, data_time: 2.117, memory: 25810, loss/map/drivable_area/focal: 1.3922, loss/map/ped_crossing/focal: 1.3231, loss/map/walkway/focal: 1.3490, loss: 4.0642, grad_norm: 23.3771
2025-01-22 11:12:49,961 - mmdet3d - INFO - Epoch [1][500/8000]	lr: 1.001e-04, eta: 6 days, 8:59:43, time: 3.588, data_time: 1.608, memory: 25810, loss/map/drivable_area/focal: 1.2638, loss/map/ped_crossing/focal: 1.1975, loss/map/walkway/focal: 1.2218, loss: 3.6831, grad_norm: 22.3912
2025-01-22 11:15:10,183 - mmdet3d - INFO - Epoch [1][550/8000]	lr: 1.002e-04, eta: 6 days, 6:20:07, time: 2.804, data_time: 0.759, memory: 25810, loss/map/drivable_area/focal: 1.3478, loss/map/ped_crossing/focal: 1.2794, loss/map/walkway/focal: 1.3056, loss: 3.9328, grad_norm: 21.4175
2025-01-22 11:17:29,419 - mmdet3d - INFO - Epoch [1][600/8000]	lr: 1.002e-04, eta: 6 days, 4:02:21, time: 2.785, data_time: 0.808, memory: 25810, loss/map/drivable_area/focal: 1.3345, loss/map/ped_crossing/focal: 1.2541, loss/map/walkway/focal: 1.2916, loss: 3.8802, grad_norm: 22.1498
2025-01-22 11:19:44,439 - mmdet3d - INFO - Epoch [1][650/8000]	lr: 1.002e-04, eta: 6 days, 1:48:12, time: 2.700, data_time: 0.603, memory: 25810, loss/map/drivable_area/focal: 1.1627, loss/map/ped_crossing/focal: 1.0919, loss/map/walkway/focal: 1.1229, loss: 3.3775, grad_norm: 21.8710
2025-01-22 11:21:57,323 - mmdet3d - INFO - Epoch [1][700/8000]	lr: 1.003e-04, eta: 5 days, 23:44:47, time: 2.658, data_time: 0.622, memory: 25810, loss/map/drivable_area/focal: 1.1699, loss/map/ped_crossing/focal: 1.1079, loss/map/walkway/focal: 1.1373, loss: 3.4151, grad_norm: 21.1999
2025-01-22 11:24:28,003 - mmdet3d - INFO - Epoch [1][750/8000]	lr: 1.003e-04, eta: 5 days, 23:00:30, time: 3.014, data_time: 0.968, memory: 25810, loss/map/drivable_area/focal: 1.0978, loss/map/ped_crossing/focal: 1.0204, loss/map/walkway/focal: 1.0561, loss: 3.1743, grad_norm: 19.2835
2025-01-22 11:26:56,483 - mmdet3d - INFO - Epoch [1][800/8000]	lr: 1.003e-04, eta: 5 days, 22:14:09, time: 2.970, data_time: 0.979, memory: 25810, loss/map/drivable_area/focal: 1.1330, loss/map/ped_crossing/focal: 1.0622, loss/map/walkway/focal: 1.0935, loss: 3.2888, grad_norm: nan
2025-01-22 11:29:23,716 - mmdet3d - INFO - Epoch [1][850/8000]	lr: 1.004e-04, eta: 5 days, 21:29:04, time: 2.945, data_time: 0.890, memory: 25810, loss/map/drivable_area/focal: 1.1283, loss/map/ped_crossing/focal: 1.0622, loss/map/walkway/focal: 1.0919, loss: 3.2825, grad_norm: 21.0425
2025-01-22 11:31:43,819 - mmdet3d - INFO - Epoch [1][900/8000]	lr: 1.004e-04, eta: 5 days, 20:27:43, time: 2.802, data_time: 0.822, memory: 25810, loss/map/drivable_area/focal: 1.0970, loss/map/ped_crossing/focal: 1.0394, loss/map/walkway/focal: 1.0590, loss: 3.1953, grad_norm: 20.7722
2025-01-22 11:33:54,096 - mmdet3d - INFO - Epoch [1][950/8000]	lr: 1.005e-04, eta: 5 days, 19:05:10, time: 2.606, data_time: 0.536, memory: 25810, loss/map/drivable_area/focal: 1.0642, loss/map/ped_crossing/focal: 1.0018, loss/map/walkway/focal: 1.0264, loss: 3.0925, grad_norm: 19.9966
2025-01-22 11:36:10,986 - mmdet3d - INFO - Epoch [1][1000/8000]	lr: 1.005e-04, eta: 5 days, 18:08:10, time: 2.738, data_time: 0.748, memory: 25885, loss/map/drivable_area/focal: 1.1288, loss/map/ped_crossing/focal: 1.0675, loss/map/walkway/focal: 1.0913, loss: 3.2876, grad_norm: 20.0488
2025-01-22 11:38:27,266 - mmdet3d - INFO - Epoch [1][1050/8000]	lr: 1.006e-04, eta: 5 days, 17:14:51, time: 2.726, data_time: 0.701, memory: 25885, loss/map/drivable_area/focal: 1.0471, loss/map/ped_crossing/focal: 0.9904, loss/map/walkway/focal: 1.0148, loss: 3.0522, grad_norm: 18.6355
2025-01-22 11:40:43,370 - mmdet3d - INFO - Epoch [1][1100/8000]	lr: 1.007e-04, eta: 5 days, 16:25:45, time: 2.722, data_time: 0.659, memory: 25891, loss/map/drivable_area/focal: 0.9893, loss/map/ped_crossing/focal: 0.9355, loss/map/walkway/focal: 0.9604, loss: 2.8852, grad_norm: 18.5691
2025-01-22 11:42:53,375 - mmdet3d - INFO - Epoch [1][1150/8000]	lr: 1.007e-04, eta: 5 days, 15:26:40, time: 2.600, data_time: 0.549, memory: 25891, loss/map/drivable_area/focal: 0.9362, loss/map/ped_crossing/focal: 0.8855, loss/map/walkway/focal: 0.9086, loss: 2.7302, grad_norm: 18.2405
2025-01-22 11:45:07,560 - mmdet3d - INFO - Epoch [1][1200/8000]	lr: 1.008e-04, eta: 5 days, 14:41:34, time: 2.684, data_time: 0.661, memory: 25891, loss/map/drivable_area/focal: 1.0971, loss/map/ped_crossing/focal: 1.0185, loss/map/walkway/focal: 1.0524, loss: 3.1680, grad_norm: 20.8203
2025-01-22 11:47:24,264 - mmdet3d - INFO - Epoch [1][1250/8000]	lr: 1.008e-04, eta: 5 days, 14:05:12, time: 2.734, data_time: 0.730, memory: 25891, loss/map/drivable_area/focal: 1.0712, loss/map/ped_crossing/focal: 1.0120, loss/map/walkway/focal: 1.0386, loss: 3.1217, grad_norm: 19.2820
2025-01-22 11:49:43,506 - mmdet3d - INFO - Epoch [1][1300/8000]	lr: 1.009e-04, eta: 5 days, 13:36:39, time: 2.785, data_time: 0.715, memory: 25891, loss/map/drivable_area/focal: 1.0198, loss/map/ped_crossing/focal: 0.9549, loss/map/walkway/focal: 0.9819, loss: 2.9566, grad_norm: 19.0823
2025-01-22 11:52:00,985 - mmdet3d - INFO - Epoch [1][1350/8000]	lr: 1.010e-04, eta: 5 days, 13:06:34, time: 2.750, data_time: 0.742, memory: 25891, loss/map/drivable_area/focal: 0.9390, loss/map/ped_crossing/focal: 0.8749, loss/map/walkway/focal: 0.9049, loss: 2.7187, grad_norm: 17.3896
2025-01-22 11:54:27,564 - mmdet3d - INFO - Epoch [1][1400/8000]	lr: 1.011e-04, eta: 5 days, 12:55:40, time: 2.932, data_time: 0.900, memory: 25891, loss/map/drivable_area/focal: 1.0451, loss/map/ped_crossing/focal: 0.9817, loss/map/walkway/focal: 1.0086, loss: 3.0354, grad_norm: 17.5331
2025-01-22 11:56:57,237 - mmdet3d - INFO - Epoch [1][1450/8000]	lr: 1.011e-04, eta: 5 days, 12:50:59, time: 2.993, data_time: 1.004, memory: 25891, loss/map/drivable_area/focal: 0.9759, loss/map/ped_crossing/focal: 0.9113, loss/map/walkway/focal: 0.9387, loss: 2.8259, grad_norm: 19.9261
2025-01-22 11:59:13,158 - mmdet3d - INFO - Epoch [1][1500/8000]	lr: 1.012e-04, eta: 5 days, 12:22:13, time: 2.718, data_time: 0.719, memory: 25944, loss/map/drivable_area/focal: 0.9391, loss/map/ped_crossing/focal: 0.8802, loss/map/walkway/focal: 0.9071, loss: 2.7264, grad_norm: 18.5755
2025-01-22 12:01:39,983 - mmdet3d - INFO - Epoch [1][1550/8000]	lr: 1.013e-04, eta: 5 days, 12:13:45, time: 2.936, data_time: 0.892, memory: 25944, loss/map/drivable_area/focal: 1.0155, loss/map/ped_crossing/focal: 0.9590, loss/map/walkway/focal: 0.9847, loss: 2.9591, grad_norm: 18.8614
2025-01-22 12:03:58,905 - mmdet3d - INFO - Epoch [1][1600/8000]	lr: 1.014e-04, eta: 5 days, 11:52:37, time: 2.778, data_time: 0.731, memory: 25944, loss/map/drivable_area/focal: 0.8427, loss/map/ped_crossing/focal: 0.7976, loss/map/walkway/focal: 0.8168, loss: 2.4571, grad_norm: 15.4455
2025-01-22 12:06:10,112 - mmdet3d - INFO - Epoch [1][1650/8000]	lr: 1.015e-04, eta: 5 days, 11:20:17, time: 2.624, data_time: 0.500, memory: 25944, loss/map/drivable_area/focal: 0.8987, loss/map/ped_crossing/focal: 0.8532, loss/map/walkway/focal: 0.8718, loss: 2.6236, grad_norm: 17.8602
2025-01-22 12:08:25,346 - mmdet3d - INFO - Epoch [1][1700/8000]	lr: 1.016e-04, eta: 5 days, 10:55:58, time: 2.705, data_time: 0.548, memory: 25944, loss/map/drivable_area/focal: 0.8523, loss/map/ped_crossing/focal: 0.8071, loss/map/walkway/focal: 0.8239, loss: 2.4833, grad_norm: 18.1213
2025-01-22 12:10:36,720 - mmdet3d - INFO - Epoch [1][1750/8000]	lr: 1.017e-04, eta: 5 days, 10:27:06, time: 2.627, data_time: 0.496, memory: 25944, loss/map/drivable_area/focal: 0.9404, loss/map/ped_crossing/focal: 0.8790, loss/map/walkway/focal: 0.9091, loss: 2.7285, grad_norm: 17.7568
2025-01-22 12:12:46,718 - mmdet3d - INFO - Epoch [1][1800/8000]	lr: 1.018e-04, eta: 5 days, 9:57:42, time: 2.600, data_time: 0.536, memory: 25944, loss/map/drivable_area/focal: 0.9691, loss/map/ped_crossing/focal: 0.8909, loss/map/walkway/focal: 0.9241, loss: 2.7840, grad_norm: 16.7377
2025-01-22 12:15:01,726 - mmdet3d - INFO - Epoch [1][1850/8000]	lr: 1.019e-04, eta: 5 days, 9:36:54, time: 2.700, data_time: 0.550, memory: 25944, loss/map/drivable_area/focal: 0.9002, loss/map/ped_crossing/focal: 0.8233, loss/map/walkway/focal: 0.8602, loss: 2.5837, grad_norm: 16.9609
2025-01-22 12:17:09,286 - mmdet3d - INFO - Epoch [1][1900/8000]	lr: 1.020e-04, eta: 5 days, 9:06:46, time: 2.551, data_time: 0.520, memory: 25944, loss/map/drivable_area/focal: 0.9368, loss/map/ped_crossing/focal: 0.8767, loss/map/walkway/focal: 0.9023, loss: 2.7158, grad_norm: 16.1846
2025-01-22 12:19:21,429 - mmdet3d - INFO - Epoch [1][1950/8000]	lr: 1.021e-04, eta: 5 days, 8:44:15, time: 2.643, data_time: 0.569, memory: 25944, loss/map/drivable_area/focal: 0.9444, loss/map/ped_crossing/focal: 0.8686, loss/map/walkway/focal: 0.9009, loss: 2.7139, grad_norm: 16.5751
2025-01-22 12:21:33,682 - mmdet3d - INFO - Epoch [1][2000/8000]	lr: 1.022e-04, eta: 5 days, 8:22:53, time: 2.645, data_time: 0.609, memory: 25944, loss/map/drivable_area/focal: 0.8987, loss/map/ped_crossing/focal: 0.8314, loss/map/walkway/focal: 0.8577, loss: 2.5878, grad_norm: 17.9665
2025-01-22 12:23:43,644 - mmdet3d - INFO - Epoch [1][2050/8000]	lr: 1.023e-04, eta: 5 days, 7:59:32, time: 2.599, data_time: 0.552, memory: 25944, loss/map/drivable_area/focal: 0.8666, loss/map/ped_crossing/focal: 0.8012, loss/map/walkway/focal: 0.8278, loss: 2.4955, grad_norm: 15.4836
2025-01-22 12:25:57,485 - mmdet3d - INFO - Epoch [1][2100/8000]	lr: 1.024e-04, eta: 5 days, 7:42:02, time: 2.677, data_time: 0.666, memory: 25944, loss/map/drivable_area/focal: 0.9068, loss/map/ped_crossing/focal: 0.8484, loss/map/walkway/focal: 0.8741, loss: 2.6293, grad_norm: 17.2374
2025-01-22 12:28:16,192 - mmdet3d - INFO - Epoch [1][2150/8000]	lr: 1.025e-04, eta: 5 days, 7:31:12, time: 2.774, data_time: 0.697, memory: 25944, loss/map/drivable_area/focal: 0.9550, loss/map/ped_crossing/focal: 0.8954, loss/map/walkway/focal: 0.9168, loss: 2.7672, grad_norm: 17.6893
2025-01-22 12:30:28,177 - mmdet3d - INFO - Epoch [1][2200/8000]	lr: 1.026e-04, eta: 5 days, 7:12:43, time: 2.640, data_time: 0.540, memory: 25944, loss/map/drivable_area/focal: 0.8482, loss/map/ped_crossing/focal: 0.7689, loss/map/walkway/focal: 0.8012, loss: 2.4183, grad_norm: 16.2018
2025-01-22 12:32:40,652 - mmdet3d - INFO - Epoch [1][2250/8000]	lr: 1.027e-04, eta: 5 days, 6:55:33, time: 2.649, data_time: 0.691, memory: 25945, loss/map/drivable_area/focal: 0.8899, loss/map/ped_crossing/focal: 0.8280, loss/map/walkway/focal: 0.8555, loss: 2.5735, grad_norm: 16.2367
2025-01-22 12:34:54,755 - mmdet3d - INFO - Epoch [1][2300/8000]	lr: 1.029e-04, eta: 5 days, 6:40:52, time: 2.682, data_time: 0.662, memory: 25945, loss/map/drivable_area/focal: 0.9100, loss/map/ped_crossing/focal: 0.8495, loss/map/walkway/focal: 0.8729, loss: 2.6324, grad_norm: 17.6088
2025-01-22 12:37:01,325 - mmdet3d - INFO - Epoch [1][2350/8000]	lr: 1.030e-04, eta: 5 days, 6:18:18, time: 2.531, data_time: 0.414, memory: 25945, loss/map/drivable_area/focal: 0.9555, loss/map/ped_crossing/focal: 0.8901, loss/map/walkway/focal: 0.9189, loss: 2.7645, grad_norm: 16.6427
2025-01-22 12:39:13,330 - mmdet3d - INFO - Epoch [1][2400/8000]	lr: 1.031e-04, eta: 5 days, 6:02:33, time: 2.640, data_time: 0.573, memory: 25945, loss/map/drivable_area/focal: 0.9372, loss/map/ped_crossing/focal: 0.8646, loss/map/walkway/focal: 0.8966, loss: 2.6985, grad_norm: 17.2564
2025-01-22 12:41:24,710 - mmdet3d - INFO - Epoch [1][2450/8000]	lr: 1.032e-04, eta: 5 days, 5:46:40, time: 2.628, data_time: 0.457, memory: 25945, loss/map/drivable_area/focal: 0.8914, loss/map/ped_crossing/focal: 0.8162, loss/map/walkway/focal: 0.8488, loss: 2.5565, grad_norm: 16.5153
2025-01-22 12:43:29,722 - mmdet3d - INFO - Epoch [1][2500/8000]	lr: 1.034e-04, eta: 5 days, 5:24:39, time: 2.500, data_time: 0.448, memory: 25945, loss/map/drivable_area/focal: 0.8765, loss/map/ped_crossing/focal: 0.8044, loss/map/walkway/focal: 0.8317, loss: 2.5126, grad_norm: 16.7023
2025-01-22 12:45:34,107 - mmdet3d - INFO - Epoch [1][2550/8000]	lr: 1.035e-04, eta: 5 days, 5:02:46, time: 2.488, data_time: 0.409, memory: 25945, loss/map/drivable_area/focal: 0.9781, loss/map/ped_crossing/focal: 0.9105, loss/map/walkway/focal: 0.9394, loss: 2.8280, grad_norm: 18.5391
2025-01-22 12:47:36,351 - mmdet3d - INFO - Epoch [1][2600/8000]	lr: 1.037e-04, eta: 5 days, 4:39:29, time: 2.445, data_time: 0.415, memory: 25945, loss/map/drivable_area/focal: 0.9998, loss/map/ped_crossing/focal: 0.9299, loss/map/walkway/focal: 0.9603, loss: 2.8899, grad_norm: 16.4301
2025-01-22 12:49:39,806 - mmdet3d - INFO - Epoch [1][2650/8000]	lr: 1.038e-04, eta: 5 days, 4:18:12, time: 2.469, data_time: 0.430, memory: 25945, loss/map/drivable_area/focal: 0.9609, loss/map/ped_crossing/focal: 0.9018, loss/map/walkway/focal: 0.9256, loss: 2.7884, grad_norm: 16.1633
2025-01-22 12:51:41,856 - mmdet3d - INFO - Epoch [1][2700/8000]	lr: 1.039e-04, eta: 5 days, 3:56:16, time: 2.441, data_time: 0.446, memory: 25945, loss/map/drivable_area/focal: 0.8792, loss/map/ped_crossing/focal: 0.8157, loss/map/walkway/focal: 0.8423, loss: 2.5372, grad_norm: 15.8411
2025-01-22 12:53:45,003 - mmdet3d - INFO - Epoch [1][2750/8000]	lr: 1.041e-04, eta: 5 days, 3:36:07, time: 2.463, data_time: 0.403, memory: 25945, loss/map/drivable_area/focal: 0.7865, loss/map/ped_crossing/focal: 0.7266, loss/map/walkway/focal: 0.7547, loss: 2.2678, grad_norm: 15.0053
2025-01-22 12:55:42,334 - mmdet3d - INFO - Epoch [1][2800/8000]	lr: 1.042e-04, eta: 5 days, 3:11:09, time: 2.347, data_time: 0.254, memory: 25945, loss/map/drivable_area/focal: 0.8307, loss/map/ped_crossing/focal: 0.7674, loss/map/walkway/focal: 0.7968, loss: 2.3949, grad_norm: 15.2259
2025-01-22 12:57:49,055 - mmdet3d - INFO - Epoch [1][2850/8000]	lr: 1.044e-04, eta: 5 days, 2:55:38, time: 2.534, data_time: 0.513, memory: 25945, loss/map/drivable_area/focal: 0.8159, loss/map/ped_crossing/focal: 0.7525, loss/map/walkway/focal: 0.7836, loss: 2.3520, grad_norm: 14.7195
2025-01-22 12:59:56,227 - mmdet3d - INFO - Epoch [1][2900/8000]	lr: 1.045e-04, eta: 5 days, 2:40:59, time: 2.543, data_time: 0.509, memory: 25945, loss/map/drivable_area/focal: 0.8165, loss/map/ped_crossing/focal: 0.7333, loss/map/walkway/focal: 0.7687, loss: 2.3185, grad_norm: 14.7657
2025-01-22 13:02:00,567 - mmdet3d - INFO - Epoch [1][2950/8000]	lr: 1.047e-04, eta: 5 days, 2:24:14, time: 2.487, data_time: 0.474, memory: 25945, loss/map/drivable_area/focal: 0.8281, loss/map/ped_crossing/focal: 0.7768, loss/map/walkway/focal: 0.7994, loss: 2.4043, grad_norm: 15.1728
2025-01-22 13:04:06,665 - mmdet3d - INFO - Epoch [1][3000/8000]	lr: 1.049e-04, eta: 5 days, 2:09:31, time: 2.522, data_time: 0.308, memory: 25945, loss/map/drivable_area/focal: 0.8454, loss/map/ped_crossing/focal: 0.7877, loss/map/walkway/focal: 0.8123, loss: 2.4454, grad_norm: 14.4825
2025-01-22 13:06:06,445 - mmdet3d - INFO - Epoch [1][3050/8000]	lr: 1.050e-04, eta: 5 days, 1:49:48, time: 2.396, data_time: 0.282, memory: 25945, loss/map/drivable_area/focal: 0.8790, loss/map/ped_crossing/focal: 0.8072, loss/map/walkway/focal: 0.8401, loss: 2.5263, grad_norm: 16.2853
2025-01-22 13:08:03,943 - mmdet3d - INFO - Epoch [1][3100/8000]	lr: 1.052e-04, eta: 5 days, 1:28:43, time: 2.350, data_time: 0.181, memory: 25945, loss/map/drivable_area/focal: 0.7507, loss/map/ped_crossing/focal: 0.6938, loss/map/walkway/focal: 0.7166, loss: 2.1611, grad_norm: 13.9045
2025-01-22 13:10:01,664 - mmdet3d - INFO - Epoch [1][3150/8000]	lr: 1.054e-04, eta: 5 days, 1:08:26, time: 2.354, data_time: 0.268, memory: 25945, loss/map/drivable_area/focal: 0.8801, loss/map/ped_crossing/focal: 0.8198, loss/map/walkway/focal: 0.8433, loss: 2.5432, grad_norm: 14.3791
2025-01-22 13:12:00,406 - mmdet3d - INFO - Epoch [1][3200/8000]	lr: 1.055e-04, eta: 5 days, 0:49:33, time: 2.375, data_time: 0.332, memory: 25945, loss/map/drivable_area/focal: 0.7937, loss/map/ped_crossing/focal: 0.7315, loss/map/walkway/focal: 0.7598, loss: 2.2850, grad_norm: 14.7622
2025-01-22 13:14:02,217 - mmdet3d - INFO - Epoch [1][3250/8000]	lr: 1.057e-04, eta: 5 days, 0:33:40, time: 2.436, data_time: 0.301, memory: 25945, loss/map/drivable_area/focal: 0.8970, loss/map/ped_crossing/focal: 0.8200, loss/map/walkway/focal: 0.8528, loss: 2.5698, grad_norm: 15.6468
2025-01-22 13:15:57,217 - mmdet3d - INFO - Epoch [1][3300/8000]	lr: 1.059e-04, eta: 5 days, 0:12:48, time: 2.300, data_time: 0.238, memory: 25945, loss/map/drivable_area/focal: 0.8238, loss/map/ped_crossing/focal: 0.7565, loss/map/walkway/focal: 0.7835, loss: 2.3638, grad_norm: 14.3267
2025-01-22 13:18:00,290 - mmdet3d - INFO - Epoch [1][3350/8000]	lr: 1.061e-04, eta: 4 days, 23:58:48, time: 2.461, data_time: 0.396, memory: 25945, loss/map/drivable_area/focal: 0.8699, loss/map/ped_crossing/focal: 0.7862, loss/map/walkway/focal: 0.8228, loss: 2.4789, grad_norm: 17.0912
2025-01-22 13:19:57,303 - mmdet3d - INFO - Epoch [1][3400/8000]	lr: 1.062e-04, eta: 4 days, 23:40:30, time: 2.340, data_time: 0.237, memory: 25945, loss/map/drivable_area/focal: 0.8471, loss/map/ped_crossing/focal: 0.7598, loss/map/walkway/focal: 0.8002, loss: 2.4070, grad_norm: 15.1052
2025-01-22 13:21:55,651 - mmdet3d - INFO - Epoch [1][3450/8000]	lr: 1.064e-04, eta: 4 days, 23:23:40, time: 2.367, data_time: 0.288, memory: 25945, loss/map/drivable_area/focal: 0.7266, loss/map/ped_crossing/focal: 0.6650, loss/map/walkway/focal: 0.6912, loss: 2.0827, grad_norm: 13.1243
2025-01-22 13:23:52,641 - mmdet3d - INFO - Epoch [1][3500/8000]	lr: 1.066e-04, eta: 4 days, 23:06:16, time: 2.340, data_time: 0.276, memory: 25945, loss/map/drivable_area/focal: 0.6965, loss/map/ped_crossing/focal: 0.6190, loss/map/walkway/focal: 0.6538, loss: 1.9693, grad_norm: 12.1452
2025-01-22 13:25:53,004 - mmdet3d - INFO - Epoch [1][3550/8000]	lr: 1.068e-04, eta: 4 days, 22:51:46, time: 2.407, data_time: 0.213, memory: 25945, loss/map/drivable_area/focal: 0.7995, loss/map/ped_crossing/focal: 0.7481, loss/map/walkway/focal: 0.7724, loss: 2.3201, grad_norm: 13.8136
2025-01-22 13:27:56,573 - mmdet3d - INFO - Epoch [1][3600/8000]	lr: 1.070e-04, eta: 4 days, 22:39:57, time: 2.471, data_time: 0.377, memory: 25945, loss/map/drivable_area/focal: 0.7874, loss/map/ped_crossing/focal: 0.7031, loss/map/walkway/focal: 0.7392, loss: 2.2298, grad_norm: 14.3974
2025-01-22 13:30:08,241 - mmdet3d - INFO - Epoch [1][3650/8000]	lr: 1.072e-04, eta: 4 days, 22:34:10, time: 2.633, data_time: 0.554, memory: 25945, loss/map/drivable_area/focal: 0.8072, loss/map/ped_crossing/focal: 0.7403, loss/map/walkway/focal: 0.7683, loss: 2.3158, grad_norm: 15.0866
2025-01-22 13:32:12,849 - mmdet3d - INFO - Epoch [1][3700/8000]	lr: 1.074e-04, eta: 4 days, 22:23:31, time: 2.492, data_time: 0.392, memory: 25945, loss/map/drivable_area/focal: 0.8750, loss/map/ped_crossing/focal: 0.8073, loss/map/walkway/focal: 0.8393, loss: 2.5216, grad_norm: 15.9018
2025-01-22 13:34:19,500 - mmdet3d - INFO - Epoch [1][3750/8000]	lr: 1.076e-04, eta: 4 days, 22:14:31, time: 2.533, data_time: 0.454, memory: 25945, loss/map/drivable_area/focal: 0.8187, loss/map/ped_crossing/focal: 0.7401, loss/map/walkway/focal: 0.7785, loss: 2.3373, grad_norm: 14.6419
2025-01-22 13:36:26,841 - mmdet3d - INFO - Epoch [1][3800/8000]	lr: 1.078e-04, eta: 4 days, 22:06:10, time: 2.547, data_time: 0.424, memory: 25945, loss/map/drivable_area/focal: 0.6981, loss/map/ped_crossing/focal: 0.6344, loss/map/walkway/focal: 0.6635, loss: 1.9961, grad_norm: 12.9918
2025-01-22 13:38:30,536 - mmdet3d - INFO - Epoch [1][3850/8000]	lr: 1.080e-04, eta: 4 days, 21:55:31, time: 2.474, data_time: 0.361, memory: 25945, loss/map/drivable_area/focal: 0.7733, loss/map/ped_crossing/focal: 0.7297, loss/map/walkway/focal: 0.7464, loss: 2.2494, grad_norm: 14.9114
2025-01-22 13:40:31,552 - mmdet3d - INFO - Epoch [1][3900/8000]	lr: 1.082e-04, eta: 4 days, 21:43:17, time: 2.420, data_time: 0.370, memory: 25945, loss/map/drivable_area/focal: 0.7801, loss/map/ped_crossing/focal: 0.7234, loss/map/walkway/focal: 0.7466, loss: 2.2501, grad_norm: 13.2275
2025-01-22 13:42:34,014 - mmdet3d - INFO - Epoch [1][3950/8000]	lr: 1.084e-04, eta: 4 days, 21:32:17, time: 2.449, data_time: 0.293, memory: 25945, loss/map/drivable_area/focal: 0.7848, loss/map/ped_crossing/focal: 0.7233, loss/map/walkway/focal: 0.7488, loss: 2.2569, grad_norm: 14.0781
2025-01-22 13:44:44,903 - mmdet3d - INFO - Epoch [1][4000/8000]	lr: 1.086e-04, eta: 4 days, 21:26:58, time: 2.618, data_time: 0.491, memory: 25945, loss/map/drivable_area/focal: 0.7842, loss/map/ped_crossing/focal: 0.7160, loss/map/walkway/focal: 0.7487, loss: 2.2489, grad_norm: 15.1408
2025-01-22 13:46:59,916 - mmdet3d - INFO - Epoch [1][4050/8000]	lr: 1.089e-04, eta: 4 days, 21:24:23, time: 2.700, data_time: 0.585, memory: 25945, loss/map/drivable_area/focal: 0.7523, loss/map/ped_crossing/focal: 0.6786, loss/map/walkway/focal: 0.7110, loss: 2.1419, grad_norm: nan
2025-01-22 13:49:16,999 - mmdet3d - INFO - Epoch [1][4100/8000]	lr: 1.091e-04, eta: 4 days, 21:23:07, time: 2.742, data_time: 0.682, memory: 25945, loss/map/drivable_area/focal: 0.8036, loss/map/ped_crossing/focal: 0.7203, loss/map/walkway/focal: 0.7525, loss: 2.2763, grad_norm: 14.3205
2025-01-22 13:51:31,689 - mmdet3d - INFO - Epoch [1][4150/8000]	lr: 1.093e-04, eta: 4 days, 21:20:20, time: 2.694, data_time: 0.530, memory: 25945, loss/map/drivable_area/focal: 0.8137, loss/map/ped_crossing/focal: 0.7512, loss/map/walkway/focal: 0.7740, loss: 2.3389, grad_norm: 14.5523
2025-01-22 13:53:46,092 - mmdet3d - INFO - Epoch [1][4200/8000]	lr: 1.095e-04, eta: 4 days, 21:17:23, time: 2.688, data_time: 0.600, memory: 25945, loss/map/drivable_area/focal: 0.8203, loss/map/ped_crossing/focal: 0.7355, loss/map/walkway/focal: 0.7744, loss: 2.3302, grad_norm: 13.2537
2025-01-22 13:56:02,673 - mmdet3d - INFO - Epoch [1][4250/8000]	lr: 1.098e-04, eta: 4 days, 21:15:47, time: 2.732, data_time: 0.674, memory: 25945, loss/map/drivable_area/focal: 0.7438, loss/map/ped_crossing/focal: 0.6684, loss/map/walkway/focal: 0.7065, loss: 2.1188, grad_norm: 13.9084
2025-01-22 13:58:25,769 - mmdet3d - INFO - Epoch [1][4300/8000]	lr: 1.100e-04, eta: 4 days, 21:18:06, time: 2.862, data_time: 0.832, memory: 25945, loss/map/drivable_area/focal: 0.8490, loss/map/ped_crossing/focal: 0.8044, loss/map/walkway/focal: 0.8242, loss: 2.4776, grad_norm: 14.2271
2025-01-22 14:00:41,633 - mmdet3d - INFO - Epoch [1][4350/8000]	lr: 1.102e-04, eta: 4 days, 21:15:59, time: 2.717, data_time: 0.653, memory: 25945, loss/map/drivable_area/focal: 0.7704, loss/map/ped_crossing/focal: 0.6941, loss/map/walkway/focal: 0.7297, loss: 2.1942, grad_norm: 14.4538
2025-01-22 14:03:05,223 - mmdet3d - INFO - Epoch [1][4400/8000]	lr: 1.105e-04, eta: 4 days, 21:18:26, time: 2.872, data_time: 0.797, memory: 25945, loss/map/drivable_area/focal: 0.7388, loss/map/ped_crossing/focal: 0.6713, loss/map/walkway/focal: 0.6991, loss: 2.1093, grad_norm: 13.1241
2025-01-22 14:05:33,110 - mmdet3d - INFO - Epoch [1][4450/8000]	lr: 1.107e-04, eta: 4 days, 21:23:16, time: 2.958, data_time: 0.807, memory: 25945, loss/map/drivable_area/focal: 0.7992, loss/map/ped_crossing/focal: 0.7200, loss/map/walkway/focal: 0.7532, loss: 2.2724, grad_norm: 13.5256
2025-01-22 14:08:00,048 - mmdet3d - INFO - Epoch [1][4500/8000]	lr: 1.109e-04, eta: 4 days, 21:27:24, time: 2.939, data_time: 0.848, memory: 25945, loss/map/drivable_area/focal: 0.7749, loss/map/ped_crossing/focal: 0.7212, loss/map/walkway/focal: 0.7443, loss: 2.2404, grad_norm: 15.1132
2025-01-22 14:10:20,659 - mmdet3d - INFO - Epoch [1][4550/8000]	lr: 1.112e-04, eta: 4 days, 21:27:47, time: 2.812, data_time: 0.624, memory: 25945, loss/map/drivable_area/focal: 0.7952, loss/map/ped_crossing/focal: 0.7438, loss/map/walkway/focal: 0.7612, loss: 2.3002, grad_norm: 14.8235
2025-01-22 14:12:48,138 - mmdet3d - INFO - Epoch [1][4600/8000]	lr: 1.114e-04, eta: 4 days, 21:31:58, time: 2.950, data_time: 0.819, memory: 25945, loss/map/drivable_area/focal: 0.8081, loss/map/ped_crossing/focal: 0.7465, loss/map/walkway/focal: 0.7752, loss: 2.3297, grad_norm: 14.0612
2025-01-22 14:15:21,835 - mmdet3d - INFO - Epoch [1][4650/8000]	lr: 1.117e-04, eta: 4 days, 21:39:28, time: 3.074, data_time: 0.929, memory: 25945, loss/map/drivable_area/focal: 0.6822, loss/map/ped_crossing/focal: 0.6131, loss/map/walkway/focal: 0.6463, loss: 1.9417, grad_norm: 13.1983
2025-01-22 14:18:12,465 - mmdet3d - INFO - Epoch [1][4700/8000]	lr: 1.119e-04, eta: 4 days, 21:56:05, time: 3.413, data_time: 1.330, memory: 25945, loss/map/drivable_area/focal: 0.7679, loss/map/ped_crossing/focal: 0.7178, loss/map/walkway/focal: 0.7373, loss: 2.2230, grad_norm: 12.9330
2025-01-22 14:20:46,048 - mmdet3d - INFO - Epoch [1][4750/8000]	lr: 1.122e-04, eta: 4 days, 22:03:01, time: 3.072, data_time: 0.914, memory: 25945, loss/map/drivable_area/focal: 0.8220, loss/map/ped_crossing/focal: 0.7685, loss/map/walkway/focal: 0.7915, loss: 2.3820, grad_norm: 14.5771
2025-01-22 14:23:24,437 - mmdet3d - INFO - Epoch [1][4800/8000]	lr: 1.124e-04, eta: 4 days, 22:12:20, time: 3.168, data_time: 1.142, memory: 25945, loss/map/drivable_area/focal: 0.7924, loss/map/ped_crossing/focal: 0.7286, loss/map/walkway/focal: 0.7543, loss: 2.2753, grad_norm: 14.6910
2025-01-22 14:26:05,440 - mmdet3d - INFO - Epoch [1][4850/8000]	lr: 1.127e-04, eta: 4 days, 22:22:47, time: 3.220, data_time: 1.112, memory: 25945, loss/map/drivable_area/focal: 0.7548, loss/map/ped_crossing/focal: 0.6869, loss/map/walkway/focal: 0.7190, loss: 2.1606, grad_norm: 14.9436
2025-01-22 14:28:36,112 - mmdet3d - INFO - Epoch [1][4900/8000]	lr: 1.129e-04, eta: 4 days, 22:27:32, time: 3.013, data_time: 0.941, memory: 25945, loss/map/drivable_area/focal: 0.7654, loss/map/ped_crossing/focal: 0.7120, loss/map/walkway/focal: 0.7328, loss: 2.2101, grad_norm: 12.8288
2025-01-22 14:31:17,336 - mmdet3d - INFO - Epoch [1][4950/8000]	lr: 1.132e-04, eta: 4 days, 22:37:38, time: 3.224, data_time: 1.107, memory: 25945, loss/map/drivable_area/focal: 0.7973, loss/map/ped_crossing/focal: 0.7394, loss/map/walkway/focal: 0.7649, loss: 2.3016, grad_norm: 13.7908
2025-01-22 14:34:02,203 - mmdet3d - INFO - Epoch [1][5000/8000]	lr: 1.135e-04, eta: 4 days, 22:49:22, time: 3.297, data_time: 1.275, memory: 25945, loss/map/drivable_area/focal: 0.8407, loss/map/ped_crossing/focal: 0.7786, loss/map/walkway/focal: 0.8070, loss: 2.4263, grad_norm: 14.9263
2025-01-22 14:36:38,502 - mmdet3d - INFO - Epoch [1][5050/8000]	lr: 1.138e-04, eta: 4 days, 22:56:26, time: 3.126, data_time: 0.991, memory: 25945, loss/map/drivable_area/focal: 0.8500, loss/map/ped_crossing/focal: 0.7856, loss/map/walkway/focal: 0.8131, loss: 2.4487, grad_norm: 14.3085
2025-01-22 14:39:18,276 - mmdet3d - INFO - Epoch [1][5100/8000]	lr: 1.140e-04, eta: 4 days, 23:05:04, time: 3.195, data_time: 1.100, memory: 25945, loss/map/drivable_area/focal: 0.7028, loss/map/ped_crossing/focal: 0.6392, loss/map/walkway/focal: 0.6654, loss: 2.0074, grad_norm: 12.3781
2025-01-22 14:41:55,861 - mmdet3d - INFO - Epoch [1][5150/8000]	lr: 1.143e-04, eta: 4 days, 23:12:23, time: 3.152, data_time: 1.056, memory: 25945, loss/map/drivable_area/focal: 0.7468, loss/map/ped_crossing/focal: 0.6869, loss/map/walkway/focal: 0.7139, loss: 2.1476, grad_norm: 13.1092
2025-01-22 14:44:30,968 - mmdet3d - INFO - Epoch [1][5200/8000]	lr: 1.146e-04, eta: 4 days, 23:18:17, time: 3.102, data_time: 1.040, memory: 25945, loss/map/drivable_area/focal: 0.7843, loss/map/ped_crossing/focal: 0.7000, loss/map/walkway/focal: 0.7388, loss: 2.2231, grad_norm: 12.6923
2025-01-22 14:47:12,205 - mmdet3d - INFO - Epoch [1][5250/8000]	lr: 1.149e-04, eta: 4 days, 23:27:02, time: 3.225, data_time: 1.140, memory: 25945, loss/map/drivable_area/focal: 0.7936, loss/map/ped_crossing/focal: 0.7179, loss/map/walkway/focal: 0.7550, loss: 2.2665, grad_norm: 14.9298
2025-01-22 14:50:00,121 - mmdet3d - INFO - Epoch [1][5300/8000]	lr: 1.151e-04, eta: 4 days, 23:38:49, time: 3.358, data_time: 1.270, memory: 25945, loss/map/drivable_area/focal: 0.7764, loss/map/ped_crossing/focal: 0.7158, loss/map/walkway/focal: 0.7409, loss: 2.2331, grad_norm: 13.0613
2025-01-22 14:52:51,701 - mmdet3d - INFO - Epoch [1][5350/8000]	lr: 1.154e-04, eta: 4 days, 23:52:05, time: 3.432, data_time: 1.379, memory: 25945, loss/map/drivable_area/focal: 0.8534, loss/map/ped_crossing/focal: 0.7797, loss/map/walkway/focal: 0.8096, loss: 2.4428, grad_norm: 16.6421
2025-01-22 14:55:37,833 - mmdet3d - INFO - Epoch [1][5400/8000]	lr: 1.157e-04, eta: 5 days, 0:02:27, time: 3.323, data_time: 1.280, memory: 25945, loss/map/drivable_area/focal: 0.8162, loss/map/ped_crossing/focal: 0.7457, loss/map/walkway/focal: 0.7788, loss: 2.3407, grad_norm: 13.8694
2025-01-22 14:58:22,364 - mmdet3d - INFO - Epoch [1][5450/8000]	lr: 1.160e-04, eta: 5 days, 0:11:50, time: 3.291, data_time: 1.222, memory: 25945, loss/map/drivable_area/focal: 0.7170, loss/map/ped_crossing/focal: 0.6439, loss/map/walkway/focal: 0.6735, loss: 2.0343, grad_norm: 13.0472
2025-01-22 15:01:06,618 - mmdet3d - INFO - Epoch [1][5500/8000]	lr: 1.163e-04, eta: 5 days, 0:20:52, time: 3.285, data_time: 1.253, memory: 25945, loss/map/drivable_area/focal: 0.8249, loss/map/ped_crossing/focal: 0.7387, loss/map/walkway/focal: 0.7746, loss: 2.3381, grad_norm: 12.3634
2025-01-22 15:03:38,545 - mmdet3d - INFO - Epoch [1][5550/8000]	lr: 1.166e-04, eta: 5 days, 0:23:57, time: 3.039, data_time: 1.069, memory: 25945, loss/map/drivable_area/focal: 0.7669, loss/map/ped_crossing/focal: 0.6931, loss/map/walkway/focal: 0.7262, loss: 2.1862, grad_norm: 14.6472
2025-01-22 15:06:10,285 - mmdet3d - INFO - Epoch [1][5600/8000]	lr: 1.169e-04, eta: 5 days, 0:26:52, time: 3.035, data_time: 0.995, memory: 25945, loss/map/drivable_area/focal: 0.8096, loss/map/ped_crossing/focal: 0.7312, loss/map/walkway/focal: 0.7651, loss: 2.3060, grad_norm: 14.7552
2025-01-22 15:08:41,886 - mmdet3d - INFO - Epoch [1][5650/8000]	lr: 1.172e-04, eta: 5 days, 0:29:37, time: 3.032, data_time: 1.021, memory: 25945, loss/map/drivable_area/focal: 0.6459, loss/map/ped_crossing/focal: 0.5707, loss/map/walkway/focal: 0.6041, loss: 1.8206, grad_norm: 12.2968
2025-01-22 15:11:07,792 - mmdet3d - INFO - Epoch [1][5700/8000]	lr: 1.175e-04, eta: 5 days, 0:29:42, time: 2.918, data_time: 0.892, memory: 25945, loss/map/drivable_area/focal: 0.8281, loss/map/ped_crossing/focal: 0.7621, loss/map/walkway/focal: 0.7902, loss: 2.3804, grad_norm: 15.0247
2025-01-22 15:13:40,037 - mmdet3d - INFO - Epoch [1][5750/8000]	lr: 1.178e-04, eta: 5 days, 0:32:35, time: 3.045, data_time: 0.949, memory: 25945, loss/map/drivable_area/focal: 0.7632, loss/map/ped_crossing/focal: 0.6965, loss/map/walkway/focal: 0.7257, loss: 2.1854, grad_norm: 13.5503
2025-01-22 15:16:11,625 - mmdet3d - INFO - Epoch [1][5800/8000]	lr: 1.181e-04, eta: 5 days, 0:35:05, time: 3.032, data_time: 0.983, memory: 25945, loss/map/drivable_area/focal: 0.8454, loss/map/ped_crossing/focal: 0.7821, loss/map/walkway/focal: 0.8122, loss: 2.4396, grad_norm: 14.6745
2025-01-22 15:18:40,929 - mmdet3d - INFO - Epoch [1][5850/8000]	lr: 1.184e-04, eta: 5 days, 0:36:29, time: 2.986, data_time: 0.923, memory: 25945, loss/map/drivable_area/focal: 0.8050, loss/map/ped_crossing/focal: 0.7376, loss/map/walkway/focal: 0.7696, loss: 2.3122, grad_norm: 15.1111
2025-01-22 15:21:08,285 - mmdet3d - INFO - Epoch [1][5900/8000]	lr: 1.187e-04, eta: 5 days, 0:36:59, time: 2.947, data_time: 0.834, memory: 25945, loss/map/drivable_area/focal: 0.6587, loss/map/ped_crossing/focal: 0.6141, loss/map/walkway/focal: 0.6311, loss: 1.9039, grad_norm: 12.7305
2025-01-22 15:23:35,891 - mmdet3d - INFO - Epoch [1][5950/8000]	lr: 1.191e-04, eta: 5 days, 0:37:32, time: 2.952, data_time: 0.933, memory: 25945, loss/map/drivable_area/focal: 0.7607, loss/map/ped_crossing/focal: 0.6801, loss/map/walkway/focal: 0.7167, loss: 2.1575, grad_norm: 13.9184
2025-01-22 15:26:02,670 - mmdet3d - INFO - Epoch [1][6000/8000]	lr: 1.194e-04, eta: 5 days, 0:37:41, time: 2.936, data_time: 0.832, memory: 25945, loss/map/drivable_area/focal: 0.6390, loss/map/ped_crossing/focal: 0.5767, loss/map/walkway/focal: 0.6048, loss: 1.8205, grad_norm: 12.5261
2025-01-22 15:28:46,392 - mmdet3d - INFO - Epoch [1][6050/8000]	lr: 1.197e-04, eta: 5 days, 0:44:58, time: 3.274, data_time: 1.154, memory: 25945, loss/map/drivable_area/focal: 0.8053, loss/map/ped_crossing/focal: 0.7444, loss/map/walkway/focal: 0.7679, loss: 2.3177, grad_norm: 13.7815
2025-01-22 15:31:55,158 - mmdet3d - INFO - Epoch [1][6100/8000]	lr: 1.200e-04, eta: 5 days, 1:02:37, time: 3.775, data_time: 1.737, memory: 25945, loss/map/drivable_area/focal: 0.7869, loss/map/ped_crossing/focal: 0.7253, loss/map/walkway/focal: 0.7498, loss: 2.2619, grad_norm: 12.7216
2025-01-22 15:35:03,550 - mmdet3d - INFO - Epoch [1][6150/8000]	lr: 1.203e-04, eta: 5 days, 1:19:47, time: 3.768, data_time: 1.675, memory: 25945, loss/map/drivable_area/focal: 0.8750, loss/map/ped_crossing/focal: 0.7811, loss/map/walkway/focal: 0.8253, loss: 2.4814, grad_norm: 13.8290
2025-01-22 15:37:56,135 - mmdet3d - INFO - Epoch [1][6200/8000]	lr: 1.207e-04, eta: 5 days, 1:30:05, time: 3.452, data_time: 1.355, memory: 25945, loss/map/drivable_area/focal: 0.7684, loss/map/ped_crossing/focal: 0.7067, loss/map/walkway/focal: 0.7315, loss: 2.2066, grad_norm: 15.3119
2025-01-22 15:40:42,240 - mmdet3d - INFO - Epoch [1][6250/8000]	lr: 1.210e-04, eta: 5 days, 1:37:31, time: 3.322, data_time: 1.304, memory: 25945, loss/map/drivable_area/focal: 0.7800, loss/map/ped_crossing/focal: 0.7314, loss/map/walkway/focal: 0.7518, loss: 2.2631, grad_norm: 14.7000
2025-01-22 15:43:36,175 - mmdet3d - INFO - Epoch [1][6300/8000]	lr: 1.213e-04, eta: 5 days, 1:47:58, time: 3.479, data_time: 1.448, memory: 25945, loss/map/drivable_area/focal: 0.7339, loss/map/ped_crossing/focal: 0.6754, loss/map/walkway/focal: 0.7017, loss: 2.1111, grad_norm: 12.3991
2025-01-22 15:46:33,513 - mmdet3d - INFO - Epoch [1][6350/8000]	lr: 1.217e-04, eta: 5 days, 1:59:35, time: 3.547, data_time: 1.492, memory: 25945, loss/map/drivable_area/focal: 0.8499, loss/map/ped_crossing/focal: 0.7712, loss/map/walkway/focal: 0.8050, loss: 2.4261, grad_norm: 13.9800
2025-01-22 15:49:23,144 - mmdet3d - INFO - Epoch [1][6400/8000]	lr: 1.220e-04, eta: 5 days, 2:07:53, time: 3.393, data_time: 1.376, memory: 25945, loss/map/drivable_area/focal: 0.7421, loss/map/ped_crossing/focal: 0.6917, loss/map/walkway/focal: 0.7117, loss: 2.1455, grad_norm: 13.2455
2025-01-22 15:52:15,445 - mmdet3d - INFO - Epoch [1][6450/8000]	lr: 1.224e-04, eta: 5 days, 2:17:05, time: 3.446, data_time: 1.445, memory: 25945, loss/map/drivable_area/focal: 0.7255, loss/map/ped_crossing/focal: 0.6639, loss/map/walkway/focal: 0.6875, loss: 2.0769, grad_norm: 14.2452
2025-01-22 15:55:13,260 - mmdet3d - INFO - Epoch [1][6500/8000]	lr: 1.227e-04, eta: 5 days, 2:28:15, time: 3.556, data_time: 1.566, memory: 25945, loss/map/drivable_area/focal: 0.7493, loss/map/ped_crossing/focal: 0.6963, loss/map/walkway/focal: 0.7181, loss: 2.1637, grad_norm: 13.9715
2025-01-22 15:58:08,411 - mmdet3d - INFO - Epoch [1][6550/8000]	lr: 1.231e-04, eta: 5 days, 2:38:10, time: 3.503, data_time: 1.475, memory: 25945, loss/map/drivable_area/focal: 0.6854, loss/map/ped_crossing/focal: 0.6150, loss/map/walkway/focal: 0.6430, loss: 1.9434, grad_norm: 12.5789
2025-01-22 16:01:27,875 - mmdet3d - INFO - Epoch [1][6600/8000]	lr: 1.234e-04, eta: 5 days, 2:57:19, time: 3.989, data_time: 1.891, memory: 25945, loss/map/drivable_area/focal: 0.6732, loss/map/ped_crossing/focal: 0.6034, loss/map/walkway/focal: 0.6309, loss: 1.9075, grad_norm: 12.2135
2025-01-22 16:05:23,772 - mmdet3d - INFO - Epoch [1][6650/8000]	lr: 1.238e-04, eta: 5 days, 3:30:07, time: 4.718, data_time: 2.619, memory: 25945, loss/map/drivable_area/focal: 0.7086, loss/map/ped_crossing/focal: 0.6413, loss/map/walkway/focal: 0.6715, loss: 2.0214, grad_norm: 12.6671
2025-01-22 16:09:18,050 - mmdet3d - INFO - Epoch [1][6700/8000]	lr: 1.241e-04, eta: 5 days, 4:01:46, time: 4.686, data_time: 2.621, memory: 25945, loss/map/drivable_area/focal: 0.7940, loss/map/ped_crossing/focal: 0.7208, loss/map/walkway/focal: 0.7520, loss: 2.2668, grad_norm: 14.0857
2025-01-22 16:12:40,386 - mmdet3d - INFO - Epoch [1][6750/8000]	lr: 1.245e-04, eta: 5 days, 4:20:48, time: 4.047, data_time: 2.057, memory: 25945, loss/map/drivable_area/focal: 0.7808, loss/map/ped_crossing/focal: 0.7203, loss/map/walkway/focal: 0.7467, loss: 2.2478, grad_norm: 12.5811
2025-01-22 16:15:34,978 - mmdet3d - INFO - Epoch [1][6800/8000]	lr: 1.248e-04, eta: 5 days, 4:29:05, time: 3.492, data_time: 1.510, memory: 25945, loss/map/drivable_area/focal: 0.7834, loss/map/ped_crossing/focal: 0.7017, loss/map/walkway/focal: 0.7370, loss: 2.2221, grad_norm: 12.7852
2025-01-22 16:18:12,509 - mmdet3d - INFO - Epoch [1][6850/8000]	lr: 1.252e-04, eta: 5 days, 4:30:50, time: 3.151, data_time: 1.028, memory: 25945, loss/map/drivable_area/focal: 0.6573, loss/map/ped_crossing/focal: 0.5806, loss/map/walkway/focal: 0.6118, loss: 1.8498, grad_norm: 11.8836
2025-01-22 16:20:42,734 - mmdet3d - INFO - Epoch [1][6900/8000]	lr: 1.256e-04, eta: 5 days, 4:29:50, time: 3.005, data_time: 0.965, memory: 25945, loss/map/drivable_area/focal: 0.7183, loss/map/ped_crossing/focal: 0.6468, loss/map/walkway/focal: 0.6787, loss: 2.0437, grad_norm: 12.6889
2025-01-22 16:23:33,378 - mmdet3d - INFO - Epoch [1][6950/8000]	lr: 1.259e-04, eta: 5 days, 4:36:18, time: 3.413, data_time: 1.339, memory: 25945, loss/map/drivable_area/focal: 0.7696, loss/map/ped_crossing/focal: 0.6829, loss/map/walkway/focal: 0.7170, loss: 2.1695, grad_norm: 13.6096
2025-01-22 16:26:43,348 - mmdet3d - INFO - Epoch [1][7000/8000]	lr: 1.263e-04, eta: 5 days, 4:49:41, time: 3.799, data_time: 1.699, memory: 25945, loss/map/drivable_area/focal: 0.7300, loss/map/ped_crossing/focal: 0.6720, loss/map/walkway/focal: 0.6993, loss: 2.1013, grad_norm: 14.5229
2025-01-22 16:31:12,197 - mmdet3d - INFO - Epoch [1][7050/8000]	lr: 1.267e-04, eta: 5 days, 5:31:21, time: 5.377, data_time: 3.262, memory: 25945, loss/map/drivable_area/focal: 0.7003, loss/map/ped_crossing/focal: 0.6400, loss/map/walkway/focal: 0.6721, loss: 2.0124, grad_norm: 14.1314
2025-01-22 16:38:04,555 - mmdet3d - INFO - Epoch [1][7100/8000]	lr: 1.270e-04, eta: 5 days, 7:03:52, time: 8.247, data_time: 6.097, memory: 25945, loss/map/drivable_area/focal: 0.8537, loss/map/ped_crossing/focal: 0.7807, loss/map/walkway/focal: 0.8145, loss: 2.4488, grad_norm: 13.2304
2025-01-22 16:44:11,997 - mmdet3d - INFO - Epoch [1][7150/8000]	lr: 1.274e-04, eta: 5 days, 8:19:00, time: 7.349, data_time: 5.263, memory: 25945, loss/map/drivable_area/focal: 0.6865, loss/map/ped_crossing/focal: 0.6249, loss/map/walkway/focal: 0.6516, loss: 1.9630, grad_norm: 12.8389
2025-01-22 16:47:28,738 - mmdet3d - INFO - Epoch [1][7200/8000]	lr: 1.278e-04, eta: 5 days, 8:32:37, time: 3.935, data_time: 1.797, memory: 25945, loss/map/drivable_area/focal: 0.8101, loss/map/ped_crossing/focal: 0.7501, loss/map/walkway/focal: 0.7711, loss: 2.3312, grad_norm: 12.5865
2025-01-22 16:50:18,785 - mmdet3d - INFO - Epoch [1][7250/8000]	lr: 1.282e-04, eta: 5 days, 8:36:38, time: 3.401, data_time: 1.331, memory: 25945, loss/map/drivable_area/focal: 0.6595, loss/map/ped_crossing/focal: 0.6078, loss/map/walkway/focal: 0.6298, loss: 1.8971, grad_norm: 11.7037
2025-01-22 16:53:00,551 - mmdet3d - INFO - Epoch [1][7300/8000]	lr: 1.286e-04, eta: 5 days, 8:37:40, time: 3.235, data_time: 1.127, memory: 25945, loss/map/drivable_area/focal: 0.8002, loss/map/ped_crossing/focal: 0.7370, loss/map/walkway/focal: 0.7603, loss: 2.2976, grad_norm: 11.4528
2025-01-22 16:55:49,347 - mmdet3d - INFO - Epoch [1][7350/8000]	lr: 1.290e-04, eta: 5 days, 8:41:05, time: 3.376, data_time: 1.306, memory: 25945, loss/map/drivable_area/focal: 0.6822, loss/map/ped_crossing/focal: 0.6193, loss/map/walkway/focal: 0.6446, loss: 1.9461, grad_norm: 12.5672
2025-01-22 16:58:44,418 - mmdet3d - INFO - Epoch [1][7400/8000]	lr: 1.294e-04, eta: 5 days, 8:46:34, time: 3.501, data_time: 1.404, memory: 25945, loss/map/drivable_area/focal: 0.6928, loss/map/ped_crossing/focal: 0.6208, loss/map/walkway/focal: 0.6563, loss: 1.9700, grad_norm: nan
2025-01-22 17:01:36,723 - mmdet3d - INFO - Epoch [1][7450/8000]	lr: 1.297e-04, eta: 5 days, 8:51:00, time: 3.446, data_time: 1.357, memory: 25945, loss/map/drivable_area/focal: 0.6877, loss/map/ped_crossing/focal: 0.6258, loss/map/walkway/focal: 0.6533, loss: 1.9668, grad_norm: 12.7589
2025-01-22 17:04:40,395 - mmdet3d - INFO - Epoch [1][7500/8000]	lr: 1.301e-04, eta: 5 days, 8:59:11, time: 3.673, data_time: 1.510, memory: 25945, loss/map/drivable_area/focal: 0.6642, loss/map/ped_crossing/focal: 0.5956, loss/map/walkway/focal: 0.6321, loss: 1.8919, grad_norm: 12.9487
2025-01-22 17:07:41,938 - mmdet3d - INFO - Epoch [1][7550/8000]	lr: 1.305e-04, eta: 5 days, 9:06:31, time: 3.631, data_time: 1.513, memory: 25945, loss/map/drivable_area/focal: 0.7085, loss/map/ped_crossing/focal: 0.6348, loss/map/walkway/focal: 0.6662, loss: 2.0095, grad_norm: 11.7978
2025-01-22 17:10:17,626 - mmdet3d - INFO - Epoch [1][7600/8000]	lr: 1.309e-04, eta: 5 days, 9:05:03, time: 3.114, data_time: 1.027, memory: 25945, loss/map/drivable_area/focal: 0.6673, loss/map/ped_crossing/focal: 0.6203, loss/map/walkway/focal: 0.6433, loss: 1.9310, grad_norm: 12.7471
2025-01-22 17:12:47,616 - mmdet3d - INFO - Epoch [1][7650/8000]	lr: 1.313e-04, eta: 5 days, 9:01:42, time: 3.000, data_time: 0.905, memory: 25945, loss/map/drivable_area/focal: 0.7883, loss/map/ped_crossing/focal: 0.7166, loss/map/walkway/focal: 0.7446, loss: 2.2495, grad_norm: 14.3889
2025-01-22 17:15:16,843 - mmdet3d - INFO - Epoch [1][7700/8000]	lr: 1.318e-04, eta: 5 days, 8:58:06, time: 2.985, data_time: 0.828, memory: 25945, loss/map/drivable_area/focal: 0.6371, loss/map/ped_crossing/focal: 0.5782, loss/map/walkway/focal: 0.6006, loss: 1.8159, grad_norm: 11.8885
2025-01-22 17:17:49,963 - mmdet3d - INFO - Epoch [1][7750/8000]	lr: 1.322e-04, eta: 5 days, 8:55:47, time: 3.062, data_time: 0.899, memory: 25945, loss/map/drivable_area/focal: 0.6946, loss/map/ped_crossing/focal: 0.6472, loss/map/walkway/focal: 0.6669, loss: 2.0087, grad_norm: 12.2180
2025-01-22 17:20:23,863 - mmdet3d - INFO - Epoch [1][7800/8000]	lr: 1.326e-04, eta: 5 days, 8:53:43, time: 3.078, data_time: 0.982, memory: 25945, loss/map/drivable_area/focal: 0.7817, loss/map/ped_crossing/focal: 0.7218, loss/map/walkway/focal: 0.7467, loss: 2.2502, grad_norm: 13.1714
2025-01-22 17:22:56,774 - mmdet3d - INFO - Epoch [1][7850/8000]	lr: 1.330e-04, eta: 5 days, 8:51:20, time: 3.058, data_time: 0.923, memory: 25945, loss/map/drivable_area/focal: 0.7251, loss/map/ped_crossing/focal: 0.6621, loss/map/walkway/focal: 0.6879, loss: 2.0751, grad_norm: 12.1208
2025-01-22 17:25:50,523 - mmdet3d - INFO - Epoch [1][7900/8000]	lr: 1.334e-04, eta: 5 days, 8:55:37, time: 3.475, data_time: 1.428, memory: 25945, loss/map/drivable_area/focal: 0.6994, loss/map/ped_crossing/focal: 0.6288, loss/map/walkway/focal: 0.6573, loss: 1.9856, grad_norm: 12.5891
2025-01-22 17:28:41,140 - mmdet3d - INFO - Epoch [1][7950/8000]	lr: 1.338e-04, eta: 5 days, 8:58:50, time: 3.412, data_time: 1.309, memory: 25945, loss/map/drivable_area/focal: 0.6740, loss/map/ped_crossing/focal: 0.6169, loss/map/walkway/focal: 0.6397, loss: 1.9306, grad_norm: 12.3389
2025-01-22 17:31:29,520 - mmdet3d - INFO - Epoch [1][8000/8000]	lr: 1.342e-04, eta: 5 days, 9:01:15, time: 3.368, data_time: 1.284, memory: 25945, loss/map/drivable_area/focal: 0.7032, loss/map/ped_crossing/focal: 0.6426, loss/map/walkway/focal: 0.6711, loss: 2.0169, grad_norm: 12.0149
2025-01-22 17:31:29,774 - mmdet3d - INFO - Saving checkpoint at 1 epochs
